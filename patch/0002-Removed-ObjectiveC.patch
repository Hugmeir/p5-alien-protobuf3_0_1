From eb951d5c0c681361ad21410f3cb246cd9a951e3e Mon Sep 17 00:00:00 2001
From: Brian Fraser <brian.fraser@booking.com>
Date: Sat, 21 Nov 2020 17:46:16 +0100
Subject: [PATCH 2/8] Removed ObjectiveC

Another step in getting this to compile for just C++
---
 BUILD                                         |   21 -
 Makefile.am                                   |  176 +-
 Makefile.in                                   |  184 +-
 benchmarks/Makefile.in                        |   20 +-
 cmake/extract_includes.bat.in                 |    3 -
 cmake/libprotoc.cmake                         |   12 -
 cmake/tests.cmake                             |    1 -
 configure                                     |    2 +-
 configure.ac                                  |   12 +-
 conformance/Makefile.am                       |   31 +-
 conformance/Makefile.in                       |  160 +-
 conformance/conformance_objc.m                |  179 --
 conformance/failure_list_objc.txt             |    4 -
 generate_descriptor_proto.sh                  |    5 -
 objectivec/GPBProtocolBuffers.m               |   66 -
 src/Makefile.am                               |   26 -
 src/Makefile.in                               |  174 +-
 .../compiler/objectivec/objectivec_enum.cc    |  223 ---
 .../compiler/objectivec/objectivec_enum.h     |   73 -
 .../objectivec/objectivec_enum_field.cc       |  151 --
 .../objectivec/objectivec_enum_field.h        |   80 -
 .../objectivec/objectivec_extension.cc        |  136 --
 .../objectivec/objectivec_extension.h         |   69 -
 .../compiler/objectivec/objectivec_field.cc   |  477 -----
 .../compiler/objectivec/objectivec_field.h    |  194 --
 .../compiler/objectivec/objectivec_file.cc    |  564 ------
 .../compiler/objectivec/objectivec_file.h     |   87 -
 .../objectivec/objectivec_generator.cc        |  166 --
 .../objectivec/objectivec_generator.h         |   72 -
 .../compiler/objectivec/objectivec_helpers.cc | 1671 -----------------
 .../compiler/objectivec/objectivec_helpers.h  |  281 ---
 .../objectivec/objectivec_helpers_unittest.cc |  257 ---
 .../objectivec/objectivec_map_field.cc        |  180 --
 .../objectivec/objectivec_map_field.h         |   67 -
 .../compiler/objectivec/objectivec_message.cc |  630 -------
 .../compiler/objectivec/objectivec_message.h  |   99 -
 .../objectivec/objectivec_message_field.cc    |  108 --
 .../objectivec/objectivec_message_field.h     |   81 -
 .../compiler/objectivec/objectivec_oneof.cc   |  140 --
 .../compiler/objectivec/objectivec_oneof.h    |   79 -
 .../objectivec/objectivec_primitive_field.cc  |  192 --
 .../objectivec/objectivec_primitive_field.h   |   92 -
 42 files changed, 55 insertions(+), 7190 deletions(-)
 delete mode 100644 conformance/conformance_objc.m
 delete mode 100644 conformance/failure_list_objc.txt
 delete mode 100644 objectivec/GPBProtocolBuffers.m
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_enum.cc
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_enum.h
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_enum_field.cc
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_enum_field.h
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_extension.cc
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_extension.h
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_field.cc
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_field.h
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_file.cc
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_file.h
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_generator.cc
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_generator.h
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_helpers.cc
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_helpers.h
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_map_field.cc
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_map_field.h
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_message.cc
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_message.h
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_message_field.cc
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_message_field.h
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_oneof.cc
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_oneof.h
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_primitive_field.cc
 delete mode 100644 src/google/protobuf/compiler/objectivec/objectivec_primitive_field.h

diff --git a/BUILD b/BUILD
index f14b9e1..f1e90cb 100644
--- a/BUILD
+++ b/BUILD
@@ -180,14 +180,6 @@ cc_library(
     deps = [":protobuf_lite"],
 )
 
-objc_library(
-    name = "protobuf_objc",
-    hdrs = ["objectivec/GPBProtocolBuffers.h"],
-    includes = ["objectivec"],
-    non_arc_srcs = ["objectivec/GPBProtocolBuffers.m"],
-    visibility = ["//visibility:public"],
-)
-
 RELATIVE_WELL_KNOWN_PROTOS = [
     # AUTOGEN(well_known_protos)
     "google/protobuf/any.proto",
@@ -262,18 +254,6 @@ cc_library(
         "src/google/protobuf/compiler/csharp/csharp_source_generator_base.cc",
         "src/google/protobuf/compiler/csharp/csharp_wrapper_field.cc",
         "src/google/protobuf/compiler/js/js_generator.cc",
-        "src/google/protobuf/compiler/objectivec/objectivec_enum.cc",
-        "src/google/protobuf/compiler/objectivec/objectivec_enum_field.cc",
-        "src/google/protobuf/compiler/objectivec/objectivec_extension.cc",
-        "src/google/protobuf/compiler/objectivec/objectivec_field.cc",
-        "src/google/protobuf/compiler/objectivec/objectivec_file.cc",
-        "src/google/protobuf/compiler/objectivec/objectivec_generator.cc",
-        "src/google/protobuf/compiler/objectivec/objectivec_helpers.cc",
-        "src/google/protobuf/compiler/objectivec/objectivec_map_field.cc",
-        "src/google/protobuf/compiler/objectivec/objectivec_message.cc",
-        "src/google/protobuf/compiler/objectivec/objectivec_message_field.cc",
-        "src/google/protobuf/compiler/objectivec/objectivec_oneof.cc",
-        "src/google/protobuf/compiler/objectivec/objectivec_primitive_field.cc",
         "src/google/protobuf/compiler/php/php_generator.cc",
         "src/google/protobuf/compiler/plugin.cc",
         "src/google/protobuf/compiler/plugin.pb.cc",
@@ -407,7 +387,6 @@ cc_test(
         "src/google/protobuf/compiler/csharp/csharp_generator_unittest.cc",
         "src/google/protobuf/compiler/importer_unittest.cc",
         "src/google/protobuf/compiler/mock_code_generator.cc",
-        "src/google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc",
         "src/google/protobuf/compiler/parser_unittest.cc",
         "src/google/protobuf/compiler/python/python_plugin_unittest.cc",
         "src/google/protobuf/compiler/ruby/ruby_generator_unittest.cc",
diff --git a/Makefile.am b/Makefile.am
index e647067..c821f4e 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -40,10 +40,6 @@ clean-local:
 	  echo "Making clean in benchmarks"; \
 	  cd benchmarks && $(MAKE) $(AM_MAKEFLAGS) clean; \
 	fi; \
-	if test -e objectivec/DevTools; then \
-	  echo "Cleaning any ObjC pyc files"; \
-	  rm -f objectivec/DevTools/*.pyc; \
-	fi
 
 pkgconfigdir = $(libdir)/pkgconfig
 pkgconfig_DATA = protobuf.pc protobuf-lite.pc
@@ -186,176 +182,6 @@ csharp_EXTRA_DIST=                                                           \
   csharp/src/Google.Protobuf/project.json                                    \
   csharp/src/packages/repositories.config
 
-objectivec_EXTRA_DIST=                                                       \
-  objectivec/DevTools/check_version_stamps.sh                                \
-  objectivec/DevTools/compile_testing_protos.sh                              \
-  objectivec/DevTools/full_mac_build.sh                                      \
-  objectivec/DevTools/pddm.py                                                \
-  objectivec/DevTools/pddm_tests.py                                          \
-  objectivec/generate_well_known_types.sh                                    \
-  objectivec/google/protobuf/Any.pbobjc.h                                    \
-  objectivec/google/protobuf/Any.pbobjc.m                                    \
-  objectivec/google/protobuf/Api.pbobjc.h                                    \
-  objectivec/google/protobuf/Api.pbobjc.m                                    \
-  objectivec/google/protobuf/Duration.pbobjc.h                               \
-  objectivec/google/protobuf/Duration.pbobjc.m                               \
-  objectivec/google/protobuf/Empty.pbobjc.h                                  \
-  objectivec/google/protobuf/Empty.pbobjc.m                                  \
-  objectivec/google/protobuf/FieldMask.pbobjc.h                              \
-  objectivec/google/protobuf/FieldMask.pbobjc.m                              \
-  objectivec/google/protobuf/SourceContext.pbobjc.h                          \
-  objectivec/google/protobuf/SourceContext.pbobjc.m                          \
-  objectivec/google/protobuf/Struct.pbobjc.h                                 \
-  objectivec/google/protobuf/Struct.pbobjc.m                                 \
-  objectivec/google/protobuf/Timestamp.pbobjc.h                              \
-  objectivec/google/protobuf/Timestamp.pbobjc.m                              \
-  objectivec/google/protobuf/Type.pbobjc.h                                   \
-  objectivec/google/protobuf/Type.pbobjc.m                                   \
-  objectivec/google/protobuf/Wrappers.pbobjc.h                               \
-  objectivec/google/protobuf/Wrappers.pbobjc.m                               \
-  objectivec/GPBArray.h                                                      \
-  objectivec/GPBArray.m                                                      \
-  objectivec/GPBArray_PackagePrivate.h                                       \
-  objectivec/GPBBootstrap.h                                                  \
-  objectivec/GPBCodedInputStream.h                                           \
-  objectivec/GPBCodedInputStream.m                                           \
-  objectivec/GPBCodedInputStream_PackagePrivate.h                            \
-  objectivec/GPBCodedOutputStream.h                                          \
-  objectivec/GPBCodedOutputStream.m                                          \
-  objectivec/GPBCodedOutputStream_PackagePrivate.h                           \
-  objectivec/GPBDescriptor.h                                                 \
-  objectivec/GPBDescriptor.m                                                 \
-  objectivec/GPBDescriptor_PackagePrivate.h                                  \
-  objectivec/GPBDictionary.h                                                 \
-  objectivec/GPBDictionary.m                                                 \
-  objectivec/GPBDictionary_PackagePrivate.h                                  \
-  objectivec/GPBExtensionInternals.h                                         \
-  objectivec/GPBExtensionInternals.m                                         \
-  objectivec/GPBExtensionRegistry.h                                          \
-  objectivec/GPBExtensionRegistry.m                                          \
-  objectivec/GPBMessage.h                                                    \
-  objectivec/GPBMessage.m                                                    \
-  objectivec/GPBMessage_PackagePrivate.h                                     \
-  objectivec/GPBProtocolBuffers.h                                            \
-  objectivec/GPBProtocolBuffers.m                                            \
-  objectivec/GPBProtocolBuffers_RuntimeSupport.h                             \
-  objectivec/GPBRootObject.h                                                 \
-  objectivec/GPBRootObject.m                                                 \
-  objectivec/GPBRootObject_PackagePrivate.h                                  \
-  objectivec/GPBRuntimeTypes.h                                               \
-  objectivec/GPBUnknownField.h                                               \
-  objectivec/GPBUnknownField.m                                               \
-  objectivec/GPBUnknownField_PackagePrivate.h                                \
-  objectivec/GPBUnknownFieldSet.h                                            \
-  objectivec/GPBUnknownFieldSet.m                                            \
-  objectivec/GPBUnknownFieldSet_PackagePrivate.h                             \
-  objectivec/GPBUtilities.h                                                  \
-  objectivec/GPBUtilities.m                                                  \
-  objectivec/GPBUtilities_PackagePrivate.h                                   \
-  objectivec/GPBWellKnownTypes.h                                             \
-  objectivec/GPBWellKnownTypes.m                                             \
-  objectivec/GPBWireFormat.h                                                 \
-  objectivec/GPBWireFormat.m                                                 \
-  objectivec/ProtocolBuffers_iOS.xcodeproj/project.pbxproj                   \
-  objectivec/ProtocolBuffers_iOS.xcodeproj/project.xcworkspace/contents.xcworkspacedata \
-  objectivec/ProtocolBuffers_iOS.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings \
-  objectivec/ProtocolBuffers_iOS.xcodeproj/xcshareddata/xcschemes/PerformanceTests.xcscheme \
-  objectivec/ProtocolBuffers_iOS.xcodeproj/xcshareddata/xcschemes/ProtocolBuffers.xcscheme \
-  objectivec/ProtocolBuffers_OSX.xcodeproj/project.pbxproj                   \
-  objectivec/ProtocolBuffers_OSX.xcodeproj/project.xcworkspace/contents.xcworkspacedata \
-  objectivec/ProtocolBuffers_OSX.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings \
-  objectivec/ProtocolBuffers_OSX.xcodeproj/xcshareddata/xcschemes/PerformanceTests.xcscheme \
-  objectivec/ProtocolBuffers_OSX.xcodeproj/xcshareddata/xcschemes/ProtocolBuffers.xcscheme \
-  objectivec/README.md                                                       \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester.xcodeproj/project.pbxproj \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester.xcodeproj/project.xcworkspace/contents.xcworkspacedata \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester.xcodeproj/xcshareddata/xcschemes/OSXCocoaPodsTester.xcscheme \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester/AppDelegate.h \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester/AppDelegate.m \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester/Assets.xcassets/AppIcon.appiconset/Contents.json \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester/Base.lproj/MainMenu.xib \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester/Info.plist \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester/main.m    \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/Podfile-framework            \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/Podfile-static               \
-  objectivec/Tests/CocoaPods/README.md                                       \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/Podfile-framework            \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/Podfile-static               \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester.xcodeproj/project.pbxproj \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester.xcodeproj/project.xcworkspace/contents.xcworkspacedata \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester.xcodeproj/xcshareddata/xcschemes/iOSCocoaPodsTester.xcscheme \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/AppDelegate.h \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/AppDelegate.m \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/Assets.xcassets/AppIcon.appiconset/Contents.json \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/Base.lproj/LaunchScreen.storyboard \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/Base.lproj/Main.storyboard \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/Info.plist \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/ViewController.h \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/ViewController.m \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/main.m    \
-  objectivec/Tests/CocoaPods/run_tests.sh                                    \
-  objectivec/Tests/golden_message                                            \
-  objectivec/Tests/golden_packed_fields_message                              \
-  objectivec/Tests/GPBARCUnittestProtos.m                                    \
-  objectivec/Tests/GPBArrayTests.m                                           \
-  objectivec/Tests/GPBCodedInputStreamTests.m                                \
-  objectivec/Tests/GPBCodedOuputStreamTests.m                                \
-  objectivec/Tests/GPBConcurrencyTests.m                                     \
-  objectivec/Tests/GPBDescriptorTests.m                                      \
-  objectivec/Tests/GPBDictionaryTests+Bool.m                                 \
-  objectivec/Tests/GPBDictionaryTests+Int32.m                                \
-  objectivec/Tests/GPBDictionaryTests+Int64.m                                \
-  objectivec/Tests/GPBDictionaryTests+String.m                               \
-  objectivec/Tests/GPBDictionaryTests+UInt32.m                               \
-  objectivec/Tests/GPBDictionaryTests+UInt64.m                               \
-  objectivec/Tests/GPBDictionaryTests.pddm                                   \
-  objectivec/Tests/GPBMessageTests+Merge.m                                   \
-  objectivec/Tests/GPBMessageTests+Runtime.m                                 \
-  objectivec/Tests/GPBMessageTests+Serialization.m                           \
-  objectivec/Tests/GPBMessageTests.m                                         \
-  objectivec/Tests/GPBObjectiveCPlusPlusTest.mm                              \
-  objectivec/Tests/GPBPerfTests.m                                            \
-  objectivec/Tests/GPBSwiftTests.swift                                       \
-  objectivec/Tests/GPBTestUtilities.h                                        \
-  objectivec/Tests/GPBTestUtilities.m                                        \
-  objectivec/Tests/GPBUnittestProtos.m                                       \
-  objectivec/Tests/GPBUnittestProtos2.m                                      \
-  objectivec/Tests/GPBUnknownFieldSetTest.m                                  \
-  objectivec/Tests/GPBUtilitiesTests.m                                       \
-  objectivec/Tests/GPBWellKnownTypesTest.m                                   \
-  objectivec/Tests/GPBWireFormatTests.m                                      \
-  objectivec/Tests/iOSTestHarness/AppDelegate.m                              \
-  objectivec/Tests/iOSTestHarness/en.lproj/InfoPlist.strings                 \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/Contents.json      \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/iPad6.png          \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/iPad6_2x.png       \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/iPad7.png          \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/iPad7_2x.png       \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/iPhone6.png        \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/iPhone6_2x.png     \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/iPhone7_2x.png     \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/iPhone7_3x.png     \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/LaunchImage.launchimage/Contents.json \
-  objectivec/Tests/iOSTestHarness/Info.plist                                  \
-  objectivec/Tests/iOSTestHarness/LaunchScreen.xib                            \
-  objectivec/Tests/text_format_map_unittest_data.txt                          \
-  objectivec/Tests/text_format_unittest_data.txt                              \
-  objectivec/Tests/unittest_cycle.proto                                       \
-  objectivec/Tests/unittest_extension_chain_a.proto                           \
-  objectivec/Tests/unittest_extension_chain_b.proto                           \
-  objectivec/Tests/unittest_extension_chain_c.proto                           \
-  objectivec/Tests/unittest_extension_chain_d.proto                           \
-  objectivec/Tests/unittest_extension_chain_e.proto                           \
-  objectivec/Tests/unittest_extension_chain_f.proto                           \
-  objectivec/Tests/unittest_extension_chain_g.proto                           \
-  objectivec/Tests/unittest_objc.proto                                        \
-  objectivec/Tests/unittest_objc_startup.proto                                \
-  objectivec/Tests/unittest_runtime_proto2.proto                              \
-  objectivec/Tests/unittest_runtime_proto3.proto                              \
-  objectivec/Tests/UnitTests-Bridging-Header.h                                \
-  objectivec/Tests/UnitTests-Info.plist                                       \
-  Protobuf.podspec
-
 php_EXTRA_DIST=                                              \
   php/src/phpdoc.dist.xml                                    \
   php/src/Google/Protobuf/Internal/DescriptorPool.php        \
@@ -587,7 +413,7 @@ js_EXTRA_DIST=                              \
   js/testbinary.proto                       \
   js/testempty.proto
 
-all_EXTRA_DIST=$(csharp_EXTRA_DIST) $(objectivec_EXTRA_DIST) $(php_EXTRA_DIST) $(python_EXTRA_DIST) $(ruby_EXTRA_DIST) $(js_EXTRA_DIST)
+all_EXTRA_DIST=$(csharp_EXTRA_DIST) $(php_EXTRA_DIST) $(python_EXTRA_DIST) $(ruby_EXTRA_DIST) $(js_EXTRA_DIST)
 
 EXTRA_DIST = $(@DIST_LANG@_EXTRA_DIST)   \
   autogen.sh                             \
diff --git a/Makefile.in b/Makefile.in
index 56e2311..1b83cbf 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -107,11 +107,11 @@ am__v_P_1 = :
 AM_V_GEN = $(am__v_GEN_@AM_V@)
 am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
 am__v_GEN_0 = @echo "  GEN     " $@;
-am__v_GEN_1 = 
+am__v_GEN_1 =
 AM_V_at = $(am__v_at_@AM_V@)
 am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
 am__v_at_0 = @
-am__v_at_1 = 
+am__v_at_1 =
 SOURCES =
 DIST_SOURCES =
 RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
@@ -277,9 +277,6 @@ MANIFEST_TOOL = @MANIFEST_TOOL@
 MKDIR_P = @MKDIR_P@
 NM = @NM@
 NMEDIT = @NMEDIT@
-OBJC = @OBJC@
-OBJCDEPMODE = @OBJCDEPMODE@
-OBJCFLAGS = @OBJCFLAGS@
 OBJDUMP = @OBJDUMP@
 OBJEXT = @OBJEXT@
 OTOOL = @OTOOL@
@@ -312,7 +309,6 @@ ac_ct_AR = @ac_ct_AR@
 ac_ct_CC = @ac_ct_CC@
 ac_ct_CXX = @ac_ct_CXX@
 ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
-ac_ct_OBJC = @ac_ct_OBJC@
 acx_pthread_config = @acx_pthread_config@
 am__include = @am__include@
 am__leading_dot = @am__leading_dot@
@@ -513,176 +509,6 @@ csharp_EXTRA_DIST = \
   csharp/src/Google.Protobuf/project.json                                    \
   csharp/src/packages/repositories.config
 
-objectivec_EXTRA_DIST = \
-  objectivec/DevTools/check_version_stamps.sh                                \
-  objectivec/DevTools/compile_testing_protos.sh                              \
-  objectivec/DevTools/full_mac_build.sh                                      \
-  objectivec/DevTools/pddm.py                                                \
-  objectivec/DevTools/pddm_tests.py                                          \
-  objectivec/generate_well_known_types.sh                                    \
-  objectivec/google/protobuf/Any.pbobjc.h                                    \
-  objectivec/google/protobuf/Any.pbobjc.m                                    \
-  objectivec/google/protobuf/Api.pbobjc.h                                    \
-  objectivec/google/protobuf/Api.pbobjc.m                                    \
-  objectivec/google/protobuf/Duration.pbobjc.h                               \
-  objectivec/google/protobuf/Duration.pbobjc.m                               \
-  objectivec/google/protobuf/Empty.pbobjc.h                                  \
-  objectivec/google/protobuf/Empty.pbobjc.m                                  \
-  objectivec/google/protobuf/FieldMask.pbobjc.h                              \
-  objectivec/google/protobuf/FieldMask.pbobjc.m                              \
-  objectivec/google/protobuf/SourceContext.pbobjc.h                          \
-  objectivec/google/protobuf/SourceContext.pbobjc.m                          \
-  objectivec/google/protobuf/Struct.pbobjc.h                                 \
-  objectivec/google/protobuf/Struct.pbobjc.m                                 \
-  objectivec/google/protobuf/Timestamp.pbobjc.h                              \
-  objectivec/google/protobuf/Timestamp.pbobjc.m                              \
-  objectivec/google/protobuf/Type.pbobjc.h                                   \
-  objectivec/google/protobuf/Type.pbobjc.m                                   \
-  objectivec/google/protobuf/Wrappers.pbobjc.h                               \
-  objectivec/google/protobuf/Wrappers.pbobjc.m                               \
-  objectivec/GPBArray.h                                                      \
-  objectivec/GPBArray.m                                                      \
-  objectivec/GPBArray_PackagePrivate.h                                       \
-  objectivec/GPBBootstrap.h                                                  \
-  objectivec/GPBCodedInputStream.h                                           \
-  objectivec/GPBCodedInputStream.m                                           \
-  objectivec/GPBCodedInputStream_PackagePrivate.h                            \
-  objectivec/GPBCodedOutputStream.h                                          \
-  objectivec/GPBCodedOutputStream.m                                          \
-  objectivec/GPBCodedOutputStream_PackagePrivate.h                           \
-  objectivec/GPBDescriptor.h                                                 \
-  objectivec/GPBDescriptor.m                                                 \
-  objectivec/GPBDescriptor_PackagePrivate.h                                  \
-  objectivec/GPBDictionary.h                                                 \
-  objectivec/GPBDictionary.m                                                 \
-  objectivec/GPBDictionary_PackagePrivate.h                                  \
-  objectivec/GPBExtensionInternals.h                                         \
-  objectivec/GPBExtensionInternals.m                                         \
-  objectivec/GPBExtensionRegistry.h                                          \
-  objectivec/GPBExtensionRegistry.m                                          \
-  objectivec/GPBMessage.h                                                    \
-  objectivec/GPBMessage.m                                                    \
-  objectivec/GPBMessage_PackagePrivate.h                                     \
-  objectivec/GPBProtocolBuffers.h                                            \
-  objectivec/GPBProtocolBuffers.m                                            \
-  objectivec/GPBProtocolBuffers_RuntimeSupport.h                             \
-  objectivec/GPBRootObject.h                                                 \
-  objectivec/GPBRootObject.m                                                 \
-  objectivec/GPBRootObject_PackagePrivate.h                                  \
-  objectivec/GPBRuntimeTypes.h                                               \
-  objectivec/GPBUnknownField.h                                               \
-  objectivec/GPBUnknownField.m                                               \
-  objectivec/GPBUnknownField_PackagePrivate.h                                \
-  objectivec/GPBUnknownFieldSet.h                                            \
-  objectivec/GPBUnknownFieldSet.m                                            \
-  objectivec/GPBUnknownFieldSet_PackagePrivate.h                             \
-  objectivec/GPBUtilities.h                                                  \
-  objectivec/GPBUtilities.m                                                  \
-  objectivec/GPBUtilities_PackagePrivate.h                                   \
-  objectivec/GPBWellKnownTypes.h                                             \
-  objectivec/GPBWellKnownTypes.m                                             \
-  objectivec/GPBWireFormat.h                                                 \
-  objectivec/GPBWireFormat.m                                                 \
-  objectivec/ProtocolBuffers_iOS.xcodeproj/project.pbxproj                   \
-  objectivec/ProtocolBuffers_iOS.xcodeproj/project.xcworkspace/contents.xcworkspacedata \
-  objectivec/ProtocolBuffers_iOS.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings \
-  objectivec/ProtocolBuffers_iOS.xcodeproj/xcshareddata/xcschemes/PerformanceTests.xcscheme \
-  objectivec/ProtocolBuffers_iOS.xcodeproj/xcshareddata/xcschemes/ProtocolBuffers.xcscheme \
-  objectivec/ProtocolBuffers_OSX.xcodeproj/project.pbxproj                   \
-  objectivec/ProtocolBuffers_OSX.xcodeproj/project.xcworkspace/contents.xcworkspacedata \
-  objectivec/ProtocolBuffers_OSX.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings \
-  objectivec/ProtocolBuffers_OSX.xcodeproj/xcshareddata/xcschemes/PerformanceTests.xcscheme \
-  objectivec/ProtocolBuffers_OSX.xcodeproj/xcshareddata/xcschemes/ProtocolBuffers.xcscheme \
-  objectivec/README.md                                                       \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester.xcodeproj/project.pbxproj \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester.xcodeproj/project.xcworkspace/contents.xcworkspacedata \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester.xcodeproj/xcshareddata/xcschemes/OSXCocoaPodsTester.xcscheme \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester/AppDelegate.h \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester/AppDelegate.m \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester/Assets.xcassets/AppIcon.appiconset/Contents.json \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester/Base.lproj/MainMenu.xib \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester/Info.plist \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/OSXCocoaPodsTester/main.m    \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/Podfile-framework            \
-  objectivec/Tests/CocoaPods/OSXCocoaPodsTester/Podfile-static               \
-  objectivec/Tests/CocoaPods/README.md                                       \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/Podfile-framework            \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/Podfile-static               \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester.xcodeproj/project.pbxproj \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester.xcodeproj/project.xcworkspace/contents.xcworkspacedata \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester.xcodeproj/xcshareddata/xcschemes/iOSCocoaPodsTester.xcscheme \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/AppDelegate.h \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/AppDelegate.m \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/Assets.xcassets/AppIcon.appiconset/Contents.json \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/Base.lproj/LaunchScreen.storyboard \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/Base.lproj/Main.storyboard \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/Info.plist \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/ViewController.h \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/ViewController.m \
-  objectivec/Tests/CocoaPods/iOSCocoaPodsTester/iOSCocoaPodsTester/main.m    \
-  objectivec/Tests/CocoaPods/run_tests.sh                                    \
-  objectivec/Tests/golden_message                                            \
-  objectivec/Tests/golden_packed_fields_message                              \
-  objectivec/Tests/GPBARCUnittestProtos.m                                    \
-  objectivec/Tests/GPBArrayTests.m                                           \
-  objectivec/Tests/GPBCodedInputStreamTests.m                                \
-  objectivec/Tests/GPBCodedOuputStreamTests.m                                \
-  objectivec/Tests/GPBConcurrencyTests.m                                     \
-  objectivec/Tests/GPBDescriptorTests.m                                      \
-  objectivec/Tests/GPBDictionaryTests+Bool.m                                 \
-  objectivec/Tests/GPBDictionaryTests+Int32.m                                \
-  objectivec/Tests/GPBDictionaryTests+Int64.m                                \
-  objectivec/Tests/GPBDictionaryTests+String.m                               \
-  objectivec/Tests/GPBDictionaryTests+UInt32.m                               \
-  objectivec/Tests/GPBDictionaryTests+UInt64.m                               \
-  objectivec/Tests/GPBDictionaryTests.pddm                                   \
-  objectivec/Tests/GPBMessageTests+Merge.m                                   \
-  objectivec/Tests/GPBMessageTests+Runtime.m                                 \
-  objectivec/Tests/GPBMessageTests+Serialization.m                           \
-  objectivec/Tests/GPBMessageTests.m                                         \
-  objectivec/Tests/GPBObjectiveCPlusPlusTest.mm                              \
-  objectivec/Tests/GPBPerfTests.m                                            \
-  objectivec/Tests/GPBSwiftTests.swift                                       \
-  objectivec/Tests/GPBTestUtilities.h                                        \
-  objectivec/Tests/GPBTestUtilities.m                                        \
-  objectivec/Tests/GPBUnittestProtos.m                                       \
-  objectivec/Tests/GPBUnittestProtos2.m                                      \
-  objectivec/Tests/GPBUnknownFieldSetTest.m                                  \
-  objectivec/Tests/GPBUtilitiesTests.m                                       \
-  objectivec/Tests/GPBWellKnownTypesTest.m                                   \
-  objectivec/Tests/GPBWireFormatTests.m                                      \
-  objectivec/Tests/iOSTestHarness/AppDelegate.m                              \
-  objectivec/Tests/iOSTestHarness/en.lproj/InfoPlist.strings                 \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/Contents.json      \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/iPad6.png          \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/iPad6_2x.png       \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/iPad7.png          \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/iPad7_2x.png       \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/iPhone6.png        \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/iPhone6_2x.png     \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/iPhone7_2x.png     \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/AppIcon.appiconset/iPhone7_3x.png     \
-  objectivec/Tests/iOSTestHarness/Images.xcassets/LaunchImage.launchimage/Contents.json \
-  objectivec/Tests/iOSTestHarness/Info.plist                                  \
-  objectivec/Tests/iOSTestHarness/LaunchScreen.xib                            \
-  objectivec/Tests/text_format_map_unittest_data.txt                          \
-  objectivec/Tests/text_format_unittest_data.txt                              \
-  objectivec/Tests/unittest_cycle.proto                                       \
-  objectivec/Tests/unittest_extension_chain_a.proto                           \
-  objectivec/Tests/unittest_extension_chain_b.proto                           \
-  objectivec/Tests/unittest_extension_chain_c.proto                           \
-  objectivec/Tests/unittest_extension_chain_d.proto                           \
-  objectivec/Tests/unittest_extension_chain_e.proto                           \
-  objectivec/Tests/unittest_extension_chain_f.proto                           \
-  objectivec/Tests/unittest_extension_chain_g.proto                           \
-  objectivec/Tests/unittest_objc.proto                                        \
-  objectivec/Tests/unittest_objc_startup.proto                                \
-  objectivec/Tests/unittest_runtime_proto2.proto                              \
-  objectivec/Tests/unittest_runtime_proto3.proto                              \
-  objectivec/Tests/UnitTests-Bridging-Header.h                                \
-  objectivec/Tests/UnitTests-Info.plist                                       \
-  Protobuf.podspec
-
 php_EXTRA_DIST = \
   php/src/phpdoc.dist.xml                                    \
   php/src/Google/Protobuf/Internal/DescriptorPool.php        \
@@ -914,7 +740,7 @@ js_EXTRA_DIST = \
   js/testbinary.proto                       \
   js/testempty.proto
 
-all_EXTRA_DIST = $(csharp_EXTRA_DIST) $(objectivec_EXTRA_DIST) $(php_EXTRA_DIST) $(python_EXTRA_DIST) $(ruby_EXTRA_DIST) $(js_EXTRA_DIST)
+all_EXTRA_DIST = $(csharp_EXTRA_DIST) $(php_EXTRA_DIST) $(python_EXTRA_DIST) $(ruby_EXTRA_DIST) $(js_EXTRA_DIST)
 EXTRA_DIST = $(@DIST_LANG@_EXTRA_DIST)   \
   autogen.sh                             \
   generate_descriptor_proto.sh           \
@@ -1524,10 +1350,6 @@ clean-local:
 	  echo "Making clean in benchmarks"; \
 	  cd benchmarks && $(MAKE) $(AM_MAKEFLAGS) clean; \
 	fi; \
-	if test -e objectivec/DevTools; then \
-	  echo "Cleaning any ObjC pyc files"; \
-	  rm -f objectivec/DevTools/*.pyc; \
-	fi
 
 # Tell versions [3.59,3.63) of GNU make to not export all variables.
 # Otherwise a system limit (for SysV at least) may be exceeded.
diff --git a/benchmarks/Makefile.in b/benchmarks/Makefile.in
index 0c731d4..c84ada4 100644
--- a/benchmarks/Makefile.in
+++ b/benchmarks/Makefile.in
@@ -111,7 +111,7 @@ generate_datasets_DEPENDENCIES = $(top_srcdir)/src/libprotobuf.la
 AM_V_lt = $(am__v_lt_@AM_V@)
 am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
 am__v_lt_0 = --silent
-am__v_lt_1 = 
+am__v_lt_1 =
 AM_V_P = $(am__v_P_@AM_V@)
 am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
 am__v_P_0 = false
@@ -119,11 +119,11 @@ am__v_P_1 = :
 AM_V_GEN = $(am__v_GEN_@AM_V@)
 am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
 am__v_GEN_0 = @echo "  GEN     " $@;
-am__v_GEN_1 = 
+am__v_GEN_1 =
 AM_V_at = $(am__v_at_@AM_V@)
 am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
 am__v_at_0 = @
-am__v_at_1 = 
+am__v_at_1 =
 DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
 depcomp = $(SHELL) $(top_srcdir)/depcomp
 am__depfiles_maybe = depfiles
@@ -137,7 +137,7 @@ LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
 AM_V_CXX = $(am__v_CXX_@AM_V@)
 am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
 am__v_CXX_0 = @echo "  CXX     " $@;
-am__v_CXX_1 = 
+am__v_CXX_1 =
 CXXLD = $(CXX)
 CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
@@ -145,7 +145,7 @@ CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
 AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
 am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
 am__v_CXXLD_0 = @echo "  CXXLD   " $@;
-am__v_CXXLD_1 = 
+am__v_CXXLD_1 =
 COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
 	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
 LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
@@ -155,7 +155,7 @@ LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
 AM_V_CC = $(am__v_CC_@AM_V@)
 am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
 am__v_CC_0 = @echo "  CC      " $@;
-am__v_CC_1 = 
+am__v_CC_1 =
 CCLD = $(CC)
 LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
 	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
@@ -163,7 +163,7 @@ LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
 AM_V_CCLD = $(am__v_CCLD_@AM_V@)
 am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
 am__v_CCLD_0 = @echo "  CCLD    " $@;
-am__v_CCLD_1 = 
+am__v_CCLD_1 =
 SOURCES = $(generate_datasets_SOURCES) \
 	$(nodist_generate_datasets_SOURCES)
 DIST_SOURCES = $(generate_datasets_SOURCES)
@@ -242,9 +242,6 @@ MANIFEST_TOOL = @MANIFEST_TOOL@
 MKDIR_P = @MKDIR_P@
 NM = @NM@
 NMEDIT = @NMEDIT@
-OBJC = @OBJC@
-OBJCDEPMODE = @OBJCDEPMODE@
-OBJCFLAGS = @OBJCFLAGS@
 OBJDUMP = @OBJDUMP@
 OBJEXT = @OBJEXT@
 OTOOL = @OTOOL@
@@ -277,7 +274,6 @@ ac_ct_AR = @ac_ct_AR@
 ac_ct_CC = @ac_ct_CC@
 ac_ct_CXX = @ac_ct_CXX@
 ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
-ac_ct_OBJC = @ac_ct_OBJC@
 acx_pthread_config = @acx_pthread_config@
 am__include = @am__include@
 am__leading_dot = @am__leading_dot@
@@ -447,7 +443,7 @@ clean-binPROGRAMS:
 	echo " rm -f" $$list; \
 	rm -f $$list
 
-generate-datasets$(EXEEXT): $(generate_datasets_OBJECTS) $(generate_datasets_DEPENDENCIES) $(EXTRA_generate_datasets_DEPENDENCIES) 
+generate-datasets$(EXEEXT): $(generate_datasets_OBJECTS) $(generate_datasets_DEPENDENCIES) $(EXTRA_generate_datasets_DEPENDENCIES)
 	@rm -f generate-datasets$(EXEEXT)
 	$(AM_V_CXXLD)$(CXXLINK) $(generate_datasets_OBJECTS) $(generate_datasets_LDADD) $(LIBS)
 
diff --git a/cmake/extract_includes.bat.in b/cmake/extract_includes.bat.in
index 5d4377d..b9411c4 100644
--- a/cmake/extract_includes.bat.in
+++ b/cmake/extract_includes.bat.in
@@ -5,7 +5,6 @@ mkdir include\google\protobuf\compiler
 mkdir include\google\protobuf\compiler\cpp
 mkdir include\google\protobuf\compiler\csharp
 mkdir include\google\protobuf\compiler\js
-mkdir include\google\protobuf\compiler\objectivec
 mkdir include\google\protobuf\compiler\php
 mkdir include\google\protobuf\compiler\python
 mkdir include\google\protobuf\compiler\ruby
@@ -24,8 +23,6 @@ copy ${PROTOBUF_SOURCE_WIN32_PATH}\..\src\google\protobuf\compiler\csharp\csharp
 copy ${PROTOBUF_SOURCE_WIN32_PATH}\..\src\google\protobuf\compiler\csharp\csharp_names.h include\google\protobuf\compiler\csharp\csharp_names.h
 copy ${PROTOBUF_SOURCE_WIN32_PATH}\..\src\google\protobuf\compiler\importer.h include\google\protobuf\compiler\importer.h
 copy ${PROTOBUF_SOURCE_WIN32_PATH}\..\src\google\protobuf\compiler\js\js_generator.h include\google\protobuf\compiler\js\js_generator.h
-copy ${PROTOBUF_SOURCE_WIN32_PATH}\..\src\google\protobuf\compiler\objectivec\objectivec_generator.h include\google\protobuf\compiler\objectivec\objectivec_generator.h
-copy ${PROTOBUF_SOURCE_WIN32_PATH}\..\src\google\protobuf\compiler\objectivec\objectivec_helpers.h include\google\protobuf\compiler\objectivec\objectivec_helpers.h
 copy ${PROTOBUF_SOURCE_WIN32_PATH}\..\src\google\protobuf\compiler\parser.h include\google\protobuf\compiler\parser.h
 copy ${PROTOBUF_SOURCE_WIN32_PATH}\..\src\google\protobuf\compiler\php\php_generator.h include\google\protobuf\compiler\php\php_generator.h
 copy ${PROTOBUF_SOURCE_WIN32_PATH}\..\src\google\protobuf\compiler\plugin.h include\google\protobuf\compiler\plugin.h
diff --git a/cmake/libprotoc.cmake b/cmake/libprotoc.cmake
index 87da8ba..18c2899 100644
--- a/cmake/libprotoc.cmake
+++ b/cmake/libprotoc.cmake
@@ -31,18 +31,6 @@ set(libprotoc_files
   ${protobuf_source_dir}/src/google/protobuf/compiler/csharp/csharp_source_generator_base.cc
   ${protobuf_source_dir}/src/google/protobuf/compiler/csharp/csharp_wrapper_field.cc
   ${protobuf_source_dir}/src/google/protobuf/compiler/js/js_generator.cc
-  ${protobuf_source_dir}/src/google/protobuf/compiler/objectivec/objectivec_enum.cc
-  ${protobuf_source_dir}/src/google/protobuf/compiler/objectivec/objectivec_enum_field.cc
-  ${protobuf_source_dir}/src/google/protobuf/compiler/objectivec/objectivec_extension.cc
-  ${protobuf_source_dir}/src/google/protobuf/compiler/objectivec/objectivec_field.cc
-  ${protobuf_source_dir}/src/google/protobuf/compiler/objectivec/objectivec_file.cc
-  ${protobuf_source_dir}/src/google/protobuf/compiler/objectivec/objectivec_generator.cc
-  ${protobuf_source_dir}/src/google/protobuf/compiler/objectivec/objectivec_helpers.cc
-  ${protobuf_source_dir}/src/google/protobuf/compiler/objectivec/objectivec_map_field.cc
-  ${protobuf_source_dir}/src/google/protobuf/compiler/objectivec/objectivec_message.cc
-  ${protobuf_source_dir}/src/google/protobuf/compiler/objectivec/objectivec_message_field.cc
-  ${protobuf_source_dir}/src/google/protobuf/compiler/objectivec/objectivec_oneof.cc
-  ${protobuf_source_dir}/src/google/protobuf/compiler/objectivec/objectivec_primitive_field.cc
   ${protobuf_source_dir}/src/google/protobuf/compiler/php/php_generator.cc
   ${protobuf_source_dir}/src/google/protobuf/compiler/plugin.cc
   ${protobuf_source_dir}/src/google/protobuf/compiler/plugin.pb.cc
diff --git a/cmake/tests.cmake b/cmake/tests.cmake
index bccb93b..557edc4 100644
--- a/cmake/tests.cmake
+++ b/cmake/tests.cmake
@@ -125,7 +125,6 @@ set(tests_files
   ${protobuf_source_dir}/src/google/protobuf/compiler/csharp/csharp_generator_unittest.cc
   ${protobuf_source_dir}/src/google/protobuf/compiler/importer_unittest.cc
   ${protobuf_source_dir}/src/google/protobuf/compiler/mock_code_generator.cc
-  ${protobuf_source_dir}/src/google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc
   ${protobuf_source_dir}/src/google/protobuf/compiler/parser_unittest.cc
   ${protobuf_source_dir}/src/google/protobuf/compiler/python/python_plugin_unittest.cc
   ${protobuf_source_dir}/src/google/protobuf/compiler/ruby/ruby_generator_unittest.cc
diff --git a/configure b/configure
index 142ba90..09b3c18 100755
--- a/configure
+++ b/configure
@@ -2570,7 +2570,7 @@ ac_config_headers="$ac_config_headers config.h"
 
 case "$DIST_LANG" in
   "") DIST_LANG=all ;;
-  all | cpp | csharp | python | objectivec | ruby | js | php) ;;
+  all | cpp | csharp | python | ruby | js | php) ;;
   *) { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
 $as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
 as_fn_error $? "unknown language: $DIST_LANG
diff --git a/configure.ac b/configure.ac
index 3fa5eb1..a863f25 100644
--- a/configure.ac
+++ b/configure.ac
@@ -30,7 +30,7 @@ AC_CONFIG_MACRO_DIR([m4])
 AC_ARG_VAR(DIST_LANG, [language to include in the distribution package (i.e., make dist)])
 case "$DIST_LANG" in
   "") DIST_LANG=all ;;
-  all | cpp | csharp | python | objectivec | ruby | js | php) ;;
+  all | cpp | csharp | python | ruby | js | php) ;;
   *) AC_MSG_FAILURE([unknown language: $DIST_LANG]) ;;
 esac
 AC_SUBST(DIST_LANG)
@@ -63,7 +63,6 @@ AC_LANG([C++])
 ACX_USE_SYSTEM_EXTENSIONS
 m4_ifdef([AM_PROG_AR], [AM_PROG_AR])
 AM_CONDITIONAL(GCC, test "$GCC" = yes)   # let the Makefile know if we're gcc
-AC_PROG_OBJC
 
 # test_util.cc takes forever to compile with GCC and optimization turned on.
 AC_MSG_CHECKING([C++ compiler flags...])
@@ -168,15 +167,6 @@ case "$target_os" in
     ;;
 esac
 
-# Enable ObjC support for conformance directory on OS X.
-OBJC_CONFORMANCE_TEST=0
-case "$target_os" in
-  darwin*)
-    OBJC_CONFORMANCE_TEST=1
-    ;;
-esac
-AM_CONDITIONAL([OBJC_CONFORMANCE_TEST], [test $OBJC_CONFORMANCE_TEST = 1])
-
 # HACK:  Make gmock's configure script pick up our copy of CFLAGS and CXXFLAGS,
 #   since the flags added by ACX_CHECK_SUNCC must be used when compiling gmock
 #   too.
diff --git a/conformance/Makefile.am b/conformance/Makefile.am
index da66a35..a86d182 100644
--- a/conformance/Makefile.am
+++ b/conformance/Makefile.am
@@ -18,8 +18,6 @@ protoc_outputs =                                               \
 
 other_language_protoc_outputs =                                \
   conformance_pb2.py                                           \
-  Conformance.pbobjc.h                                         \
-  Conformance.pbobjc.m                                         \
   conformance_pb.rb                                            \
   google/protobuf/any.pb.cc                                    \
   google/protobuf/any.pb.h                                     \
@@ -58,7 +56,6 @@ EXTRA_DIST =                  \
   conformance_ruby.rb         \
   failure_list_cpp.txt        \
   failure_list_csharp.txt     \
-  failure_list_objc.txt       \
   failure_list_python.txt     \
   failure_list_python_cpp.txt \
   failure_list_python-post26.txt \
@@ -85,29 +82,11 @@ conformance_cpp_CPPFLAGS = -I$(top_srcdir)/src
 # so a direct "make test_cpp" could fail if parallel enough.
 conformance_cpp-conformance_cpp.$(OBJEXT): conformance.pb.h
 
-if OBJC_CONFORMANCE_TEST
-
-bin_PROGRAMS += conformance-objc
-
-conformance_objc_SOURCES = conformance_objc.m ../objectivec/GPBProtocolBuffers.m
-nodist_conformance_objc_SOURCES = Conformance.pbobjc.m
-# On travis, the build fails without the isysroot because whatever system
-# headers are being found don't include generics support for
-# NSArray/NSDictionary, the only guess is their image at one time had an odd
-# setup for Xcode and old frameworks are being found.
-conformance_objc_CPPFLAGS = -I$(top_srcdir)/objectivec -isysroot `xcrun --sdk macosx --show-sdk-path`
-conformance_objc_LDFLAGS = -framework Foundation
-# Explicit dep beacuse BUILT_SOURCES are only done before a "make all/check"
-# so a direct "make test_objc" could fail if parallel enough.
-conformance_objc-conformance_objc.$(OBJEXT): Conformance.pbobjc.h
-
-endif
-
 if USE_EXTERNAL_PROTOC
 
 # Some implementations include pre-generated versions of well-known types.
 protoc_middleman: $(conformance_protoc_inputs) $(well_known_type_protoc_inputs)
-	$(PROTOC) -I$(srcdir) -I$(top_srcdir) --cpp_out=. --ruby_out=. --objc_out=. --python_out=. $(conformance_protoc_inputs)
+	$(PROTOC) -I$(srcdir) -I$(top_srcdir) --cpp_out=. --ruby_out=. --python_out=. $(conformance_protoc_inputs)
 	$(PROTOC) -I$(srcdir) -I$(top_srcdir) --cpp_out=. --ruby_out=. --python_out=. $(well_known_type_protoc_inputs)
 	## $(PROTOC) -I$(srcdir) -I$(top_srcdir) $(conformance_protoc_inputs) $(well_known_type_protoc_inputs)
 	touch protoc_middleman
@@ -118,7 +97,7 @@ else
 # relative to srcdir, which may not be the same as the current directory when
 # building out-of-tree.
 protoc_middleman: $(top_srcdir)/src/protoc$(EXEEXT) $(conformance_protoc_inputs) $(well_known_type_protoc_inputs)
-	oldpwd=`pwd` && ( cd $(srcdir) && $$oldpwd/../src/protoc$(EXEEXT) -I. -I$(top_srcdir)/src --cpp_out=$$oldpwd --ruby_out=$$oldpwd --objc_out=$$oldpwd --python_out=$$oldpwd $(conformance_protoc_inputs) )
+	oldpwd=`pwd` && ( cd $(srcdir) && $$oldpwd/../src/protoc$(EXEEXT) -I. -I$(top_srcdir)/src --cpp_out=$$oldpwd --ruby_out=$$oldpwd --python_out=$$oldpwd $(conformance_protoc_inputs) )
 	oldpwd=`pwd` && ( cd $(srcdir) && $$oldpwd/../src/protoc$(EXEEXT) -I. -I$(top_srcdir)/src --cpp_out=$$oldpwd --ruby_out=$$oldpwd --python_out=$$oldpwd $(well_known_type_protoc_inputs) )
 	## @mkdir -p lite
 	## oldpwd=`pwd` && ( cd $(srcdir) && $$oldpwd/../src/protoc$(EXEEXT) -I. -I$(top_srcdir)/src $(conformance_protoc_inputs) $(well_known_type_protoc_inputs) )
@@ -164,9 +143,3 @@ test_python: protoc_middleman conformance-test-runner
 test_python_cpp: protoc_middleman conformance-test-runner
 	./conformance-test-runner --enforce_recommended --failure_list failure_list_python_cpp.txt ./conformance_python.py
 
-if OBJC_CONFORMANCE_TEST
-
-test_objc: protoc_middleman conformance-test-runner conformance-objc
-	./conformance-test-runner --enforce_recommended --failure_list failure_list_objc.txt ./conformance-objc
-
-endif
diff --git a/conformance/Makefile.in b/conformance/Makefile.in
index ff8270a..729c4d2 100644
--- a/conformance/Makefile.in
+++ b/conformance/Makefile.in
@@ -81,7 +81,6 @@ host_triplet = @host@
 target_triplet = @target@
 bin_PROGRAMS = conformance-test-runner$(EXEEXT) \
 	conformance-cpp$(EXEEXT) $(am__EXEEXT_1)
-@OBJC_CONFORMANCE_TEST_TRUE@am__append_1 = conformance-objc
 subdir = conformance
 DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
 	$(top_srcdir)/depcomp
@@ -98,7 +97,6 @@ mkinstalldirs = $(install_sh) -d
 CONFIG_HEADER = $(top_builddir)/config.h
 CONFIG_CLEAN_FILES =
 CONFIG_CLEAN_VPATH_FILES =
-@OBJC_CONFORMANCE_TEST_TRUE@am__EXEEXT_1 = conformance-objc$(EXEEXT)
 am__installdirs = "$(DESTDIR)$(bindir)"
 PROGRAMS = $(bin_PROGRAMS)
 am_conformance_cpp_OBJECTS =  \
@@ -111,19 +109,8 @@ conformance_cpp_DEPENDENCIES = $(top_srcdir)/src/libprotobuf.la
 AM_V_lt = $(am__v_lt_@AM_V@)
 am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
 am__v_lt_0 = --silent
-am__v_lt_1 = 
-am__conformance_objc_SOURCES_DIST = conformance_objc.m \
-	../objectivec/GPBProtocolBuffers.m
+am__v_lt_1 =
 am__dirstamp = $(am__leading_dot)dirstamp
-@OBJC_CONFORMANCE_TEST_TRUE@am_conformance_objc_OBJECTS = conformance_objc-conformance_objc.$(OBJEXT) \
-@OBJC_CONFORMANCE_TEST_TRUE@	../objectivec/conformance_objc-GPBProtocolBuffers.$(OBJEXT)
-@OBJC_CONFORMANCE_TEST_TRUE@nodist_conformance_objc_OBJECTS = conformance_objc-Conformance.pbobjc.$(OBJEXT)
-conformance_objc_OBJECTS = $(am_conformance_objc_OBJECTS) \
-	$(nodist_conformance_objc_OBJECTS)
-conformance_objc_LDADD = $(LDADD)
-conformance_objc_LINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
-	$(LIBTOOLFLAGS) --mode=link $(OBJCLD) $(AM_OBJCFLAGS) \
-	$(OBJCFLAGS) $(conformance_objc_LDFLAGS) $(LDFLAGS) -o $@
 am_conformance_test_runner_OBJECTS =  \
 	conformance_test_runner-conformance_test.$(OBJEXT) \
 	conformance_test_runner-conformance_test_runner.$(OBJEXT) \
@@ -146,11 +133,11 @@ am__v_P_1 = :
 AM_V_GEN = $(am__v_GEN_@AM_V@)
 am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
 am__v_GEN_0 = @echo "  GEN     " $@;
-am__v_GEN_1 = 
+am__v_GEN_1 =
 AM_V_at = $(am__v_at_@AM_V@)
 am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
 am__v_at_0 = @
-am__v_at_1 = 
+am__v_at_1 =
 DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
 depcomp = $(SHELL) $(top_srcdir)/depcomp
 am__depfiles_maybe = depfiles
@@ -164,7 +151,7 @@ LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
 AM_V_CXX = $(am__v_CXX_@AM_V@)
 am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
 am__v_CXX_0 = @echo "  CXX     " $@;
-am__v_CXX_1 = 
+am__v_CXX_1 =
 CXXLD = $(CXX)
 CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
@@ -172,25 +159,7 @@ CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
 AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
 am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
 am__v_CXXLD_0 = @echo "  CXXLD   " $@;
-am__v_CXXLD_1 = 
-OBJCCOMPILE = $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
-	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS)
-LTOBJCCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
-	$(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) \
-	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
-	$(AM_OBJCFLAGS) $(OBJCFLAGS)
-AM_V_OBJC = $(am__v_OBJC_@AM_V@)
-am__v_OBJC_ = $(am__v_OBJC_@AM_DEFAULT_V@)
-am__v_OBJC_0 = @echo "  OBJC    " $@;
-am__v_OBJC_1 = 
-OBJCLD = $(OBJC)
-OBJCLINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
-	--mode=link $(OBJCLD) $(AM_OBJCFLAGS) $(OBJCFLAGS) \
-	$(AM_LDFLAGS) $(LDFLAGS) -o $@
-AM_V_OBJCLD = $(am__v_OBJCLD_@AM_V@)
-am__v_OBJCLD_ = $(am__v_OBJCLD_@AM_DEFAULT_V@)
-am__v_OBJCLD_0 = @echo "  OBJCLD  " $@;
-am__v_OBJCLD_1 = 
+am__v_CXXLD_1 =
 COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
 	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
 LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
@@ -200,7 +169,7 @@ LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
 AM_V_CC = $(am__v_CC_@AM_V@)
 am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
 am__v_CC_0 = @echo "  CC      " $@;
-am__v_CC_1 = 
+am__v_CC_1 =
 CCLD = $(CC)
 LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
 	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
@@ -208,13 +177,11 @@ LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
 AM_V_CCLD = $(am__v_CCLD_@AM_V@)
 am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
 am__v_CCLD_0 = @echo "  CCLD    " $@;
-am__v_CCLD_1 = 
+am__v_CCLD_1 =
 SOURCES = $(conformance_cpp_SOURCES) $(nodist_conformance_cpp_SOURCES) \
-	$(conformance_objc_SOURCES) $(nodist_conformance_objc_SOURCES) \
 	$(conformance_test_runner_SOURCES) \
 	$(nodist_conformance_test_runner_SOURCES)
 DIST_SOURCES = $(conformance_cpp_SOURCES) \
-	$(am__conformance_objc_SOURCES_DIST) \
 	$(conformance_test_runner_SOURCES)
 am__can_run_installinfo = \
   case $$AM_UPDATE_INFO_DIR in \
@@ -291,9 +258,6 @@ MANIFEST_TOOL = @MANIFEST_TOOL@
 MKDIR_P = @MKDIR_P@
 NM = @NM@
 NMEDIT = @NMEDIT@
-OBJC = @OBJC@
-OBJCDEPMODE = @OBJCDEPMODE@
-OBJCFLAGS = @OBJCFLAGS@
 OBJDUMP = @OBJDUMP@
 OBJEXT = @OBJEXT@
 OTOOL = @OTOOL@
@@ -326,7 +290,6 @@ ac_ct_AR = @ac_ct_AR@
 ac_ct_CC = @ac_ct_CC@
 ac_ct_CXX = @ac_ct_CXX@
 ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
-ac_ct_OBJC = @ac_ct_OBJC@
 acx_pthread_config = @acx_pthread_config@
 am__include = @am__include@
 am__leading_dot = @am__leading_dot@
@@ -395,8 +358,6 @@ protoc_outputs = \
 
 other_language_protoc_outputs = \
   conformance_pb2.py                                           \
-  Conformance.pbobjc.h                                         \
-  Conformance.pbobjc.m                                         \
   conformance_pb.rb                                            \
   google/protobuf/any.pb.cc                                    \
   google/protobuf/any.pb.h                                     \
@@ -424,7 +385,7 @@ other_language_protoc_outputs = \
   google/protobuf/wrappers_pb2.py
 
 
-# All source files excepet C++/Objective-C ones should be explicitly listed
+# All source files excepet C++ ones should be explicitly listed
 # here because the autoconf tools don't include files of other languages
 # automatically.
 EXTRA_DIST = \
@@ -434,7 +395,6 @@ EXTRA_DIST = \
   conformance_ruby.rb         \
   failure_list_cpp.txt        \
   failure_list_csharp.txt     \
-  failure_list_objc.txt       \
   failure_list_python.txt     \
   failure_list_python_cpp.txt \
   failure_list_python-post26.txt \
@@ -453,14 +413,10 @@ conformance_cpp_LDADD = $(top_srcdir)/src/libprotobuf.la
 conformance_cpp_SOURCES = conformance_cpp.cc
 nodist_conformance_cpp_SOURCES = conformance.pb.cc
 conformance_cpp_CPPFLAGS = -I$(top_srcdir)/src
-@OBJC_CONFORMANCE_TEST_TRUE@conformance_objc_SOURCES = conformance_objc.m ../objectivec/GPBProtocolBuffers.m
-@OBJC_CONFORMANCE_TEST_TRUE@nodist_conformance_objc_SOURCES = Conformance.pbobjc.m
 # On travis, the build fails without the isysroot because whatever system
 # headers are being found don't include generics support for
 # NSArray/NSDictionary, the only guess is their image at one time had an odd
 # setup for Xcode and old frameworks are being found.
-@OBJC_CONFORMANCE_TEST_TRUE@conformance_objc_CPPFLAGS = -I$(top_srcdir)/objectivec -isysroot `xcrun --sdk macosx --show-sdk-path`
-@OBJC_CONFORMANCE_TEST_TRUE@conformance_objc_LDFLAGS = -framework Foundation
 BUILT_SOURCES = $(protoc_outputs) $(other_language_protoc_outputs)
 CLEANFILES = $(protoc_outputs) protoc_middleman conformance-csharp $(other_language_protoc_outputs)
 MAINTAINERCLEANFILES = \
@@ -554,19 +510,7 @@ clean-binPROGRAMS:
 conformance-cpp$(EXEEXT): $(conformance_cpp_OBJECTS) $(conformance_cpp_DEPENDENCIES) $(EXTRA_conformance_cpp_DEPENDENCIES)
 	@rm -f conformance-cpp$(EXEEXT)
 	$(AM_V_CXXLD)$(CXXLINK) $(conformance_cpp_OBJECTS) $(conformance_cpp_LDADD) $(LIBS)
-../objectivec/$(am__dirstamp):
-	@$(MKDIR_P) ../objectivec
-	@: > ../objectivec/$(am__dirstamp)
-../objectivec/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) ../objectivec/$(DEPDIR)
-	@: > ../objectivec/$(DEPDIR)/$(am__dirstamp)
-../objectivec/conformance_objc-GPBProtocolBuffers.$(OBJEXT):  \
-	../objectivec/$(am__dirstamp) \
-	../objectivec/$(DEPDIR)/$(am__dirstamp)
-
-conformance-objc$(EXEEXT): $(conformance_objc_OBJECTS) $(conformance_objc_DEPENDENCIES) $(EXTRA_conformance_objc_DEPENDENCIES)
-	@rm -f conformance-objc$(EXEEXT)
-	$(AM_V_OBJCLD)$(conformance_objc_LINK) $(conformance_objc_OBJECTS) $(conformance_objc_LDADD) $(LIBS)
+
 third_party/jsoncpp/$(am__dirstamp):
 	@$(MKDIR_P) third_party/jsoncpp
 	@: > third_party/jsoncpp/$(am__dirstamp)
@@ -583,17 +527,13 @@ conformance-test-runner$(EXEEXT): $(conformance_test_runner_OBJECTS) $(conforman
 
 mostlyclean-compile:
 	-rm -f *.$(OBJEXT)
-	-rm -f ../objectivec/*.$(OBJEXT)
 	-rm -f third_party/jsoncpp/*.$(OBJEXT)
 
 distclean-compile:
 	-rm -f *.tab.c
 
-@AMDEP_TRUE@@am__include@ @am__quote@../objectivec/$(DEPDIR)/conformance_objc-GPBProtocolBuffers.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/conformance_cpp-conformance.pb.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/conformance_cpp-conformance_cpp.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/conformance_objc-Conformance.pbobjc.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/conformance_objc-conformance_objc.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/conformance_test_runner-conformance.pb.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/conformance_test_runner-conformance_test.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/conformance_test_runner-conformance_test_runner.Po@am__quote@
@@ -731,72 +671,6 @@ conformance_test_runner-conformance.pb.obj: conformance.pb.cc
 @AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<
 
-.m.o:
-@am__fastdepOBJC_TRUE@	$(AM_V_OBJC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
-@am__fastdepOBJC_TRUE@	$(OBJCCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
-@am__fastdepOBJC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	$(AM_V_OBJC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepOBJC_FALSE@	$(AM_V_OBJC@am__nodep@)$(OBJCCOMPILE) -c -o $@ $<
-
-.m.obj:
-@am__fastdepOBJC_TRUE@	$(AM_V_OBJC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
-@am__fastdepOBJC_TRUE@	$(OBJCCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
-@am__fastdepOBJC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	$(AM_V_OBJC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepOBJC_FALSE@	$(AM_V_OBJC@am__nodep@)$(OBJCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
-
-.m.lo:
-@am__fastdepOBJC_TRUE@	$(AM_V_OBJC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
-@am__fastdepOBJC_TRUE@	$(LTOBJCCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
-@am__fastdepOBJC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	$(AM_V_OBJC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepOBJC_FALSE@	$(AM_V_OBJC@am__nodep@)$(LTOBJCCOMPILE) -c -o $@ $<
-
-conformance_objc-conformance_objc.o: conformance_objc.m
-@am__fastdepOBJC_TRUE@	$(AM_V_OBJC)$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(conformance_objc_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT conformance_objc-conformance_objc.o -MD -MP -MF $(DEPDIR)/conformance_objc-conformance_objc.Tpo -c -o conformance_objc-conformance_objc.o `test -f 'conformance_objc.m' || echo '$(srcdir)/'`conformance_objc.m
-@am__fastdepOBJC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/conformance_objc-conformance_objc.Tpo $(DEPDIR)/conformance_objc-conformance_objc.Po
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	$(AM_V_OBJC)source='conformance_objc.m' object='conformance_objc-conformance_objc.o' libtool=no @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepOBJC_FALSE@	$(AM_V_OBJC@am__nodep@)$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(conformance_objc_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o conformance_objc-conformance_objc.o `test -f 'conformance_objc.m' || echo '$(srcdir)/'`conformance_objc.m
-
-conformance_objc-conformance_objc.obj: conformance_objc.m
-@am__fastdepOBJC_TRUE@	$(AM_V_OBJC)$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(conformance_objc_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT conformance_objc-conformance_objc.obj -MD -MP -MF $(DEPDIR)/conformance_objc-conformance_objc.Tpo -c -o conformance_objc-conformance_objc.obj `if test -f 'conformance_objc.m'; then $(CYGPATH_W) 'conformance_objc.m'; else $(CYGPATH_W) '$(srcdir)/conformance_objc.m'; fi`
-@am__fastdepOBJC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/conformance_objc-conformance_objc.Tpo $(DEPDIR)/conformance_objc-conformance_objc.Po
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	$(AM_V_OBJC)source='conformance_objc.m' object='conformance_objc-conformance_objc.obj' libtool=no @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepOBJC_FALSE@	$(AM_V_OBJC@am__nodep@)$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(conformance_objc_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o conformance_objc-conformance_objc.obj `if test -f 'conformance_objc.m'; then $(CYGPATH_W) 'conformance_objc.m'; else $(CYGPATH_W) '$(srcdir)/conformance_objc.m'; fi`
-
-../objectivec/conformance_objc-GPBProtocolBuffers.o: ../objectivec/GPBProtocolBuffers.m
-@am__fastdepOBJC_TRUE@	$(AM_V_OBJC)$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(conformance_objc_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT ../objectivec/conformance_objc-GPBProtocolBuffers.o -MD -MP -MF ../objectivec/$(DEPDIR)/conformance_objc-GPBProtocolBuffers.Tpo -c -o ../objectivec/conformance_objc-GPBProtocolBuffers.o `test -f '../objectivec/GPBProtocolBuffers.m' || echo '$(srcdir)/'`../objectivec/GPBProtocolBuffers.m
-@am__fastdepOBJC_TRUE@	$(AM_V_at)$(am__mv) ../objectivec/$(DEPDIR)/conformance_objc-GPBProtocolBuffers.Tpo ../objectivec/$(DEPDIR)/conformance_objc-GPBProtocolBuffers.Po
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	$(AM_V_OBJC)source='../objectivec/GPBProtocolBuffers.m' object='../objectivec/conformance_objc-GPBProtocolBuffers.o' libtool=no @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepOBJC_FALSE@	$(AM_V_OBJC@am__nodep@)$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(conformance_objc_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o ../objectivec/conformance_objc-GPBProtocolBuffers.o `test -f '../objectivec/GPBProtocolBuffers.m' || echo '$(srcdir)/'`../objectivec/GPBProtocolBuffers.m
-
-../objectivec/conformance_objc-GPBProtocolBuffers.obj: ../objectivec/GPBProtocolBuffers.m
-@am__fastdepOBJC_TRUE@	$(AM_V_OBJC)$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(conformance_objc_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT ../objectivec/conformance_objc-GPBProtocolBuffers.obj -MD -MP -MF ../objectivec/$(DEPDIR)/conformance_objc-GPBProtocolBuffers.Tpo -c -o ../objectivec/conformance_objc-GPBProtocolBuffers.obj `if test -f '../objectivec/GPBProtocolBuffers.m'; then $(CYGPATH_W) '../objectivec/GPBProtocolBuffers.m'; else $(CYGPATH_W) '$(srcdir)/../objectivec/GPBProtocolBuffers.m'; fi`
-@am__fastdepOBJC_TRUE@	$(AM_V_at)$(am__mv) ../objectivec/$(DEPDIR)/conformance_objc-GPBProtocolBuffers.Tpo ../objectivec/$(DEPDIR)/conformance_objc-GPBProtocolBuffers.Po
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	$(AM_V_OBJC)source='../objectivec/GPBProtocolBuffers.m' object='../objectivec/conformance_objc-GPBProtocolBuffers.obj' libtool=no @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepOBJC_FALSE@	$(AM_V_OBJC@am__nodep@)$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(conformance_objc_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o ../objectivec/conformance_objc-GPBProtocolBuffers.obj `if test -f '../objectivec/GPBProtocolBuffers.m'; then $(CYGPATH_W) '../objectivec/GPBProtocolBuffers.m'; else $(CYGPATH_W) '$(srcdir)/../objectivec/GPBProtocolBuffers.m'; fi`
-
-conformance_objc-Conformance.pbobjc.o: Conformance.pbobjc.m
-@am__fastdepOBJC_TRUE@	$(AM_V_OBJC)$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(conformance_objc_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT conformance_objc-Conformance.pbobjc.o -MD -MP -MF $(DEPDIR)/conformance_objc-Conformance.pbobjc.Tpo -c -o conformance_objc-Conformance.pbobjc.o `test -f 'Conformance.pbobjc.m' || echo '$(srcdir)/'`Conformance.pbobjc.m
-@am__fastdepOBJC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/conformance_objc-Conformance.pbobjc.Tpo $(DEPDIR)/conformance_objc-Conformance.pbobjc.Po
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	$(AM_V_OBJC)source='Conformance.pbobjc.m' object='conformance_objc-Conformance.pbobjc.o' libtool=no @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepOBJC_FALSE@	$(AM_V_OBJC@am__nodep@)$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(conformance_objc_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o conformance_objc-Conformance.pbobjc.o `test -f 'Conformance.pbobjc.m' || echo '$(srcdir)/'`Conformance.pbobjc.m
-
-conformance_objc-Conformance.pbobjc.obj: Conformance.pbobjc.m
-@am__fastdepOBJC_TRUE@	$(AM_V_OBJC)$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(conformance_objc_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT conformance_objc-Conformance.pbobjc.obj -MD -MP -MF $(DEPDIR)/conformance_objc-Conformance.pbobjc.Tpo -c -o conformance_objc-Conformance.pbobjc.obj `if test -f 'Conformance.pbobjc.m'; then $(CYGPATH_W) 'Conformance.pbobjc.m'; else $(CYGPATH_W) '$(srcdir)/Conformance.pbobjc.m'; fi`
-@am__fastdepOBJC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/conformance_objc-Conformance.pbobjc.Tpo $(DEPDIR)/conformance_objc-Conformance.pbobjc.Po
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	$(AM_V_OBJC)source='Conformance.pbobjc.m' object='conformance_objc-Conformance.pbobjc.obj' libtool=no @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepOBJC_FALSE@	$(AM_V_OBJC@am__nodep@)$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(conformance_objc_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o conformance_objc-Conformance.pbobjc.obj `if test -f 'Conformance.pbobjc.m'; then $(CYGPATH_W) 'Conformance.pbobjc.m'; else $(CYGPATH_W) '$(srcdir)/Conformance.pbobjc.m'; fi`
-
 mostlyclean-libtool:
 	-rm -f *.lo
 
@@ -921,8 +795,6 @@ clean-generic:
 distclean-generic:
 	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
 	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
-	-rm -f ../objectivec/$(DEPDIR)/$(am__dirstamp)
-	-rm -f ../objectivec/$(am__dirstamp)
 	-rm -f third_party/jsoncpp/$(DEPDIR)/$(am__dirstamp)
 	-rm -f third_party/jsoncpp/$(am__dirstamp)
 
@@ -936,7 +808,7 @@ clean: clean-am
 clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
 
 distclean: distclean-am
-	-rm -rf ../objectivec/$(DEPDIR) ./$(DEPDIR) third_party/jsoncpp/$(DEPDIR)
+	-rm -rf ./$(DEPDIR) third_party/jsoncpp/$(DEPDIR)
 	-rm -f Makefile
 distclean-am: clean-am distclean-compile distclean-generic \
 	distclean-tags
@@ -982,7 +854,7 @@ install-ps-am:
 installcheck-am:
 
 maintainer-clean: maintainer-clean-am
-	-rm -rf ../objectivec/$(DEPDIR) ./$(DEPDIR) third_party/jsoncpp/$(DEPDIR)
+	-rm -rf ./$(DEPDIR) third_party/jsoncpp/$(DEPDIR)
 	-rm -f Makefile
 maintainer-clean-am: distclean-am maintainer-clean-generic
 
@@ -1024,13 +896,10 @@ conformance_test_runner-conformance_test_runner.$(OBJEXT): conformance.pb.h
 # Explicit dep beacuse BUILT_SOURCES are only done before a "make all/check"
 # so a direct "make test_cpp" could fail if parallel enough.
 conformance_cpp-conformance_cpp.$(OBJEXT): conformance.pb.h
-# Explicit dep beacuse BUILT_SOURCES are only done before a "make all/check"
-# so a direct "make test_objc" could fail if parallel enough.
-@OBJC_CONFORMANCE_TEST_TRUE@conformance_objc-conformance_objc.$(OBJEXT): Conformance.pbobjc.h
 
 # Some implementations include pre-generated versions of well-known types.
 @USE_EXTERNAL_PROTOC_TRUE@protoc_middleman: $(conformance_protoc_inputs) $(well_known_type_protoc_inputs)
-@USE_EXTERNAL_PROTOC_TRUE@	$(PROTOC) -I$(srcdir) -I$(top_srcdir) --cpp_out=. --ruby_out=. --objc_out=. --python_out=. $(conformance_protoc_inputs)
+@USE_EXTERNAL_PROTOC_TRUE@	$(PROTOC) -I$(srcdir) -I$(top_srcdir) --cpp_out=. --ruby_out=. --python_out=. $(conformance_protoc_inputs)
 @USE_EXTERNAL_PROTOC_TRUE@	$(PROTOC) -I$(srcdir) -I$(top_srcdir) --cpp_out=. --ruby_out=. --python_out=. $(well_known_type_protoc_inputs)
 @USE_EXTERNAL_PROTOC_TRUE@	touch protoc_middleman
 
@@ -1038,7 +907,7 @@ conformance_cpp-conformance_cpp.$(OBJEXT): conformance.pb.h
 # relative to srcdir, which may not be the same as the current directory when
 # building out-of-tree.
 @USE_EXTERNAL_PROTOC_FALSE@protoc_middleman: $(top_srcdir)/src/protoc$(EXEEXT) $(conformance_protoc_inputs) $(well_known_type_protoc_inputs)
-@USE_EXTERNAL_PROTOC_FALSE@	oldpwd=`pwd` && ( cd $(srcdir) && $$oldpwd/../src/protoc$(EXEEXT) -I. -I$(top_srcdir)/src --cpp_out=$$oldpwd --ruby_out=$$oldpwd --objc_out=$$oldpwd --python_out=$$oldpwd $(conformance_protoc_inputs) )
+@USE_EXTERNAL_PROTOC_FALSE@	oldpwd=`pwd` && ( cd $(srcdir) && $$oldpwd/../src/protoc$(EXEEXT) -I. -I$(top_srcdir)/src --cpp_out=$$oldpwd --ruby_out=$$oldpwd --python_out=$$oldpwd $(conformance_protoc_inputs) )
 @USE_EXTERNAL_PROTOC_FALSE@	oldpwd=`pwd` && ( cd $(srcdir) && $$oldpwd/../src/protoc$(EXEEXT) -I. -I$(top_srcdir)/src --cpp_out=$$oldpwd --ruby_out=$$oldpwd --python_out=$$oldpwd $(well_known_type_protoc_inputs) )
 @USE_EXTERNAL_PROTOC_FALSE@	touch protoc_middleman
 
@@ -1073,9 +942,6 @@ test_python: protoc_middleman conformance-test-runner
 test_python_cpp: protoc_middleman conformance-test-runner
 	./conformance-test-runner --enforce_recommended --failure_list failure_list_python_cpp.txt ./conformance_python.py
 
-@OBJC_CONFORMANCE_TEST_TRUE@test_objc: protoc_middleman conformance-test-runner conformance-objc
-@OBJC_CONFORMANCE_TEST_TRUE@	./conformance-test-runner --enforce_recommended --failure_list failure_list_objc.txt ./conformance-objc
-
 # Tell versions [3.59,3.63) of GNU make to not export all variables.
 # Otherwise a system limit (for SysV at least) may be exceeded.
 .NOEXPORT:
diff --git a/conformance/conformance_objc.m b/conformance/conformance_objc.m
deleted file mode 100644
index 1124bfe..0000000
--- a/conformance/conformance_objc.m
+++ /dev/null
@@ -1,179 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2015 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Foundation/Foundation.h>
-
-#import "Conformance.pbobjc.h"
-
-static void Die(NSString *format, ...) __dead2;
-
-static BOOL verbose = NO;
-static int32_t testCount = 0;
-
-static void Die(NSString *format, ...) {
-  va_list args;
-  va_start(args, format);
-  NSString *msg = [[NSString alloc] initWithFormat:format arguments:args];
-  NSLog(@"%@", msg);
-  va_end(args);
-  [msg release];
-  exit(66);
-}
-
-static NSData *CheckedReadDataOfLength(NSFileHandle *handle, NSUInteger numBytes) {
-  NSData *data = [handle readDataOfLength:numBytes];
-  NSUInteger dataLen = data.length;
-  if (dataLen == 0) {
-    return nil;  // EOF.
-  }
-  if (dataLen != numBytes) {
-    Die(@"Failed to read the request length (%d), only got: %@",
-        numBytes, data);
-  }
-  return data;
-}
-
-static ConformanceResponse *DoTest(ConformanceRequest *request) {
-  ConformanceResponse *response = [ConformanceResponse message];
-  TestAllTypes *testMessage = nil;
-
-  switch (request.payloadOneOfCase) {
-    case ConformanceRequest_Payload_OneOfCase_GPBUnsetOneOfCase:
-      Die(@"Request didn't have a payload: %@", request);
-      break;
-
-    case ConformanceRequest_Payload_OneOfCase_ProtobufPayload: {
-      NSError *error = nil;
-      testMessage = [TestAllTypes parseFromData:request.protobufPayload
-                                          error:&error];
-      if (!testMessage) {
-        response.parseError =
-            [NSString stringWithFormat:@"Parse error: %@", error];
-      }
-      break;
-    }
-
-    case ConformanceRequest_Payload_OneOfCase_JsonPayload:
-      response.skipped = @"ObjC doesn't support parsing JSON";
-      break;
-  }
-
-  if (testMessage) {
-    switch (request.requestedOutputFormat) {
-      case WireFormat_GPBUnrecognizedEnumeratorValue:
-      case WireFormat_Unspecified:
-        Die(@"Unrecognized/unspecified output format: %@", request);
-        break;
-
-      case WireFormat_Protobuf:
-        response.protobufPayload = testMessage.data;
-        if (!response.protobufPayload) {
-          response.serializeError =
-            [NSString stringWithFormat:@"Failed to make data from: %@", testMessage];
-        }
-        break;
-
-      case WireFormat_Json:
-        response.skipped = @"ObjC doesn't support generating JSON";
-        break;
-    }
-  }
-
-  return response;
-}
-
-static uint32_t UInt32FromLittleEndianData(NSData *data) {
-  if (data.length != sizeof(uint32_t)) {
-    Die(@"Data not the right size for uint32_t: %@", data);
-  }
-  uint32_t value;
-  memcpy(&value, data.bytes, sizeof(uint32_t));
-  return CFSwapInt32LittleToHost(value);
-}
-
-static NSData *UInt32ToLittleEndianData(uint32_t num) {
-  uint32_t value = CFSwapInt32HostToLittle(num);
-  return [NSData dataWithBytes:&value length:sizeof(uint32_t)];
-}
-
-static BOOL DoTestIo(NSFileHandle *input, NSFileHandle *output) {
-  // See conformance_test_runner.cc for the wire format.
-  NSData *data = CheckedReadDataOfLength(input, sizeof(uint32_t));
-  if (!data) {
-    // EOF.
-    return NO;
-  }
-  uint32_t numBytes = UInt32FromLittleEndianData(data);
-  data = CheckedReadDataOfLength(input, numBytes);
-  if (!data) {
-    Die(@"Failed to read request");
-  }
-
-  NSError *error = nil;
-  ConformanceRequest *request = [ConformanceRequest parseFromData:data
-                                                            error:&error];
-  if (!request) {
-    Die(@"Failed to parse the message data: %@", error);
-  }
-
-  ConformanceResponse *response = DoTest(request);
-  if (!response) {
-    Die(@"Failed to make a reply from %@", request);
-  }
-
-  data = response.data;
-  [output writeData:UInt32ToLittleEndianData((int32_t)data.length)];
-  [output writeData:data];
-
-  if (verbose) {
-    NSLog(@"Request: %@", request);
-    NSLog(@"Response: %@", response);
-  }
-
-  ++testCount;
-  return YES;
-}
-
-int main(int argc, const char *argv[]) {
-  @autoreleasepool {
-    NSFileHandle *input = [[NSFileHandle fileHandleWithStandardInput] retain];
-    NSFileHandle *output = [[NSFileHandle fileHandleWithStandardOutput] retain];
-
-    BOOL notDone = YES;
-    while (notDone) {
-      @autoreleasepool {
-        notDone = DoTestIo(input, output);
-      }
-    }
-
-    NSLog(@"Received EOF from test runner after %d tests, exiting.", testCount);
-  }
-  return 0;
-}
diff --git a/conformance/failure_list_objc.txt b/conformance/failure_list_objc.txt
deleted file mode 100644
index dd538c1..0000000
--- a/conformance/failure_list_objc.txt
+++ /dev/null
@@ -1,4 +0,0 @@
-# All tests currently passing.
-#
-# JSON input or output tests are skipped (in conformance_objc.m) as mobile
-# platforms don't support JSON wire format to avoid code bloat.
diff --git a/generate_descriptor_proto.sh b/generate_descriptor_proto.sh
index 668e6d1..b7e3772 100755
--- a/generate_descriptor_proto.sh
+++ b/generate_descriptor_proto.sh
@@ -95,11 +95,6 @@ do
 done
 cd ..
 
-if test -x objectivec/generate_well_known_types.sh; then
-  echo "Generating messages for objc."
-  objectivec/generate_well_known_types.sh $@
-fi
-
 if test -x csharp/generate_protos.sh; then
   echo "Generating messages for C#."
   csharp/generate_protos.sh $@
diff --git a/objectivec/GPBProtocolBuffers.m b/objectivec/GPBProtocolBuffers.m
deleted file mode 100644
index d04c8be..0000000
--- a/objectivec/GPBProtocolBuffers.m
+++ /dev/null
@@ -1,66 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-// If you want to build protocol buffers in your own project without adding the
-// project dependency, you can just add this file.
-
-
-// This warning seems to treat code differently when it is #imported than when
-// it is inline in the file.  GPBDictionary.m compiles cleanly in other targets,
-// but when #imported here it triggers a bunch of warnings that don't make
-// much sense, and don't trigger when compiled directly.  So we shut off the
-// warnings here.
-#pragma clang diagnostic ignored "-Wnullability-completeness"
-
-#import "GPBArray.m"
-#import "GPBCodedInputStream.m"
-#import "GPBCodedOutputStream.m"
-#import "GPBDescriptor.m"
-#import "GPBDictionary.m"
-#import "GPBExtensionInternals.m"
-#import "GPBExtensionRegistry.m"
-#import "GPBMessage.m"
-#import "GPBRootObject.m"
-#import "GPBUnknownField.m"
-#import "GPBUnknownFieldSet.m"
-#import "GPBUtilities.m"
-#import "GPBWellKnownTypes.m"
-#import "GPBWireFormat.m"
-
-#import "google/protobuf/Any.pbobjc.m"
-#import "google/protobuf/Api.pbobjc.m"
-#import "google/protobuf/Duration.pbobjc.m"
-#import "google/protobuf/Empty.pbobjc.m"
-#import "google/protobuf/FieldMask.pbobjc.m"
-#import "google/protobuf/SourceContext.pbobjc.m"
-#import "google/protobuf/Struct.pbobjc.m"
-#import "google/protobuf/Timestamp.pbobjc.m"
-#import "google/protobuf/Type.pbobjc.m"
-#import "google/protobuf/Wrappers.pbobjc.m"
diff --git a/src/Makefile.am b/src/Makefile.am
index 50a7649..1b0ca29 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -158,8 +158,6 @@ nobase_include_HEADERS =                                        \
   google/protobuf/compiler/csharp/csharp_generator.h            \
   google/protobuf/compiler/csharp/csharp_names.h                \
   google/protobuf/compiler/js/js_generator.h                    \
-  google/protobuf/compiler/objectivec/objectivec_generator.h    \
-  google/protobuf/compiler/objectivec/objectivec_helpers.h      \
   google/protobuf/compiler/php/php_generator.h                  \
   google/protobuf/compiler/python/python_generator.h            \
   google/protobuf/compiler/ruby/ruby_generator.h                \
@@ -336,29 +334,6 @@ libprotoc_la_SOURCES =                                         \
   google/protobuf/compiler/cpp/cpp_string_field.cc             \
   google/protobuf/compiler/cpp/cpp_string_field.h              \
   google/protobuf/compiler/js/js_generator.cc                  \
-  google/protobuf/compiler/objectivec/objectivec_enum.cc       \
-  google/protobuf/compiler/objectivec/objectivec_enum.h        \
-  google/protobuf/compiler/objectivec/objectivec_enum_field.cc \
-  google/protobuf/compiler/objectivec/objectivec_enum_field.h  \
-  google/protobuf/compiler/objectivec/objectivec_extension.cc  \
-  google/protobuf/compiler/objectivec/objectivec_extension.h   \
-  google/protobuf/compiler/objectivec/objectivec_field.cc      \
-  google/protobuf/compiler/objectivec/objectivec_field.h       \
-  google/protobuf/compiler/objectivec/objectivec_file.cc       \
-  google/protobuf/compiler/objectivec/objectivec_file.h        \
-  google/protobuf/compiler/objectivec/objectivec_generator.cc  \
-  google/protobuf/compiler/objectivec/objectivec_helpers.cc    \
-  google/protobuf/compiler/objectivec/objectivec_helpers.h     \
-  google/protobuf/compiler/objectivec/objectivec_map_field.cc  \
-  google/protobuf/compiler/objectivec/objectivec_map_field.h   \
-  google/protobuf/compiler/objectivec/objectivec_message.cc    \
-  google/protobuf/compiler/objectivec/objectivec_message.h     \
-  google/protobuf/compiler/objectivec/objectivec_message_field.cc \
-  google/protobuf/compiler/objectivec/objectivec_message_field.h \
-  google/protobuf/compiler/objectivec/objectivec_oneof.cc      \
-  google/protobuf/compiler/objectivec/objectivec_oneof.h       \
-  google/protobuf/compiler/objectivec/objectivec_primitive_field.cc \
-  google/protobuf/compiler/objectivec/objectivec_primitive_field.h \
   google/protobuf/compiler/php/php_generator.cc                \
   google/protobuf/compiler/python/python_generator.cc          \
   google/protobuf/compiler/ruby/ruby_generator.cc              \
@@ -672,7 +647,6 @@ protobuf_test_SOURCES =                                        \
   google/protobuf/compiler/cpp/cpp_unittest.cc                 \
   google/protobuf/compiler/cpp/cpp_plugin_unittest.cc          \
   google/protobuf/compiler/cpp/metadata_test.cc                \
-  google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc \
   google/protobuf/compiler/python/python_plugin_unittest.cc    \
   google/protobuf/compiler/ruby/ruby_generator_unittest.cc     \
   google/protobuf/compiler/csharp/csharp_generator_unittest.cc \
diff --git a/src/Makefile.in b/src/Makefile.in
index cffd986..4ce7479 100644
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -168,7 +168,7 @@ libprotobuf_lite_la_OBJECTS = $(am_libprotobuf_lite_la_OBJECTS)
 AM_V_lt = $(am__v_lt_@AM_V@)
 am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
 am__v_lt_0 = --silent
-am__v_lt_1 = 
+am__v_lt_1 =
 libprotobuf_lite_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
 	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
 	$(AM_CXXFLAGS) $(CXXFLAGS) $(libprotobuf_lite_la_LDFLAGS) \
@@ -267,18 +267,6 @@ am_libprotoc_la_OBJECTS = google/protobuf/compiler/code_generator.lo \
 	google/protobuf/compiler/cpp/cpp_service.lo \
 	google/protobuf/compiler/cpp/cpp_string_field.lo \
 	google/protobuf/compiler/js/js_generator.lo \
-	google/protobuf/compiler/objectivec/objectivec_enum.lo \
-	google/protobuf/compiler/objectivec/objectivec_enum_field.lo \
-	google/protobuf/compiler/objectivec/objectivec_extension.lo \
-	google/protobuf/compiler/objectivec/objectivec_field.lo \
-	google/protobuf/compiler/objectivec/objectivec_file.lo \
-	google/protobuf/compiler/objectivec/objectivec_generator.lo \
-	google/protobuf/compiler/objectivec/objectivec_helpers.lo \
-	google/protobuf/compiler/objectivec/objectivec_map_field.lo \
-	google/protobuf/compiler/objectivec/objectivec_message.lo \
-	google/protobuf/compiler/objectivec/objectivec_message_field.lo \
-	google/protobuf/compiler/objectivec/objectivec_oneof.lo \
-	google/protobuf/compiler/objectivec/objectivec_primitive_field.lo \
 	google/protobuf/compiler/php/php_generator.lo \
 	google/protobuf/compiler/python/python_generator.lo \
 	google/protobuf/compiler/ruby/ruby_generator.lo \
@@ -523,7 +511,6 @@ am_protobuf_test_OBJECTS = google/protobuf/stubs/protobuf_test-bytestream_unitte
 	google/protobuf/compiler/cpp/protobuf_test-cpp_unittest.$(OBJEXT) \
 	google/protobuf/compiler/cpp/protobuf_test-cpp_plugin_unittest.$(OBJEXT) \
 	google/protobuf/compiler/cpp/protobuf_test-metadata_test.$(OBJEXT) \
-	google/protobuf/compiler/objectivec/protobuf_test-objectivec_helpers_unittest.$(OBJEXT) \
 	google/protobuf/compiler/python/protobuf_test-python_plugin_unittest.$(OBJEXT) \
 	google/protobuf/compiler/ruby/protobuf_test-ruby_generator_unittest.$(OBJEXT) \
 	google/protobuf/compiler/csharp/protobuf_test-csharp_generator_unittest.$(OBJEXT) \
@@ -627,11 +614,11 @@ am__v_P_1 = :
 AM_V_GEN = $(am__v_GEN_@AM_V@)
 am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
 am__v_GEN_0 = @echo "  GEN     " $@;
-am__v_GEN_1 = 
+am__v_GEN_1 =
 AM_V_at = $(am__v_at_@AM_V@)
 am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
 am__v_at_0 = @
-am__v_at_1 = 
+am__v_at_1 =
 DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
 depcomp = $(SHELL) $(top_srcdir)/depcomp
 am__depfiles_maybe = depfiles
@@ -645,7 +632,7 @@ LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
 AM_V_CXX = $(am__v_CXX_@AM_V@)
 am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
 am__v_CXX_0 = @echo "  CXX     " $@;
-am__v_CXX_1 = 
+am__v_CXX_1 =
 CXXLD = $(CXX)
 CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
@@ -653,7 +640,7 @@ CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
 AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
 am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
 am__v_CXXLD_0 = @echo "  CXXLD   " $@;
-am__v_CXXLD_1 = 
+am__v_CXXLD_1 =
 COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
 	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
 LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
@@ -663,7 +650,7 @@ LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
 AM_V_CC = $(am__v_CC_@AM_V@)
 am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
 am__v_CC_0 = @echo "  CC      " $@;
-am__v_CC_1 = 
+am__v_CC_1 =
 CCLD = $(CC)
 LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
 	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
@@ -671,7 +658,7 @@ LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
 AM_V_CCLD = $(am__v_CCLD_@AM_V@)
 am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
 am__v_CCLD_0 = @echo "  CCLD    " $@;
-am__v_CCLD_1 = 
+am__v_CCLD_1 =
 SOURCES = $(libprotobuf_lite_la_SOURCES) $(libprotobuf_la_SOURCES) \
 	$(nodist_libprotobuf_la_SOURCES) $(libprotoc_la_SOURCES) \
 	$(nodist_no_warning_test_SOURCES) \
@@ -773,8 +760,6 @@ am__nobase_include_HEADERS_DIST =  \
 	google/protobuf/compiler/csharp/csharp_generator.h \
 	google/protobuf/compiler/csharp/csharp_names.h \
 	google/protobuf/compiler/js/js_generator.h \
-	google/protobuf/compiler/objectivec/objectivec_generator.h \
-	google/protobuf/compiler/objectivec/objectivec_helpers.h \
 	google/protobuf/compiler/php/php_generator.h \
 	google/protobuf/compiler/python/python_generator.h \
 	google/protobuf/compiler/ruby/ruby_generator.h \
@@ -1035,9 +1020,6 @@ MANIFEST_TOOL = @MANIFEST_TOOL@
 MKDIR_P = @MKDIR_P@
 NM = @NM@
 NMEDIT = @NMEDIT@
-OBJC = @OBJC@
-OBJCDEPMODE = @OBJCDEPMODE@
-OBJCFLAGS = @OBJCFLAGS@
 OBJDUMP = @OBJDUMP@
 OBJEXT = @OBJEXT@
 OTOOL = @OTOOL@
@@ -1070,7 +1052,6 @@ ac_ct_AR = @ac_ct_AR@
 ac_ct_CC = @ac_ct_CC@
 ac_ct_CXX = @ac_ct_CXX@
 ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
-ac_ct_OBJC = @ac_ct_OBJC@
 acx_pthread_config = @acx_pthread_config@
 am__include = @am__include@
 am__leading_dot = @am__leading_dot@
@@ -1122,15 +1103,15 @@ target_vendor = @target_vendor@
 top_build_prefix = @top_build_prefix@
 top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
-@HAVE_ZLIB_FALSE@GZCHECKPROGRAMS = 
+@HAVE_ZLIB_FALSE@GZCHECKPROGRAMS =
 @HAVE_ZLIB_TRUE@GZCHECKPROGRAMS = zcgzip zcgunzip
-@HAVE_ZLIB_FALSE@GZHEADERS = 
+@HAVE_ZLIB_FALSE@GZHEADERS =
 @HAVE_ZLIB_TRUE@GZHEADERS = google/protobuf/io/gzip_stream.h
-@HAVE_ZLIB_FALSE@GZTESTS = 
+@HAVE_ZLIB_FALSE@GZTESTS =
 @HAVE_ZLIB_TRUE@GZTESTS = google/protobuf/io/gzip_stream_unittest.sh
-@HAVE_ZLIB_FALSE@ZLIB_DEF = 
+@HAVE_ZLIB_FALSE@ZLIB_DEF =
 @HAVE_ZLIB_TRUE@ZLIB_DEF = -DHAVE_ZLIB=1
-@HAVE_PTHREAD_FALSE@PTHREAD_DEF = 
+@HAVE_PTHREAD_FALSE@PTHREAD_DEF =
 @HAVE_PTHREAD_TRUE@PTHREAD_DEF = -DHAVE_PTHREAD=1
 @GCC_FALSE@NO_OPT_CXXFLAGS = $(PTHREAD_CFLAGS) $(PTHREAD_DEF) $(ZLIB_DEF)
 
@@ -1264,8 +1245,6 @@ nobase_include_HEADERS = \
   google/protobuf/compiler/csharp/csharp_generator.h            \
   google/protobuf/compiler/csharp/csharp_names.h                \
   google/protobuf/compiler/js/js_generator.h                    \
-  google/protobuf/compiler/objectivec/objectivec_generator.h    \
-  google/protobuf/compiler/objectivec/objectivec_helpers.h      \
   google/protobuf/compiler/php/php_generator.h                  \
   google/protobuf/compiler/python/python_generator.h            \
   google/protobuf/compiler/ruby/ruby_generator.h                \
@@ -1440,29 +1419,6 @@ libprotoc_la_SOURCES = \
   google/protobuf/compiler/cpp/cpp_string_field.cc             \
   google/protobuf/compiler/cpp/cpp_string_field.h              \
   google/protobuf/compiler/js/js_generator.cc                  \
-  google/protobuf/compiler/objectivec/objectivec_enum.cc       \
-  google/protobuf/compiler/objectivec/objectivec_enum.h        \
-  google/protobuf/compiler/objectivec/objectivec_enum_field.cc \
-  google/protobuf/compiler/objectivec/objectivec_enum_field.h  \
-  google/protobuf/compiler/objectivec/objectivec_extension.cc  \
-  google/protobuf/compiler/objectivec/objectivec_extension.h   \
-  google/protobuf/compiler/objectivec/objectivec_field.cc      \
-  google/protobuf/compiler/objectivec/objectivec_field.h       \
-  google/protobuf/compiler/objectivec/objectivec_file.cc       \
-  google/protobuf/compiler/objectivec/objectivec_file.h        \
-  google/protobuf/compiler/objectivec/objectivec_generator.cc  \
-  google/protobuf/compiler/objectivec/objectivec_helpers.cc    \
-  google/protobuf/compiler/objectivec/objectivec_helpers.h     \
-  google/protobuf/compiler/objectivec/objectivec_map_field.cc  \
-  google/protobuf/compiler/objectivec/objectivec_map_field.h   \
-  google/protobuf/compiler/objectivec/objectivec_message.cc    \
-  google/protobuf/compiler/objectivec/objectivec_message.h     \
-  google/protobuf/compiler/objectivec/objectivec_message_field.cc \
-  google/protobuf/compiler/objectivec/objectivec_message_field.h \
-  google/protobuf/compiler/objectivec/objectivec_oneof.cc      \
-  google/protobuf/compiler/objectivec/objectivec_oneof.h       \
-  google/protobuf/compiler/objectivec/objectivec_primitive_field.cc \
-  google/protobuf/compiler/objectivec/objectivec_primitive_field.h \
   google/protobuf/compiler/php/php_generator.cc                \
   google/protobuf/compiler/python/python_generator.cc          \
   google/protobuf/compiler/ruby/ruby_generator.cc              \
@@ -1753,7 +1709,6 @@ protobuf_test_SOURCES = \
   google/protobuf/compiler/cpp/cpp_unittest.cc                 \
   google/protobuf/compiler/cpp/cpp_plugin_unittest.cc          \
   google/protobuf/compiler/cpp/metadata_test.cc                \
-  google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc \
   google/protobuf/compiler/python/python_plugin_unittest.cc    \
   google/protobuf/compiler/ruby/ruby_generator_unittest.cc     \
   google/protobuf/compiler/csharp/csharp_generator_unittest.cc \
@@ -2003,7 +1958,7 @@ google/protobuf/io/zero_copy_stream_impl_lite.lo:  \
 	google/protobuf/io/$(am__dirstamp) \
 	google/protobuf/io/$(DEPDIR)/$(am__dirstamp)
 
-libprotobuf-lite.la: $(libprotobuf_lite_la_OBJECTS) $(libprotobuf_lite_la_DEPENDENCIES) $(EXTRA_libprotobuf_lite_la_DEPENDENCIES) 
+libprotobuf-lite.la: $(libprotobuf_lite_la_OBJECTS) $(libprotobuf_lite_la_DEPENDENCIES) $(EXTRA_libprotobuf_lite_la_DEPENDENCIES)
 	$(AM_V_CXXLD)$(libprotobuf_lite_la_LINK) -rpath $(libdir) $(libprotobuf_lite_la_OBJECTS) $(libprotobuf_lite_la_LIBADD) $(LIBS)
 google/protobuf/any.pb.lo: google/protobuf/$(am__dirstamp) \
 	google/protobuf/$(DEPDIR)/$(am__dirstamp)
@@ -2158,7 +2113,7 @@ google/protobuf/util/type_resolver_util.lo:  \
 	google/protobuf/util/$(am__dirstamp) \
 	google/protobuf/util/$(DEPDIR)/$(am__dirstamp)
 
-libprotobuf.la: $(libprotobuf_la_OBJECTS) $(libprotobuf_la_DEPENDENCIES) $(EXTRA_libprotobuf_la_DEPENDENCIES) 
+libprotobuf.la: $(libprotobuf_la_OBJECTS) $(libprotobuf_la_DEPENDENCIES) $(EXTRA_libprotobuf_la_DEPENDENCIES)
 	$(AM_V_CXXLD)$(libprotobuf_la_LINK) -rpath $(libdir) $(libprotobuf_la_OBJECTS) $(libprotobuf_la_LIBADD) $(LIBS)
 google/protobuf/compiler/code_generator.lo:  \
 	google/protobuf/compiler/$(am__dirstamp) \
@@ -2232,48 +2187,6 @@ google/protobuf/compiler/js/$(DEPDIR)/$(am__dirstamp):
 google/protobuf/compiler/js/js_generator.lo:  \
 	google/protobuf/compiler/js/$(am__dirstamp) \
 	google/protobuf/compiler/js/$(DEPDIR)/$(am__dirstamp)
-google/protobuf/compiler/objectivec/$(am__dirstamp):
-	@$(MKDIR_P) google/protobuf/compiler/objectivec
-	@: > google/protobuf/compiler/objectivec/$(am__dirstamp)
-google/protobuf/compiler/objectivec/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) google/protobuf/compiler/objectivec/$(DEPDIR)
-	@: > google/protobuf/compiler/objectivec/$(DEPDIR)/$(am__dirstamp)
-google/protobuf/compiler/objectivec/objectivec_enum.lo:  \
-	google/protobuf/compiler/objectivec/$(am__dirstamp) \
-	google/protobuf/compiler/objectivec/$(DEPDIR)/$(am__dirstamp)
-google/protobuf/compiler/objectivec/objectivec_enum_field.lo:  \
-	google/protobuf/compiler/objectivec/$(am__dirstamp) \
-	google/protobuf/compiler/objectivec/$(DEPDIR)/$(am__dirstamp)
-google/protobuf/compiler/objectivec/objectivec_extension.lo:  \
-	google/protobuf/compiler/objectivec/$(am__dirstamp) \
-	google/protobuf/compiler/objectivec/$(DEPDIR)/$(am__dirstamp)
-google/protobuf/compiler/objectivec/objectivec_field.lo:  \
-	google/protobuf/compiler/objectivec/$(am__dirstamp) \
-	google/protobuf/compiler/objectivec/$(DEPDIR)/$(am__dirstamp)
-google/protobuf/compiler/objectivec/objectivec_file.lo:  \
-	google/protobuf/compiler/objectivec/$(am__dirstamp) \
-	google/protobuf/compiler/objectivec/$(DEPDIR)/$(am__dirstamp)
-google/protobuf/compiler/objectivec/objectivec_generator.lo:  \
-	google/protobuf/compiler/objectivec/$(am__dirstamp) \
-	google/protobuf/compiler/objectivec/$(DEPDIR)/$(am__dirstamp)
-google/protobuf/compiler/objectivec/objectivec_helpers.lo:  \
-	google/protobuf/compiler/objectivec/$(am__dirstamp) \
-	google/protobuf/compiler/objectivec/$(DEPDIR)/$(am__dirstamp)
-google/protobuf/compiler/objectivec/objectivec_map_field.lo:  \
-	google/protobuf/compiler/objectivec/$(am__dirstamp) \
-	google/protobuf/compiler/objectivec/$(DEPDIR)/$(am__dirstamp)
-google/protobuf/compiler/objectivec/objectivec_message.lo:  \
-	google/protobuf/compiler/objectivec/$(am__dirstamp) \
-	google/protobuf/compiler/objectivec/$(DEPDIR)/$(am__dirstamp)
-google/protobuf/compiler/objectivec/objectivec_message_field.lo:  \
-	google/protobuf/compiler/objectivec/$(am__dirstamp) \
-	google/protobuf/compiler/objectivec/$(DEPDIR)/$(am__dirstamp)
-google/protobuf/compiler/objectivec/objectivec_oneof.lo:  \
-	google/protobuf/compiler/objectivec/$(am__dirstamp) \
-	google/protobuf/compiler/objectivec/$(DEPDIR)/$(am__dirstamp)
-google/protobuf/compiler/objectivec/objectivec_primitive_field.lo:  \
-	google/protobuf/compiler/objectivec/$(am__dirstamp) \
-	google/protobuf/compiler/objectivec/$(DEPDIR)/$(am__dirstamp)
 google/protobuf/compiler/php/$(am__dirstamp):
 	@$(MKDIR_P) google/protobuf/compiler/php
 	@: > google/protobuf/compiler/php/$(am__dirstamp)
@@ -2356,7 +2269,7 @@ google/protobuf/compiler/csharp/csharp_wrapper_field.lo:  \
 	google/protobuf/compiler/csharp/$(am__dirstamp) \
 	google/protobuf/compiler/csharp/$(DEPDIR)/$(am__dirstamp)
 
-libprotoc.la: $(libprotoc_la_OBJECTS) $(libprotoc_la_DEPENDENCIES) $(EXTRA_libprotoc_la_DEPENDENCIES) 
+libprotoc.la: $(libprotoc_la_OBJECTS) $(libprotoc_la_DEPENDENCIES) $(EXTRA_libprotoc_la_DEPENDENCIES)
 	$(AM_V_CXXLD)$(libprotoc_la_LINK) -rpath $(libdir) $(libprotoc_la_OBJECTS) $(libprotoc_la_LIBADD) $(LIBS)
 install-binPROGRAMS: $(bin_PROGRAMS)
 	@$(NORMAL_INSTALL)
@@ -2561,7 +2474,7 @@ google/protobuf/util/no_warning_test-message_differencer_unittest.pb.$(OBJEXT):
 	google/protobuf/util/$(am__dirstamp) \
 	google/protobuf/util/$(DEPDIR)/$(am__dirstamp)
 
-no-warning-test$(EXEEXT): $(no_warning_test_OBJECTS) $(no_warning_test_DEPENDENCIES) $(EXTRA_no_warning_test_DEPENDENCIES) 
+no-warning-test$(EXEEXT): $(no_warning_test_OBJECTS) $(no_warning_test_DEPENDENCIES) $(EXTRA_no_warning_test_DEPENDENCIES)
 	@rm -f no-warning-test$(EXEEXT)
 	$(AM_V_CXXLD)$(no_warning_test_LINK) $(no_warning_test_OBJECTS) $(no_warning_test_LDADD) $(LIBS)
 google/protobuf/compiler/cpp/protobuf_lazy_descriptor_test-cpp_unittest.$(OBJEXT):  \
@@ -2727,7 +2640,7 @@ google/protobuf/util/protobuf_lazy_descriptor_test-message_differencer_unittest.
 	google/protobuf/util/$(am__dirstamp) \
 	google/protobuf/util/$(DEPDIR)/$(am__dirstamp)
 
-protobuf-lazy-descriptor-test$(EXEEXT): $(protobuf_lazy_descriptor_test_OBJECTS) $(protobuf_lazy_descriptor_test_DEPENDENCIES) $(EXTRA_protobuf_lazy_descriptor_test_DEPENDENCIES) 
+protobuf-lazy-descriptor-test$(EXEEXT): $(protobuf_lazy_descriptor_test_OBJECTS) $(protobuf_lazy_descriptor_test_DEPENDENCIES) $(EXTRA_protobuf_lazy_descriptor_test_DEPENDENCIES)
 	@rm -f protobuf-lazy-descriptor-test$(EXEEXT)
 	$(AM_V_CXXLD)$(protobuf_lazy_descriptor_test_LINK) $(protobuf_lazy_descriptor_test_OBJECTS) $(protobuf_lazy_descriptor_test_LDADD) $(LIBS)
 google/protobuf/protobuf_lite_arena_test-lite_arena_unittest.$(OBJEXT):  \
@@ -2758,7 +2671,7 @@ google/protobuf/protobuf_lite_arena_test-unittest_import_public_lite.pb.$(OBJEXT
 	google/protobuf/$(am__dirstamp) \
 	google/protobuf/$(DEPDIR)/$(am__dirstamp)
 
-protobuf-lite-arena-test$(EXEEXT): $(protobuf_lite_arena_test_OBJECTS) $(protobuf_lite_arena_test_DEPENDENCIES) $(EXTRA_protobuf_lite_arena_test_DEPENDENCIES) 
+protobuf-lite-arena-test$(EXEEXT): $(protobuf_lite_arena_test_OBJECTS) $(protobuf_lite_arena_test_DEPENDENCIES) $(EXTRA_protobuf_lite_arena_test_DEPENDENCIES)
 	@rm -f protobuf-lite-arena-test$(EXEEXT)
 	$(AM_V_CXXLD)$(protobuf_lite_arena_test_LINK) $(protobuf_lite_arena_test_OBJECTS) $(protobuf_lite_arena_test_LDADD) $(LIBS)
 google/protobuf/protobuf_lite_test-lite_unittest.$(OBJEXT):  \
@@ -2789,7 +2702,7 @@ google/protobuf/protobuf_lite_test-unittest_import_public_lite.pb.$(OBJEXT):  \
 	google/protobuf/$(am__dirstamp) \
 	google/protobuf/$(DEPDIR)/$(am__dirstamp)
 
-protobuf-lite-test$(EXEEXT): $(protobuf_lite_test_OBJECTS) $(protobuf_lite_test_DEPENDENCIES) $(EXTRA_protobuf_lite_test_DEPENDENCIES) 
+protobuf-lite-test$(EXEEXT): $(protobuf_lite_test_OBJECTS) $(protobuf_lite_test_DEPENDENCIES) $(EXTRA_protobuf_lite_test_DEPENDENCIES)
 	@rm -f protobuf-lite-test$(EXEEXT)
 	$(AM_V_CXXLD)$(protobuf_lite_test_LINK) $(protobuf_lite_test_OBJECTS) $(protobuf_lite_test_LDADD) $(LIBS)
 google/protobuf/stubs/protobuf_test-bytestream_unittest.$(OBJEXT):  \
@@ -2939,9 +2852,6 @@ google/protobuf/compiler/cpp/protobuf_test-cpp_plugin_unittest.$(OBJEXT):  \
 google/protobuf/compiler/cpp/protobuf_test-metadata_test.$(OBJEXT):  \
 	google/protobuf/compiler/cpp/$(am__dirstamp) \
 	google/protobuf/compiler/cpp/$(DEPDIR)/$(am__dirstamp)
-google/protobuf/compiler/objectivec/protobuf_test-objectivec_helpers_unittest.$(OBJEXT):  \
-	google/protobuf/compiler/objectivec/$(am__dirstamp) \
-	google/protobuf/compiler/objectivec/$(DEPDIR)/$(am__dirstamp)
 google/protobuf/compiler/python/protobuf_test-python_plugin_unittest.$(OBJEXT):  \
 	google/protobuf/compiler/python/$(am__dirstamp) \
 	google/protobuf/compiler/python/$(DEPDIR)/$(am__dirstamp)
@@ -3141,14 +3051,14 @@ google/protobuf/util/protobuf_test-message_differencer_unittest.pb.$(OBJEXT):  \
 	google/protobuf/util/$(am__dirstamp) \
 	google/protobuf/util/$(DEPDIR)/$(am__dirstamp)
 
-protobuf-test$(EXEEXT): $(protobuf_test_OBJECTS) $(protobuf_test_DEPENDENCIES) $(EXTRA_protobuf_test_DEPENDENCIES) 
+protobuf-test$(EXEEXT): $(protobuf_test_OBJECTS) $(protobuf_test_DEPENDENCIES) $(EXTRA_protobuf_test_DEPENDENCIES)
 	@rm -f protobuf-test$(EXEEXT)
 	$(AM_V_CXXLD)$(protobuf_test_LINK) $(protobuf_test_OBJECTS) $(protobuf_test_LDADD) $(LIBS)
 google/protobuf/compiler/main.$(OBJEXT):  \
 	google/protobuf/compiler/$(am__dirstamp) \
 	google/protobuf/compiler/$(DEPDIR)/$(am__dirstamp)
 
-protoc$(EXEEXT): $(protoc_OBJECTS) $(protoc_DEPENDENCIES) $(EXTRA_protoc_DEPENDENCIES) 
+protoc$(EXEEXT): $(protoc_OBJECTS) $(protoc_DEPENDENCIES) $(EXTRA_protoc_DEPENDENCIES)
 	@rm -f protoc$(EXEEXT)
 	$(AM_V_CXXLD)$(CXXLINK) $(protoc_OBJECTS) $(protoc_LDADD) $(LIBS)
 google/protobuf/compiler/test_plugin-mock_code_generator.$(OBJEXT):  \
@@ -3161,21 +3071,21 @@ google/protobuf/compiler/test_plugin-test_plugin.$(OBJEXT):  \
 	google/protobuf/compiler/$(am__dirstamp) \
 	google/protobuf/compiler/$(DEPDIR)/$(am__dirstamp)
 
-test_plugin$(EXEEXT): $(test_plugin_OBJECTS) $(test_plugin_DEPENDENCIES) $(EXTRA_test_plugin_DEPENDENCIES) 
+test_plugin$(EXEEXT): $(test_plugin_OBJECTS) $(test_plugin_DEPENDENCIES) $(EXTRA_test_plugin_DEPENDENCIES)
 	@rm -f test_plugin$(EXEEXT)
 	$(AM_V_CXXLD)$(CXXLINK) $(test_plugin_OBJECTS) $(test_plugin_LDADD) $(LIBS)
 google/protobuf/testing/zcgunzip.$(OBJEXT):  \
 	google/protobuf/testing/$(am__dirstamp) \
 	google/protobuf/testing/$(DEPDIR)/$(am__dirstamp)
 
-zcgunzip$(EXEEXT): $(zcgunzip_OBJECTS) $(zcgunzip_DEPENDENCIES) $(EXTRA_zcgunzip_DEPENDENCIES) 
+zcgunzip$(EXEEXT): $(zcgunzip_OBJECTS) $(zcgunzip_DEPENDENCIES) $(EXTRA_zcgunzip_DEPENDENCIES)
 	@rm -f zcgunzip$(EXEEXT)
 	$(AM_V_CXXLD)$(CXXLINK) $(zcgunzip_OBJECTS) $(zcgunzip_LDADD) $(LIBS)
 google/protobuf/testing/zcgzip.$(OBJEXT):  \
 	google/protobuf/testing/$(am__dirstamp) \
 	google/protobuf/testing/$(DEPDIR)/$(am__dirstamp)
 
-zcgzip$(EXEEXT): $(zcgzip_OBJECTS) $(zcgzip_DEPENDENCIES) $(EXTRA_zcgzip_DEPENDENCIES) 
+zcgzip$(EXEEXT): $(zcgzip_OBJECTS) $(zcgzip_DEPENDENCIES) $(EXTRA_zcgzip_DEPENDENCIES)
 	@rm -f zcgzip$(EXEEXT)
 	$(AM_V_CXXLD)$(CXXLINK) $(zcgzip_OBJECTS) $(zcgzip_LDADD) $(LIBS)
 
@@ -3191,8 +3101,6 @@ mostlyclean-compile:
 	-rm -f google/protobuf/compiler/csharp/*.lo
 	-rm -f google/protobuf/compiler/js/*.$(OBJEXT)
 	-rm -f google/protobuf/compiler/js/*.lo
-	-rm -f google/protobuf/compiler/objectivec/*.$(OBJEXT)
-	-rm -f google/protobuf/compiler/objectivec/*.lo
 	-rm -f google/protobuf/compiler/php/*.$(OBJEXT)
 	-rm -f google/protobuf/compiler/php/*.lo
 	-rm -f google/protobuf/compiler/python/*.$(OBJEXT)
@@ -3443,19 +3351,6 @@ distclean-compile:
 @AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/csharp/$(DEPDIR)/csharp_wrapper_field.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/csharp/$(DEPDIR)/protobuf_test-csharp_generator_unittest.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/js/$(DEPDIR)/js_generator.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/objectivec/$(DEPDIR)/objectivec_enum.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/objectivec/$(DEPDIR)/objectivec_enum_field.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/objectivec/$(DEPDIR)/objectivec_extension.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/objectivec/$(DEPDIR)/objectivec_field.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/objectivec/$(DEPDIR)/objectivec_file.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/objectivec/$(DEPDIR)/objectivec_generator.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/objectivec/$(DEPDIR)/objectivec_helpers.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/objectivec/$(DEPDIR)/objectivec_map_field.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/objectivec/$(DEPDIR)/objectivec_message.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/objectivec/$(DEPDIR)/objectivec_message_field.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/objectivec/$(DEPDIR)/objectivec_oneof.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/objectivec/$(DEPDIR)/objectivec_primitive_field.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/objectivec/$(DEPDIR)/protobuf_test-objectivec_helpers_unittest.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/php/$(DEPDIR)/php_generator.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/python/$(DEPDIR)/protobuf_test-python_plugin_unittest.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@google/protobuf/compiler/python/$(DEPDIR)/python_generator.Plo@am__quote@
@@ -5928,20 +5823,6 @@ google/protobuf/compiler/cpp/protobuf_test-metadata_test.obj: google/protobuf/co
 @AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(protobuf_test_CPPFLAGS) $(CPPFLAGS) $(protobuf_test_CXXFLAGS) $(CXXFLAGS) -c -o google/protobuf/compiler/cpp/protobuf_test-metadata_test.obj `if test -f 'google/protobuf/compiler/cpp/metadata_test.cc'; then $(CYGPATH_W) 'google/protobuf/compiler/cpp/metadata_test.cc'; else $(CYGPATH_W) '$(srcdir)/google/protobuf/compiler/cpp/metadata_test.cc'; fi`
 
-google/protobuf/compiler/objectivec/protobuf_test-objectivec_helpers_unittest.o: google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc
-@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(protobuf_test_CPPFLAGS) $(CPPFLAGS) $(protobuf_test_CXXFLAGS) $(CXXFLAGS) -MT google/protobuf/compiler/objectivec/protobuf_test-objectivec_helpers_unittest.o -MD -MP -MF google/protobuf/compiler/objectivec/$(DEPDIR)/protobuf_test-objectivec_helpers_unittest.Tpo -c -o google/protobuf/compiler/objectivec/protobuf_test-objectivec_helpers_unittest.o `test -f 'google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc' || echo '$(srcdir)/'`google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc
-@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) google/protobuf/compiler/objectivec/$(DEPDIR)/protobuf_test-objectivec_helpers_unittest.Tpo google/protobuf/compiler/objectivec/$(DEPDIR)/protobuf_test-objectivec_helpers_unittest.Po
-@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc' object='google/protobuf/compiler/objectivec/protobuf_test-objectivec_helpers_unittest.o' libtool=no @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(protobuf_test_CPPFLAGS) $(CPPFLAGS) $(protobuf_test_CXXFLAGS) $(CXXFLAGS) -c -o google/protobuf/compiler/objectivec/protobuf_test-objectivec_helpers_unittest.o `test -f 'google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc' || echo '$(srcdir)/'`google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc
-
-google/protobuf/compiler/objectivec/protobuf_test-objectivec_helpers_unittest.obj: google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc
-@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(protobuf_test_CPPFLAGS) $(CPPFLAGS) $(protobuf_test_CXXFLAGS) $(CXXFLAGS) -MT google/protobuf/compiler/objectivec/protobuf_test-objectivec_helpers_unittest.obj -MD -MP -MF google/protobuf/compiler/objectivec/$(DEPDIR)/protobuf_test-objectivec_helpers_unittest.Tpo -c -o google/protobuf/compiler/objectivec/protobuf_test-objectivec_helpers_unittest.obj `if test -f 'google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc'; then $(CYGPATH_W) 'google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc'; fi`
-@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) google/protobuf/compiler/objectivec/$(DEPDIR)/protobuf_test-objectivec_helpers_unittest.Tpo google/protobuf/compiler/objectivec/$(DEPDIR)/protobuf_test-objectivec_helpers_unittest.Po
-@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc' object='google/protobuf/compiler/objectivec/protobuf_test-objectivec_helpers_unittest.obj' libtool=no @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(protobuf_test_CPPFLAGS) $(CPPFLAGS) $(protobuf_test_CXXFLAGS) $(CXXFLAGS) -c -o google/protobuf/compiler/objectivec/protobuf_test-objectivec_helpers_unittest.obj `if test -f 'google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc'; then $(CYGPATH_W) 'google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc'; fi`
-
 google/protobuf/compiler/python/protobuf_test-python_plugin_unittest.o: google/protobuf/compiler/python/python_plugin_unittest.cc
 @am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(protobuf_test_CPPFLAGS) $(CPPFLAGS) $(protobuf_test_CXXFLAGS) $(CXXFLAGS) -MT google/protobuf/compiler/python/protobuf_test-python_plugin_unittest.o -MD -MP -MF google/protobuf/compiler/python/$(DEPDIR)/protobuf_test-python_plugin_unittest.Tpo -c -o google/protobuf/compiler/python/protobuf_test-python_plugin_unittest.o `test -f 'google/protobuf/compiler/python/python_plugin_unittest.cc' || echo '$(srcdir)/'`google/protobuf/compiler/python/python_plugin_unittest.cc
 @am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) google/protobuf/compiler/python/$(DEPDIR)/protobuf_test-python_plugin_unittest.Tpo google/protobuf/compiler/python/$(DEPDIR)/protobuf_test-python_plugin_unittest.Po
@@ -6918,7 +6799,6 @@ clean-libtool:
 	-rm -rf google/protobuf/compiler/cpp/.libs google/protobuf/compiler/cpp/_libs
 	-rm -rf google/protobuf/compiler/csharp/.libs google/protobuf/compiler/csharp/_libs
 	-rm -rf google/protobuf/compiler/js/.libs google/protobuf/compiler/js/_libs
-	-rm -rf google/protobuf/compiler/objectivec/.libs google/protobuf/compiler/objectivec/_libs
 	-rm -rf google/protobuf/compiler/php/.libs google/protobuf/compiler/php/_libs
 	-rm -rf google/protobuf/compiler/python/.libs google/protobuf/compiler/python/_libs
 	-rm -rf google/protobuf/compiler/ruby/.libs google/protobuf/compiler/ruby/_libs
@@ -7315,8 +7195,6 @@ distclean-generic:
 	-rm -f google/protobuf/compiler/csharp/$(am__dirstamp)
 	-rm -f google/protobuf/compiler/js/$(DEPDIR)/$(am__dirstamp)
 	-rm -f google/protobuf/compiler/js/$(am__dirstamp)
-	-rm -f google/protobuf/compiler/objectivec/$(DEPDIR)/$(am__dirstamp)
-	-rm -f google/protobuf/compiler/objectivec/$(am__dirstamp)
 	-rm -f google/protobuf/compiler/php/$(DEPDIR)/$(am__dirstamp)
 	-rm -f google/protobuf/compiler/php/$(am__dirstamp)
 	-rm -f google/protobuf/compiler/python/$(DEPDIR)/$(am__dirstamp)
@@ -7347,7 +7225,7 @@ clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
 	clean-libLTLIBRARIES clean-libtool clean-local mostlyclean-am
 
 distclean: distclean-am
-	-rm -rf ./$(DEPDIR) google/protobuf/$(DEPDIR) google/protobuf/compiler/$(DEPDIR) google/protobuf/compiler/cpp/$(DEPDIR) google/protobuf/compiler/csharp/$(DEPDIR) google/protobuf/compiler/js/$(DEPDIR) google/protobuf/compiler/objectivec/$(DEPDIR) google/protobuf/compiler/php/$(DEPDIR) google/protobuf/compiler/python/$(DEPDIR) google/protobuf/compiler/ruby/$(DEPDIR) google/protobuf/io/$(DEPDIR) google/protobuf/stubs/$(DEPDIR) google/protobuf/testing/$(DEPDIR) google/protobuf/util/$(DEPDIR) google/protobuf/util/internal/$(DEPDIR) google/protobuf/util/internal/testdata/$(DEPDIR)
+	-rm -rf ./$(DEPDIR) google/protobuf/$(DEPDIR) google/protobuf/compiler/$(DEPDIR) google/protobuf/compiler/cpp/$(DEPDIR) google/protobuf/compiler/csharp/$(DEPDIR) google/protobuf/compiler/js/$(DEPDIR) google/protobuf/compiler/php/$(DEPDIR) google/protobuf/compiler/python/$(DEPDIR) google/protobuf/compiler/ruby/$(DEPDIR) google/protobuf/io/$(DEPDIR) google/protobuf/stubs/$(DEPDIR) google/protobuf/testing/$(DEPDIR) google/protobuf/util/$(DEPDIR) google/protobuf/util/internal/$(DEPDIR) google/protobuf/util/internal/testdata/$(DEPDIR)
 	-rm -f Makefile
 distclean-am: clean-am distclean-compile distclean-generic \
 	distclean-tags
@@ -7394,7 +7272,7 @@ install-ps-am:
 installcheck-am:
 
 maintainer-clean: maintainer-clean-am
-	-rm -rf ./$(DEPDIR) google/protobuf/$(DEPDIR) google/protobuf/compiler/$(DEPDIR) google/protobuf/compiler/cpp/$(DEPDIR) google/protobuf/compiler/csharp/$(DEPDIR) google/protobuf/compiler/js/$(DEPDIR) google/protobuf/compiler/objectivec/$(DEPDIR) google/protobuf/compiler/php/$(DEPDIR) google/protobuf/compiler/python/$(DEPDIR) google/protobuf/compiler/ruby/$(DEPDIR) google/protobuf/io/$(DEPDIR) google/protobuf/stubs/$(DEPDIR) google/protobuf/testing/$(DEPDIR) google/protobuf/util/$(DEPDIR) google/protobuf/util/internal/$(DEPDIR) google/protobuf/util/internal/testdata/$(DEPDIR)
+	-rm -rf ./$(DEPDIR) google/protobuf/$(DEPDIR) google/protobuf/compiler/$(DEPDIR) google/protobuf/compiler/cpp/$(DEPDIR) google/protobuf/compiler/csharp/$(DEPDIR) google/protobuf/compiler/js/$(DEPDIR) google/protobuf/compiler/php/$(DEPDIR) google/protobuf/compiler/python/$(DEPDIR) google/protobuf/compiler/ruby/$(DEPDIR) google/protobuf/io/$(DEPDIR) google/protobuf/stubs/$(DEPDIR) google/protobuf/testing/$(DEPDIR) google/protobuf/util/$(DEPDIR) google/protobuf/util/internal/$(DEPDIR) google/protobuf/util/internal/testdata/$(DEPDIR)
 	-rm -f Makefile
 maintainer-clean-am: distclean-am maintainer-clean-generic
 
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_enum.cc b/src/google/protobuf/compiler/objectivec/objectivec_enum.cc
deleted file mode 100644
index 34e1782..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_enum.cc
+++ /dev/null
@@ -1,223 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#include <map>
-#include <string>
-
-#include <google/protobuf/compiler/objectivec/objectivec_enum.h>
-#include <google/protobuf/compiler/objectivec/objectivec_helpers.h>
-#include <google/protobuf/io/printer.h>
-#include <google/protobuf/stubs/strutil.h>
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-EnumGenerator::EnumGenerator(const EnumDescriptor* descriptor)
-    : descriptor_(descriptor),
-      name_(EnumName(descriptor_)) {
-  for (int i = 0; i < descriptor_->value_count(); i++) {
-    const EnumValueDescriptor* value = descriptor_->value(i);
-    const EnumValueDescriptor* canonical_value =
-        descriptor_->FindValueByNumber(value->number());
-
-    if (value == canonical_value) {
-      base_values_.push_back(value);
-    }
-    all_values_.push_back(value);
-  }
-}
-
-EnumGenerator::~EnumGenerator() {}
-
-void EnumGenerator::GenerateHeader(io::Printer* printer) {
-  string enum_comments;
-  SourceLocation location;
-  if (descriptor_->GetSourceLocation(&location)) {
-    enum_comments = BuildCommentsString(location, true);
-  } else {
-    enum_comments = "";
-  }
-
-  printer->Print(
-      "#pragma mark - Enum $name$\n"
-      "\n",
-      "name", name_);
-
-  printer->Print("$comments$typedef$deprecated_attribute$ GPB_ENUM($name$) {\n",
-                 "comments", enum_comments,
-                 "deprecated_attribute", GetOptionalDeprecatedAttribute(descriptor_),
-                 "name", name_);
-  printer->Indent();
-
-  if (HasPreservingUnknownEnumSemantics(descriptor_->file())) {
-    // Include the unknown value.
-    printer->Print(
-      "/**\n"
-      " * Value used if any message's field encounters a value that is not defined\n"
-      " * by this enum. The message will also have C functions to get/set the rawValue\n"
-      " * of the field.\n"
-      " **/\n"
-      "$name$_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,\n",
-      "name", name_);
-  }
-  for (int i = 0; i < all_values_.size(); i++) {
-    SourceLocation location;
-    if (all_values_[i]->GetSourceLocation(&location)) {
-      string comments = BuildCommentsString(location, true).c_str();
-      if (comments.length() > 0) {
-        if (i > 0) {
-          printer->Print("\n");
-        }
-        printer->Print(comments.c_str());
-      }
-    }
-
-    printer->Print(
-        "$name$$deprecated_attribute$ = $value$,\n",
-        "name", EnumValueName(all_values_[i]),
-        "deprecated_attribute", GetOptionalDeprecatedAttribute(all_values_[i]),
-        "value", SimpleItoa(all_values_[i]->number()));
-  }
-  printer->Outdent();
-  printer->Print(
-      "};\n"
-      "\n"
-      "GPBEnumDescriptor *$name$_EnumDescriptor(void);\n"
-      "\n"
-      "/**\n"
-      " * Checks to see if the given value is defined by the enum or was not known at\n"
-      " * the time this source was generated.\n"
-      " **/\n"
-      "BOOL $name$_IsValidValue(int32_t value);\n"
-      "\n",
-      "name", name_);
-}
-
-void EnumGenerator::GenerateSource(io::Printer* printer) {
-  printer->Print(
-      "#pragma mark - Enum $name$\n"
-      "\n",
-      "name", name_);
-
-  // Note: For the TextFormat decode info, we can't use the enum value as
-  // the key because protocol buffer enums have 'allow_alias', which lets
-  // a value be used more than once. Instead, the index into the list of
-  // enum value descriptions is used. Note: start with -1 so the first one
-  // will be zero.
-  TextFormatDecodeData text_format_decode_data;
-  int enum_value_description_key = -1;
-  string text_blob;
-
-  for (int i = 0; i < all_values_.size(); i++) {
-    ++enum_value_description_key;
-    string short_name(EnumValueShortName(all_values_[i]));
-    text_blob += short_name + '\0';
-    if (UnCamelCaseEnumShortName(short_name) != all_values_[i]->name()) {
-      text_format_decode_data.AddString(enum_value_description_key, short_name,
-                                        all_values_[i]->name());
-    }
-  }
-
-  printer->Print(
-      "GPBEnumDescriptor *$name$_EnumDescriptor(void) {\n"
-      "  static GPBEnumDescriptor *descriptor = NULL;\n"
-      "  if (!descriptor) {\n",
-      "name", name_);
-
-  static const int kBytesPerLine = 40;  // allow for escaping
-  printer->Print(
-      "    static const char *valueNames =");
-  for (int i = 0; i < text_blob.size(); i += kBytesPerLine) {
-    printer->Print(
-        "\n        \"$data$\"",
-        "data", EscapeTrigraphs(CEscape(text_blob.substr(i, kBytesPerLine))));
-  }
-  printer->Print(
-      ";\n"
-      "    static const int32_t values[] = {\n");
-  for (int i = 0; i < all_values_.size(); i++) {
-    printer->Print("        $name$,\n",  "name", EnumValueName(all_values_[i]));
-  }
-  printer->Print("    };\n");
-
-  if (text_format_decode_data.num_entries() == 0) {
-    printer->Print(
-        "    GPBEnumDescriptor *worker =\n"
-        "        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol($name$)\n"
-        "                                       valueNames:valueNames\n"
-        "                                           values:values\n"
-        "                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))\n"
-        "                                     enumVerifier:$name$_IsValidValue];\n",
-        "name", name_);
-    } else {
-      printer->Print(
-        "    static const char *extraTextFormatInfo = \"$extraTextFormatInfo$\";\n"
-        "    GPBEnumDescriptor *worker =\n"
-        "        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol($name$)\n"
-        "                                       valueNames:valueNames\n"
-        "                                           values:values\n"
-        "                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))\n"
-        "                                     enumVerifier:$name$_IsValidValue\n"
-        "                              extraTextFormatInfo:extraTextFormatInfo];\n",
-        "name", name_,
-        "extraTextFormatInfo", CEscape(text_format_decode_data.Data()));
-    }
-    printer->Print(
-      "    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {\n"
-      "      [worker release];\n"
-      "    }\n"
-      "  }\n"
-      "  return descriptor;\n"
-      "}\n\n");
-
-  printer->Print(
-      "BOOL $name$_IsValidValue(int32_t value__) {\n"
-      "  switch (value__) {\n",
-      "name", name_);
-
-  for (int i = 0; i < base_values_.size(); i++) {
-    printer->Print(
-        "    case $name$:\n",
-        "name", EnumValueName(base_values_[i]));
-  }
-
-  printer->Print(
-      "      return YES;\n"
-      "    default:\n"
-      "      return NO;\n"
-      "  }\n"
-      "}\n\n");
-}
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_enum.h b/src/google/protobuf/compiler/objectivec/objectivec_enum.h
deleted file mode 100644
index 0b41cf7..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_enum.h
+++ /dev/null
@@ -1,73 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#ifndef GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_ENUM_H__
-#define GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_ENUM_H__
-
-#include <string>
-#include <set>
-#include <vector>
-#include <google/protobuf/descriptor.h>
-
-namespace google {
-namespace protobuf {
-namespace io {
-class Printer;  // printer.h
-}
-}
-
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-class EnumGenerator {
- public:
-  explicit EnumGenerator(const EnumDescriptor* descriptor);
-  ~EnumGenerator();
-
-  void GenerateHeader(io::Printer* printer);
-  void GenerateSource(io::Printer* printer);
-
-  const string& name() const { return name_; }
-
- private:
-  const EnumDescriptor* descriptor_;
-  vector<const EnumValueDescriptor*> base_values_;
-  vector<const EnumValueDescriptor*> all_values_;
-  const string name_;
-
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(EnumGenerator);
-};
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
-#endif  // GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_ENUM_H__
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_enum_field.cc b/src/google/protobuf/compiler/objectivec/objectivec_enum_field.cc
deleted file mode 100644
index 7a774a0..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_enum_field.cc
+++ /dev/null
@@ -1,151 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#include <map>
-#include <string>
-
-#include <google/protobuf/compiler/objectivec/objectivec_enum_field.h>
-#include <google/protobuf/stubs/common.h>
-#include <google/protobuf/compiler/objectivec/objectivec_helpers.h>
-#include <google/protobuf/io/printer.h>
-#include <google/protobuf/wire_format.h>
-#include <google/protobuf/stubs/strutil.h>
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-namespace {
-
-void SetEnumVariables(const FieldDescriptor* descriptor,
-                      map<string, string>* variables) {
-  string type = EnumName(descriptor->enum_type());
-  (*variables)["storage_type"] = type;
-  // For non repeated fields, if it was defined in a different file, the
-  // property decls need to use "enum NAME" rather than just "NAME" to support
-  // the forward declaration of the enums.
-  if (!descriptor->is_repeated() &&
-      (descriptor->file() != descriptor->enum_type()->file())) {
-    (*variables)["property_type"] = "enum " + type;
-  }
-  (*variables)["enum_verifier"] = type + "_IsValidValue";
-  (*variables)["enum_desc_func"] = type + "_EnumDescriptor";
-
-  (*variables)["dataTypeSpecific_name"] = "enumDescFunc";
-  (*variables)["dataTypeSpecific_value"] = (*variables)["enum_desc_func"];
-
-  const Descriptor* msg_descriptor = descriptor->containing_type();
-  (*variables)["owning_message_class"] = ClassName(msg_descriptor);
-}
-}  // namespace
-
-EnumFieldGenerator::EnumFieldGenerator(const FieldDescriptor* descriptor,
-                                       const Options& options)
-    : SingleFieldGenerator(descriptor, options) {
-  SetEnumVariables(descriptor, &variables_);
-}
-
-EnumFieldGenerator::~EnumFieldGenerator() {}
-
-void EnumFieldGenerator::GenerateCFunctionDeclarations(
-    io::Printer* printer) const {
-  if (!HasPreservingUnknownEnumSemantics(descriptor_->file())) {
-    return;
-  }
-
-  printer->Print(
-      variables_,
-      "/**\n"
-      " * Fetches the raw value of a @c $owning_message_class$'s @c $name$ property, even\n"
-      " * if the value was not defined by the enum at the time the code was generated.\n"
-      " **/\n"
-      "int32_t $owning_message_class$_$capitalized_name$_RawValue($owning_message_class$ *message);\n"
-      "/**\n"
-      " * Sets the raw value of an @c $owning_message_class$'s @c $name$ property, allowing\n"
-      " * it to be set to a value that was not defined by the enum at the time the code\n"
-      " * was generated.\n"
-      " **/\n"
-      "void Set$owning_message_class$_$capitalized_name$_RawValue($owning_message_class$ *message, int32_t value);\n"
-      "\n");
-}
-
-void EnumFieldGenerator::GenerateCFunctionImplementations(
-    io::Printer* printer) const {
-  if (!HasPreservingUnknownEnumSemantics(descriptor_->file())) return;
-
-  printer->Print(
-      variables_,
-      "int32_t $owning_message_class$_$capitalized_name$_RawValue($owning_message_class$ *message) {\n"
-      "  GPBDescriptor *descriptor = [$owning_message_class$ descriptor];\n"
-      "  GPBFieldDescriptor *field = [descriptor fieldWithNumber:$field_number_name$];\n"
-      "  return GPBGetMessageInt32Field(message, field);\n"
-      "}\n"
-      "\n"
-      "void Set$owning_message_class$_$capitalized_name$_RawValue($owning_message_class$ *message, int32_t value) {\n"
-      "  GPBDescriptor *descriptor = [$owning_message_class$ descriptor];\n"
-      "  GPBFieldDescriptor *field = [descriptor fieldWithNumber:$field_number_name$];\n"
-      "  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);\n"
-      "}\n"
-      "\n");
-}
-
-void EnumFieldGenerator::DetermineForwardDeclarations(
-    set<string>* fwd_decls) const {
-  SingleFieldGenerator::DetermineForwardDeclarations(fwd_decls);
-  // If it is an enum defined in a different file, then we'll need a forward
-  // declaration for it.  When it is in our file, all the enums are output
-  // before the message, so it will be declared before it is needed.
-  if (descriptor_->file() != descriptor_->enum_type()->file()) {
-    // Enum name is already in "storage_type".
-    const string& name = variable("storage_type");
-    fwd_decls->insert("GPB_ENUM_FWD_DECLARE(" + name + ")");
-  }
-}
-
-RepeatedEnumFieldGenerator::RepeatedEnumFieldGenerator(
-    const FieldDescriptor* descriptor, const Options& options)
-    : RepeatedFieldGenerator(descriptor, options) {
-  SetEnumVariables(descriptor, &variables_);
-  variables_["array_storage_type"] = "GPBEnumArray";
-}
-
-RepeatedEnumFieldGenerator::~RepeatedEnumFieldGenerator() {}
-
-void RepeatedEnumFieldGenerator::FinishInitialization(void) {
-  RepeatedFieldGenerator::FinishInitialization();
-  variables_["array_comment"] =
-      "// |" + variables_["name"] + "| contains |" + variables_["storage_type"] + "|\n";
-}
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_enum_field.h b/src/google/protobuf/compiler/objectivec/objectivec_enum_field.h
deleted file mode 100644
index 946faa8..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_enum_field.h
+++ /dev/null
@@ -1,80 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#ifndef GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_ENUM_FIELD_H__
-#define GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_ENUM_FIELD_H__
-
-#include <map>
-#include <string>
-#include <google/protobuf/compiler/objectivec/objectivec_field.h>
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-class EnumFieldGenerator : public SingleFieldGenerator {
-  friend FieldGenerator* FieldGenerator::Make(const FieldDescriptor* field,
-                                              const Options& options);
-
- public:
-  virtual void GenerateCFunctionDeclarations(io::Printer* printer) const;
-  virtual void GenerateCFunctionImplementations(io::Printer* printer) const;
-  virtual void DetermineForwardDeclarations(set<string>* fwd_decls) const;
-
- protected:
-  EnumFieldGenerator(const FieldDescriptor* descriptor, const Options& options);
-  virtual ~EnumFieldGenerator();
-
- private:
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(EnumFieldGenerator);
-};
-
-class RepeatedEnumFieldGenerator : public RepeatedFieldGenerator {
-  friend FieldGenerator* FieldGenerator::Make(const FieldDescriptor* field,
-                                              const Options& options);
-
- public:
-  virtual void FinishInitialization();
-
- protected:
-  RepeatedEnumFieldGenerator(const FieldDescriptor* descriptor,
-                             const Options& options);
-  virtual ~RepeatedEnumFieldGenerator();
-
- private:
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(RepeatedEnumFieldGenerator);
-};
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
-#endif  // GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_ENUM_FIELD_H__
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_extension.cc b/src/google/protobuf/compiler/objectivec/objectivec_extension.cc
deleted file mode 100644
index d0de1ec..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_extension.cc
+++ /dev/null
@@ -1,136 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#include <iostream>
-
-#include <google/protobuf/compiler/objectivec/objectivec_extension.h>
-#include <google/protobuf/compiler/objectivec/objectivec_helpers.h>
-#include <google/protobuf/descriptor.pb.h>
-#include <google/protobuf/stubs/strutil.h>
-#include <google/protobuf/io/printer.h>
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-ExtensionGenerator::ExtensionGenerator(const string& root_class_name,
-                                       const FieldDescriptor* descriptor)
-    : method_name_(ExtensionMethodName(descriptor)),
-      root_class_and_method_name_(root_class_name + "_" + method_name_),
-      descriptor_(descriptor) {
-  if (descriptor->is_map()) {
-    // NOTE: src/google/protobuf/compiler/plugin.cc makes use of cerr for some
-    // error cases, so it seems to be ok to use as a back door for errors.
-    cerr << "error: Extension is a map<>!"
-         << " That used to be blocked by the compiler." << endl;
-    cerr.flush();
-    abort();
-  }
-}
-
-ExtensionGenerator::~ExtensionGenerator() {}
-
-void ExtensionGenerator::GenerateMembersHeader(io::Printer* printer) {
-  map<string, string> vars;
-  vars["method_name"] = method_name_;
-  SourceLocation location;
-  if (descriptor_->GetSourceLocation(&location)) {
-    vars["comments"] = BuildCommentsString(location, true);
-  } else {
-    vars["comments"] = "";
-  }
-  printer->Print(vars,
-                 "$comments$"
-                 "+ (GPBExtensionDescriptor *)$method_name$;\n");
-}
-
-void ExtensionGenerator::GenerateStaticVariablesInitialization(
-    io::Printer* printer) {
-  map<string, string> vars;
-  vars["root_class_and_method_name"] = root_class_and_method_name_;
-  vars["extended_type"] = ClassName(descriptor_->containing_type());
-  vars["number"] = SimpleItoa(descriptor_->number());
-
-  std::vector<string> options;
-  if (descriptor_->is_repeated()) options.push_back("GPBExtensionRepeated");
-  if (descriptor_->is_packed()) options.push_back("GPBExtensionPacked");
-  if (descriptor_->containing_type()->options().message_set_wire_format())
-    options.push_back("GPBExtensionSetWireFormat");
-
-  vars["options"] = BuildFlagsString(FLAGTYPE_EXTENSION, options);
-
-  ObjectiveCType objc_type = GetObjectiveCType(descriptor_);
-  string singular_type;
-  if (objc_type == OBJECTIVECTYPE_MESSAGE) {
-    vars["type"] = string("GPBStringifySymbol(") +
-                   ClassName(descriptor_->message_type()) + ")";
-  } else {
-    vars["type"] = "NULL";
-  }
-
-  vars["default_name"] = GPBGenericValueFieldName(descriptor_);
-  if (descriptor_->is_repeated()) {
-    vars["default"] = "nil";
-  } else {
-    vars["default"] = DefaultValue(descriptor_);
-  }
-  string type = GetCapitalizedType(descriptor_);
-  vars["extension_type"] = string("GPBDataType") + type;
-
-  if (objc_type == OBJECTIVECTYPE_ENUM) {
-    vars["enum_desc_func_name"] =
-         EnumName(descriptor_->enum_type()) + "_EnumDescriptor";
-  } else {
-    vars["enum_desc_func_name"] = "NULL";
-  }
-
-  printer->Print(vars,
-                 "{\n"
-                 "  .defaultValue.$default_name$ = $default$,\n"
-                 "  .singletonName = GPBStringifySymbol($root_class_and_method_name$),\n"
-                 "  .extendedClass = GPBStringifySymbol($extended_type$),\n"
-                 "  .messageOrGroupClassName = $type$,\n"
-                 "  .enumDescriptorFunc = $enum_desc_func_name$,\n"
-                 "  .fieldNumber = $number$,\n"
-                 "  .dataType = $extension_type$,\n"
-                 "  .options = $options$,\n"
-                 "},\n");
-}
-
-void ExtensionGenerator::GenerateRegistrationSource(io::Printer* printer) {
-  printer->Print(
-      "[registry addExtension:$root_class_and_method_name$];\n",
-      "root_class_and_method_name", root_class_and_method_name_);
-}
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_extension.h b/src/google/protobuf/compiler/objectivec/objectivec_extension.h
deleted file mode 100644
index e361e63..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_extension.h
+++ /dev/null
@@ -1,69 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#ifndef GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_EXTENSION_H__
-#define GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_EXTENSION_H__
-
-#include <google/protobuf/stubs/common.h>
-
-namespace google {
-namespace protobuf {
-class FieldDescriptor;  // descriptor.h
-namespace io {
-class Printer;  // printer.h
-}
-}
-
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-class ExtensionGenerator {
- public:
-  ExtensionGenerator(const string& root_class_name,
-                     const FieldDescriptor* descriptor);
-  ~ExtensionGenerator();
-
-  void GenerateMembersHeader(io::Printer* printer);
-  void GenerateStaticVariablesInitialization(io::Printer* printer);
-  void GenerateRegistrationSource(io::Printer* printer);
-
- private:
-  string method_name_;
-  string root_class_and_method_name_;
-  const FieldDescriptor* descriptor_;
-
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ExtensionGenerator);
-};
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
-#endif  // GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_MESSAGE_H__
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_field.cc b/src/google/protobuf/compiler/objectivec/objectivec_field.cc
deleted file mode 100644
index 527b7c0..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_field.cc
+++ /dev/null
@@ -1,477 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#include <iostream>
-
-#include <google/protobuf/compiler/objectivec/objectivec_field.h>
-#include <google/protobuf/compiler/objectivec/objectivec_helpers.h>
-#include <google/protobuf/compiler/objectivec/objectivec_enum_field.h>
-#include <google/protobuf/compiler/objectivec/objectivec_map_field.h>
-#include <google/protobuf/compiler/objectivec/objectivec_message_field.h>
-#include <google/protobuf/compiler/objectivec/objectivec_primitive_field.h>
-#include <google/protobuf/io/printer.h>
-#include <google/protobuf/wire_format.h>
-#include <google/protobuf/stubs/common.h>
-#include <google/protobuf/stubs/strutil.h>
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-namespace {
-
-void SetCommonFieldVariables(const FieldDescriptor* descriptor,
-                             map<string, string>* variables) {
-  string camel_case_name = FieldName(descriptor);
-  string raw_field_name;
-  if (descriptor->type() == FieldDescriptor::TYPE_GROUP) {
-    raw_field_name = descriptor->message_type()->name();
-  } else {
-    raw_field_name = descriptor->name();
-  }
-  // The logic here has to match -[GGPBFieldDescriptor textFormatName].
-  const string un_camel_case_name(
-      UnCamelCaseFieldName(camel_case_name, descriptor));
-  const bool needs_custom_name = (raw_field_name != un_camel_case_name);
-
-  SourceLocation location;
-  if (descriptor->GetSourceLocation(&location)) {
-    (*variables)["comments"] = BuildCommentsString(location, true);
-  } else {
-    (*variables)["comments"] = "\n";
-  }
-  const string& classname = ClassName(descriptor->containing_type());
-  (*variables)["classname"] = classname;
-  (*variables)["name"] = camel_case_name;
-  const string& capitalized_name = FieldNameCapitalized(descriptor);
-  (*variables)["capitalized_name"] = capitalized_name;
-  (*variables)["raw_field_name"] = raw_field_name;
-  (*variables)["field_number_name"] =
-      classname + "_FieldNumber_" + capitalized_name;
-  (*variables)["field_number"] = SimpleItoa(descriptor->number());
-  (*variables)["field_type"] = GetCapitalizedType(descriptor);
-  (*variables)["deprecated_attribute"] = GetOptionalDeprecatedAttribute(descriptor);
-  std::vector<string> field_flags;
-  if (descriptor->is_repeated()) field_flags.push_back("GPBFieldRepeated");
-  if (descriptor->is_required()) field_flags.push_back("GPBFieldRequired");
-  if (descriptor->is_optional()) field_flags.push_back("GPBFieldOptional");
-  if (descriptor->is_packed()) field_flags.push_back("GPBFieldPacked");
-
-  // ObjC custom flags.
-  if (descriptor->has_default_value())
-    field_flags.push_back("GPBFieldHasDefaultValue");
-  if (needs_custom_name) field_flags.push_back("GPBFieldTextFormatNameCustom");
-  if (descriptor->type() == FieldDescriptor::TYPE_ENUM) {
-    field_flags.push_back("GPBFieldHasEnumDescriptor");
-  }
-
-  (*variables)["fieldflags"] = BuildFlagsString(FLAGTYPE_FIELD, field_flags);
-
-  (*variables)["default"] = DefaultValue(descriptor);
-  (*variables)["default_name"] = GPBGenericValueFieldName(descriptor);
-
-  (*variables)["dataTypeSpecific_name"] = "className";
-  (*variables)["dataTypeSpecific_value"] = "NULL";
-
-  (*variables)["storage_offset_value"] =
-      "(uint32_t)offsetof(" + classname + "__storage_, " + camel_case_name + ")";
-  (*variables)["storage_offset_comment"] = "";
-
-  // Clear some common things so they can be set just when needed.
-  (*variables)["storage_attribute"] = "";
-}
-
-}  // namespace
-
-FieldGenerator* FieldGenerator::Make(const FieldDescriptor* field,
-                                     const Options& options) {
-  FieldGenerator* result = NULL;
-  if (field->is_repeated()) {
-    switch (GetObjectiveCType(field)) {
-      case OBJECTIVECTYPE_MESSAGE: {
-        if (field->is_map()) {
-          result = new MapFieldGenerator(field, options);
-        } else {
-          result = new RepeatedMessageFieldGenerator(field, options);
-        }
-        break;
-      }
-      case OBJECTIVECTYPE_ENUM:
-        result = new RepeatedEnumFieldGenerator(field, options);
-        break;
-      default:
-        result = new RepeatedPrimitiveFieldGenerator(field, options);
-        break;
-    }
-  } else {
-    switch (GetObjectiveCType(field)) {
-      case OBJECTIVECTYPE_MESSAGE: {
-        result = new MessageFieldGenerator(field, options);
-        break;
-      }
-      case OBJECTIVECTYPE_ENUM:
-        result = new EnumFieldGenerator(field, options);
-        break;
-      default:
-        if (IsReferenceType(field)) {
-          result = new PrimitiveObjFieldGenerator(field, options);
-        } else {
-          result = new PrimitiveFieldGenerator(field, options);
-        }
-        break;
-    }
-  }
-  result->FinishInitialization();
-  return result;
-}
-
-FieldGenerator::FieldGenerator(const FieldDescriptor* descriptor,
-                               const Options& options)
-    : descriptor_(descriptor) {
-  SetCommonFieldVariables(descriptor, &variables_);
-}
-
-FieldGenerator::~FieldGenerator() {}
-
-void FieldGenerator::GenerateFieldNumberConstant(io::Printer* printer) const {
-  printer->Print(
-      variables_,
-      "$field_number_name$ = $field_number$,\n");
-}
-
-void FieldGenerator::GenerateCFunctionDeclarations(
-    io::Printer* printer) const {
-  // Nothing
-}
-
-void FieldGenerator::GenerateCFunctionImplementations(
-    io::Printer* printer) const {
-  // Nothing
-}
-
-void FieldGenerator::DetermineForwardDeclarations(
-    set<string>* fwd_decls) const {
-  // Nothing
-}
-
-void FieldGenerator::GenerateFieldDescription(
-    io::Printer* printer, bool include_default) const {
-  // Printed in the same order as the structure decl.
-  if (include_default) {
-    printer->Print(
-        variables_,
-        "{\n"
-        "  .defaultValue.$default_name$ = $default$,\n"
-        "  .core.name = \"$name$\",\n"
-        "  .core.dataTypeSpecific.$dataTypeSpecific_name$ = $dataTypeSpecific_value$,\n"
-        "  .core.number = $field_number_name$,\n"
-        "  .core.hasIndex = $has_index$,\n"
-        "  .core.offset = $storage_offset_value$,$storage_offset_comment$\n"
-        "  .core.flags = $fieldflags$,\n"
-        "  .core.dataType = GPBDataType$field_type$,\n"
-        "},\n");
-  } else {
-    printer->Print(
-        variables_,
-        "{\n"
-        "  .name = \"$name$\",\n"
-        "  .dataTypeSpecific.$dataTypeSpecific_name$ = $dataTypeSpecific_value$,\n"
-        "  .number = $field_number_name$,\n"
-        "  .hasIndex = $has_index$,\n"
-        "  .offset = $storage_offset_value$,$storage_offset_comment$\n"
-        "  .flags = $fieldflags$,\n"
-        "  .dataType = GPBDataType$field_type$,\n"
-        "},\n");
-  }
-}
-
-void FieldGenerator::SetRuntimeHasBit(int has_index) {
-  variables_["has_index"] = SimpleItoa(has_index);
-}
-
-void FieldGenerator::SetNoHasBit(void) {
-  variables_["has_index"] = "GPBNoHasBit";
-}
-
-int FieldGenerator::ExtraRuntimeHasBitsNeeded(void) const {
-  return 0;
-}
-
-void FieldGenerator::SetExtraRuntimeHasBitsBase(int index_base) {
-  // NOTE: src/google/protobuf/compiler/plugin.cc makes use of cerr for some
-  // error cases, so it seems to be ok to use as a back door for errors.
-  cerr << "Error: should have overridden SetExtraRuntimeHasBitsBase()." << endl;
-  cerr.flush();
-  abort();
-}
-
-void FieldGenerator::SetOneofIndexBase(int index_base) {
-  if (descriptor_->containing_oneof() != NULL) {
-    int index = descriptor_->containing_oneof()->index() + index_base;
-    // Flip the sign to mark it as a oneof.
-    variables_["has_index"] = SimpleItoa(-index);
-  }
-}
-
-void FieldGenerator::FinishInitialization(void) {
-  // If "property_type" wasn't set, make it "storage_type".
-  if ((variables_.find("property_type") == variables_.end()) &&
-      (variables_.find("storage_type") != variables_.end())) {
-    variables_["property_type"] = variable("storage_type");
-  }
-}
-
-SingleFieldGenerator::SingleFieldGenerator(const FieldDescriptor* descriptor,
-                                           const Options& options)
-    : FieldGenerator(descriptor, options) {
-  // Nothing
-}
-
-SingleFieldGenerator::~SingleFieldGenerator() {}
-
-void SingleFieldGenerator::GenerateFieldStorageDeclaration(
-    io::Printer* printer) const {
-  printer->Print(variables_, "$storage_type$ $name$;\n");
-}
-
-void SingleFieldGenerator::GeneratePropertyDeclaration(
-    io::Printer* printer) const {
-  printer->Print(variables_, "$comments$");
-  printer->Print(
-      variables_,
-      "@property(nonatomic, readwrite) $property_type$ $name$$deprecated_attribute$;\n"
-      "\n");
-  if (WantsHasProperty()) {
-    printer->Print(
-        variables_,
-        "@property(nonatomic, readwrite) BOOL has$capitalized_name$$deprecated_attribute$;\n");
-  }
-}
-
-void SingleFieldGenerator::GeneratePropertyImplementation(
-    io::Printer* printer) const {
-  if (WantsHasProperty()) {
-    printer->Print(variables_, "@dynamic has$capitalized_name$, $name$;\n");
-  } else {
-    printer->Print(variables_, "@dynamic $name$;\n");
-  }
-}
-
-bool SingleFieldGenerator::WantsHasProperty(void) const {
-  if (descriptor_->containing_oneof() != NULL) {
-    // If in a oneof, it uses the oneofcase instead of a has bit.
-    return false;
-  }
-  if (HasFieldPresence(descriptor_->file())) {
-    // In proto1/proto2, every field has a has_$name$() method.
-    return true;
-  }
-  return false;
-}
-
-bool SingleFieldGenerator::RuntimeUsesHasBit(void) const {
-  if (descriptor_->containing_oneof() != NULL) {
-    // The oneof tracks what is set instead.
-    return false;
-  }
-  return true;
-}
-
-ObjCObjFieldGenerator::ObjCObjFieldGenerator(const FieldDescriptor* descriptor,
-                                             const Options& options)
-    : SingleFieldGenerator(descriptor, options) {
-  variables_["property_storage_attribute"] = "strong";
-  if (IsRetainedName(variables_["name"])) {
-    variables_["storage_attribute"] = " NS_RETURNS_NOT_RETAINED";
-  }
-}
-
-ObjCObjFieldGenerator::~ObjCObjFieldGenerator() {}
-
-void ObjCObjFieldGenerator::GenerateFieldStorageDeclaration(
-    io::Printer* printer) const {
-  printer->Print(variables_, "$storage_type$ *$name$;\n");
-}
-
-void ObjCObjFieldGenerator::GeneratePropertyDeclaration(
-    io::Printer* printer) const {
-
-  // Differs from SingleFieldGenerator::GeneratePropertyDeclaration() in that
-  // it uses pointers and deals with Objective C's rules around storage name
-  // conventions (init*, new*, etc.)
-
-  printer->Print(variables_, "$comments$");
-  printer->Print(
-      variables_,
-      "@property(nonatomic, readwrite, $property_storage_attribute$, null_resettable) $property_type$ *$name$$storage_attribute$$deprecated_attribute$;\n");
-  if (WantsHasProperty()) {
-    printer->Print(
-        variables_,
-        "/** Test to see if @c $name$ has been set. */\n"
-        "@property(nonatomic, readwrite) BOOL has$capitalized_name$$deprecated_attribute$;\n");
-  }
-  if (IsInitName(variables_.find("name")->second)) {
-    // If property name starts with init we need to annotate it to get past ARC.
-    // http://stackoverflow.com/questions/18723226/how-do-i-annotate-an-objective-c-property-with-an-objc-method-family/18723227#18723227
-    printer->Print(variables_,
-                   "- ($property_type$ *)$name$ GPB_METHOD_FAMILY_NONE$deprecated_attribute$;\n");
-  }
-  printer->Print("\n");
-}
-
-RepeatedFieldGenerator::RepeatedFieldGenerator(
-    const FieldDescriptor* descriptor, const Options& options)
-    : ObjCObjFieldGenerator(descriptor, options) {
-  // Default to no comment and let the cases needing it fill it in.
-  variables_["array_comment"] = "";
-}
-
-RepeatedFieldGenerator::~RepeatedFieldGenerator() {}
-
-void RepeatedFieldGenerator::FinishInitialization(void) {
-  FieldGenerator::FinishInitialization();
-  if (variables_.find("array_property_type") == variables_.end()) {
-    variables_["array_property_type"] = variable("array_storage_type");
-  }
-}
-
-void RepeatedFieldGenerator::GenerateFieldStorageDeclaration(
-    io::Printer* printer) const {
-  printer->Print(variables_, "$array_storage_type$ *$name$;\n");
-}
-
-void RepeatedFieldGenerator::GeneratePropertyImplementation(
-    io::Printer* printer) const {
-  printer->Print(variables_, "@dynamic $name$, $name$_Count;\n");
-}
-
-void RepeatedFieldGenerator::GeneratePropertyDeclaration(
-    io::Printer* printer) const {
-
-  // Repeated fields don't need the has* properties, but they do expose a
-  // *Count (to check without autocreation).  So for the field property we need
-  // the same logic as ObjCObjFieldGenerator::GeneratePropertyDeclaration() for
-  // dealing with needing Objective C's rules around storage name conventions
-  // (init*, new*, etc.)
-
-  printer->Print(
-      variables_,
-      "$comments$"
-      "$array_comment$"
-      "@property(nonatomic, readwrite, strong, null_resettable) $array_property_type$ *$name$$storage_attribute$$deprecated_attribute$;\n"
-      "/** The number of items in @c $name$ without causing the array to be created. */\n"
-      "@property(nonatomic, readonly) NSUInteger $name$_Count$deprecated_attribute$;\n");
-  if (IsInitName(variables_.find("name")->second)) {
-    // If property name starts with init we need to annotate it to get past ARC.
-    // http://stackoverflow.com/questions/18723226/how-do-i-annotate-an-objective-c-property-with-an-objc-method-family/18723227#18723227
-    printer->Print(variables_,
-                   "- ($array_property_type$ *)$name$ GPB_METHOD_FAMILY_NONE$deprecated_attribute$;\n");
-  }
-  printer->Print("\n");
-}
-
-bool RepeatedFieldGenerator::WantsHasProperty(void) const {
-  // Consumer check the array size/existance rather than a has bit.
-  return false;
-}
-
-bool RepeatedFieldGenerator::RuntimeUsesHasBit(void) const {
-  return false;  // The array having anything is what is used.
-}
-
-FieldGeneratorMap::FieldGeneratorMap(const Descriptor* descriptor,
-                                     const Options& options)
-    : descriptor_(descriptor),
-      field_generators_(
-          new scoped_ptr<FieldGenerator>[descriptor->field_count()]),
-      extension_generators_(
-          new scoped_ptr<FieldGenerator>[descriptor->extension_count()]) {
-  // Construct all the FieldGenerators.
-  for (int i = 0; i < descriptor->field_count(); i++) {
-    field_generators_[i].reset(
-        FieldGenerator::Make(descriptor->field(i), options));
-  }
-  for (int i = 0; i < descriptor->extension_count(); i++) {
-    extension_generators_[i].reset(
-        FieldGenerator::Make(descriptor->extension(i), options));
-  }
-}
-
-FieldGeneratorMap::~FieldGeneratorMap() {}
-
-const FieldGenerator& FieldGeneratorMap::get(
-    const FieldDescriptor* field) const {
-  GOOGLE_CHECK_EQ(field->containing_type(), descriptor_);
-  return *field_generators_[field->index()];
-}
-
-const FieldGenerator& FieldGeneratorMap::get_extension(int index) const {
-  return *extension_generators_[index];
-}
-
-int FieldGeneratorMap::CalculateHasBits(void) {
-  int total_bits = 0;
-  for (int i = 0; i < descriptor_->field_count(); i++) {
-    if (field_generators_[i]->RuntimeUsesHasBit()) {
-      field_generators_[i]->SetRuntimeHasBit(total_bits);
-      ++total_bits;
-    } else {
-      field_generators_[i]->SetNoHasBit();
-    }
-    int extra_bits = field_generators_[i]->ExtraRuntimeHasBitsNeeded();
-    if (extra_bits) {
-      field_generators_[i]->SetExtraRuntimeHasBitsBase(total_bits);
-      total_bits += extra_bits;
-    }
-  }
-  return total_bits;
-}
-
-void FieldGeneratorMap::SetOneofIndexBase(int index_base) {
-  for (int i = 0; i < descriptor_->field_count(); i++) {
-    field_generators_[i]->SetOneofIndexBase(index_base);
-  }
-}
-
-bool FieldGeneratorMap::DoesAnyFieldHaveNonZeroDefault(void) const {
-  for (int i = 0; i < descriptor_->field_count(); i++) {
-    if (HasNonZeroDefaultValue(descriptor_->field(i))) {
-      return true;
-    }
-  }
-
-  return false;
-}
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_field.h b/src/google/protobuf/compiler/objectivec/objectivec_field.h
deleted file mode 100644
index a3a4b1b..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_field.h
+++ /dev/null
@@ -1,194 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#ifndef GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_FIELD_H__
-#define GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_FIELD_H__
-
-#include <map>
-#include <string>
-#include <google/protobuf/compiler/objectivec/objectivec_helpers.h>
-#include <google/protobuf/stubs/common.h>
-#include <google/protobuf/descriptor.h>
-
-namespace google {
-namespace protobuf {
-
-namespace io {
-class Printer;  // printer.h
-}  // namespace io
-
-namespace compiler {
-namespace objectivec {
-
-class FieldGenerator {
- public:
-  static FieldGenerator* Make(const FieldDescriptor* field,
-                              const Options& options);
-
-  virtual ~FieldGenerator();
-
-  // Exposed for subclasses to fill in.
-  virtual void GenerateFieldStorageDeclaration(io::Printer* printer) const = 0;
-  virtual void GeneratePropertyDeclaration(io::Printer* printer) const = 0;
-  virtual void GeneratePropertyImplementation(io::Printer* printer) const = 0;
-
-  // Called by GenerateFieldDescription, exposed for classes that need custom
-  // generation.
-
-  // Exposed for subclasses to extend, base does nothing.
-  virtual void GenerateCFunctionDeclarations(io::Printer* printer) const;
-  virtual void GenerateCFunctionImplementations(io::Printer* printer) const;
-
-  // Exposed for subclasses, should always call it on the parent class also.
-  virtual void DetermineForwardDeclarations(set<string>* fwd_decls) const;
-
-  // Used during generation, not intended to be extended by subclasses.
-  void GenerateFieldDescription(
-      io::Printer* printer, bool include_default) const;
-  void GenerateFieldNumberConstant(io::Printer* printer) const;
-
-  // Exposed to get and set the has bits information.
-  virtual bool RuntimeUsesHasBit(void) const = 0;
-  void SetRuntimeHasBit(int has_index);
-  void SetNoHasBit(void);
-  virtual int ExtraRuntimeHasBitsNeeded(void) const;
-  virtual void SetExtraRuntimeHasBitsBase(int index_base);
-  void SetOneofIndexBase(int index_base);
-
-  string variable(const char* key) const {
-    return variables_.find(key)->second;
-  }
-
-  bool needs_textformat_name_support() const {
-    const string& field_flags = variable("fieldflags");
-    return field_flags.find("GPBFieldTextFormatNameCustom") != string::npos;
-  }
-  string generated_objc_name() const { return variable("name"); }
-  string raw_field_name() const { return variable("raw_field_name"); }
-
- protected:
-  FieldGenerator(const FieldDescriptor* descriptor, const Options& options);
-
-  virtual void FinishInitialization(void);
-  virtual bool WantsHasProperty(void) const = 0;
-
-  const FieldDescriptor* descriptor_;
-  map<string, string> variables_;
-
- private:
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FieldGenerator);
-};
-
-class SingleFieldGenerator : public FieldGenerator {
- public:
-  virtual ~SingleFieldGenerator();
-
-  virtual void GenerateFieldStorageDeclaration(io::Printer* printer) const;
-  virtual void GeneratePropertyDeclaration(io::Printer* printer) const;
-
-  virtual void GeneratePropertyImplementation(io::Printer* printer) const;
-
-  virtual bool RuntimeUsesHasBit(void) const;
-
- protected:
-  SingleFieldGenerator(const FieldDescriptor* descriptor,
-                       const Options& options);
-  virtual bool WantsHasProperty(void) const;
-
- private:
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(SingleFieldGenerator);
-};
-
-// Subclass with common support for when the field ends up as an ObjC Object.
-class ObjCObjFieldGenerator : public SingleFieldGenerator {
- public:
-  virtual ~ObjCObjFieldGenerator();
-
-  virtual void GenerateFieldStorageDeclaration(io::Printer* printer) const;
-  virtual void GeneratePropertyDeclaration(io::Printer* printer) const;
-
- protected:
-  ObjCObjFieldGenerator(const FieldDescriptor* descriptor,
-                        const Options& options);
-
- private:
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ObjCObjFieldGenerator);
-};
-
-class RepeatedFieldGenerator : public ObjCObjFieldGenerator {
- public:
-  virtual ~RepeatedFieldGenerator();
-
-  virtual void GenerateFieldStorageDeclaration(io::Printer* printer) const;
-  virtual void GeneratePropertyDeclaration(io::Printer* printer) const;
-
-  virtual void GeneratePropertyImplementation(io::Printer* printer) const;
-
-  virtual bool RuntimeUsesHasBit(void) const;
-
- protected:
-  RepeatedFieldGenerator(const FieldDescriptor* descriptor,
-                         const Options& options);
-  virtual void FinishInitialization(void);
-  virtual bool WantsHasProperty(void) const;
-
- private:
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(RepeatedFieldGenerator);
-};
-
-// Convenience class which constructs FieldGenerators for a Descriptor.
-class FieldGeneratorMap {
- public:
-  FieldGeneratorMap(const Descriptor* descriptor, const Options& options);
-  ~FieldGeneratorMap();
-
-  const FieldGenerator& get(const FieldDescriptor* field) const;
-  const FieldGenerator& get_extension(int index) const;
-
-  // Assigns the has bits and returns the number of bits needed.
-  int CalculateHasBits(void);
-
-  void SetOneofIndexBase(int index_base);
-
-  // Check if any field of this message has a non zero default.
-  bool DoesAnyFieldHaveNonZeroDefault(void) const;
-
- private:
-  const Descriptor* descriptor_;
-  scoped_array<scoped_ptr<FieldGenerator> > field_generators_;
-  scoped_array<scoped_ptr<FieldGenerator> > extension_generators_;
-
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FieldGeneratorMap);
-};
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
-#endif  // GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_FIELD_H__
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_file.cc b/src/google/protobuf/compiler/objectivec/objectivec_file.cc
deleted file mode 100644
index 7ad127b..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_file.cc
+++ /dev/null
@@ -1,564 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#include <google/protobuf/compiler/objectivec/objectivec_file.h>
-#include <google/protobuf/compiler/objectivec/objectivec_enum.h>
-#include <google/protobuf/compiler/objectivec/objectivec_extension.h>
-#include <google/protobuf/compiler/objectivec/objectivec_message.h>
-#include <google/protobuf/compiler/code_generator.h>
-#include <google/protobuf/io/printer.h>
-#include <google/protobuf/io/zero_copy_stream_impl.h>
-#include <google/protobuf/stubs/stl_util.h>
-#include <google/protobuf/stubs/strutil.h>
-#include <algorithm> // std::find()
-#include <iostream>
-#include <sstream>
-
-// NOTE: src/google/protobuf/compiler/plugin.cc makes use of cerr for some
-// error cases, so it seems to be ok to use as a back door for errors.
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-namespace {
-
-// This is also found in GPBBootstrap.h, and needs to be kept in sync.
-const int32 GOOGLE_PROTOBUF_OBJC_VERSION = 30002;
-
-const char* kHeaderExtension = ".pbobjc.h";
-
-// Checks if a message contains any extension definitions (on the message or
-// a nested message under it).
-bool MessageContainsExtensions(const Descriptor* message) {
-  if (message->extension_count() > 0) {
-    return true;
-  }
-  for (int i = 0; i < message->nested_type_count(); i++) {
-    if (MessageContainsExtensions(message->nested_type(i))) {
-      return true;
-    }
-  }
-  return false;
-}
-
-// Checks if the file contains any extensions definitions (at the root or
-// nested under a message).
-bool FileContainsExtensions(const FileDescriptor* file) {
-  if (file->extension_count() > 0) {
-    return true;
-  }
-  for (int i = 0; i < file->message_type_count(); i++) {
-    if (MessageContainsExtensions(file->message_type(i))) {
-      return true;
-    }
-  }
-  return false;
-}
-
-// Helper for CollectMinimalFileDepsContainingExtensionsWorker that marks all
-// deps as visited and prunes them from the needed files list.
-void PruneFileAndDepsMarkingAsVisited(
-    const FileDescriptor* file,
-    vector<const FileDescriptor*>* files,
-    set<const FileDescriptor*>* files_visited) {
-  vector<const FileDescriptor*>::iterator iter =
-      std::find(files->begin(), files->end(), file);
-  if (iter != files->end()) {
-    files->erase(iter);
-  }
-  files_visited->insert(file);
-  for (int i = 0; i < file->dependency_count(); i++) {
-    PruneFileAndDepsMarkingAsVisited(file->dependency(i), files, files_visited);
-  }
-}
-
-// Helper for CollectMinimalFileDepsContainingExtensions.
-void CollectMinimalFileDepsContainingExtensionsWorker(
-    const FileDescriptor* file,
-    vector<const FileDescriptor*>* files,
-    set<const FileDescriptor*>* files_visited) {
-  if (files_visited->find(file) != files_visited->end()) {
-    return;
-  }
-  files_visited->insert(file);
-
-  if (FileContainsExtensions(file)) {
-    files->push_back(file);
-    for (int i = 0; i < file->dependency_count(); i++) {
-      const FileDescriptor* dep = file->dependency(i);
-      PruneFileAndDepsMarkingAsVisited(dep, files, files_visited);
-    }
-  } else {
-    for (int i = 0; i < file->dependency_count(); i++) {
-      const FileDescriptor* dep = file->dependency(i);
-      CollectMinimalFileDepsContainingExtensionsWorker(dep, files,
-                                                       files_visited);
-    }
-  }
-}
-
-// Collect the deps of the given file that contain extensions. This can be used to
-// create the chain of roots that need to be wired together.
-//
-// NOTE: If any changes are made to this and the supporting functions, you will
-// need to manually validate what the generated code is for the test files:
-//   objectivec/Tests/unittest_extension_chain_*.proto
-// There are comments about what the expected code should be line and limited
-// testing objectivec/Tests/GPBUnittestProtos2.m around compilation (#imports
-// specifically).
-void CollectMinimalFileDepsContainingExtensions(
-    const FileDescriptor* file,
-    vector<const FileDescriptor*>* files) {
-  set<const FileDescriptor*> files_visited;
-  for (int i = 0; i < file->dependency_count(); i++) {
-    const FileDescriptor* dep = file->dependency(i);
-    CollectMinimalFileDepsContainingExtensionsWorker(dep, files,
-                                                     &files_visited);
-  }
-}
-
-bool IsDirectDependency(const FileDescriptor* dep, const FileDescriptor* file) {
-  for (int i = 0; i < file->dependency_count(); i++) {
-    if (dep == file->dependency(i)) {
-      return true;
-    }
-  }
-  return false;
-}
-
-}  // namespace
-
-FileGenerator::FileGenerator(const FileDescriptor *file, const Options& options)
-    : file_(file),
-      root_class_name_(FileClassName(file)),
-      options_(options) {
-  for (int i = 0; i < file_->enum_type_count(); i++) {
-    EnumGenerator *generator = new EnumGenerator(file_->enum_type(i));
-    enum_generators_.push_back(generator);
-  }
-  for (int i = 0; i < file_->message_type_count(); i++) {
-    MessageGenerator *generator =
-        new MessageGenerator(root_class_name_, file_->message_type(i), options_);
-    message_generators_.push_back(generator);
-  }
-  for (int i = 0; i < file_->extension_count(); i++) {
-    ExtensionGenerator *generator =
-        new ExtensionGenerator(root_class_name_, file_->extension(i));
-    extension_generators_.push_back(generator);
-  }
-}
-
-FileGenerator::~FileGenerator() {
-  STLDeleteContainerPointers(enum_generators_.begin(), enum_generators_.end());
-  STLDeleteContainerPointers(message_generators_.begin(),
-                             message_generators_.end());
-  STLDeleteContainerPointers(extension_generators_.begin(),
-                             extension_generators_.end());
-}
-
-void FileGenerator::GenerateHeader(io::Printer *printer) {
-  PrintFileRuntimePreamble(printer, "GPBProtocolBuffers.h");
-
-  // Add some verification that the generated code matches the source the
-  // code is being compiled with.
-  // NOTE: This captures the raw numeric values at the time the generator was
-  // compiled, since that will be the versions for the ObjC runtime at that
-  // time.  The constants in the generated code will then get their values at
-  // at compile time (so checking against the headers being used to compile).
-  printer->Print(
-      "#if GOOGLE_PROTOBUF_OBJC_VERSION < $google_protobuf_objc_version$\n"
-      "#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.\n"
-      "#endif\n"
-      "#if $google_protobuf_objc_version$ < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION\n"
-      "#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.\n"
-      "#endif\n"
-      "\n",
-      "google_protobuf_objc_version", SimpleItoa(GOOGLE_PROTOBUF_OBJC_VERSION));
-
-  // #import any headers for "public imports" in the proto file.
-  {
-    ImportWriter import_writer(
-        options_.generate_for_named_framework,
-        options_.named_framework_to_proto_path_mappings_path);
-    const string header_extension(kHeaderExtension);
-    for (int i = 0; i < file_->public_dependency_count(); i++) {
-      import_writer.AddFile(file_->public_dependency(i), header_extension);
-    }
-    import_writer.Print(printer);
-  }
-
-  // Note:
-  //  deprecated-declarations suppression is only needed if some place in this
-  //    proto file is something deprecated or if it references something from
-  //    another file that is deprecated.
-  printer->Print(
-      "// @@protoc_insertion_point(imports)\n"
-      "\n"
-      "#pragma clang diagnostic push\n"
-      "#pragma clang diagnostic ignored \"-Wdeprecated-declarations\"\n"
-      "\n"
-      "CF_EXTERN_C_BEGIN\n"
-      "\n");
-
-  set<string> fwd_decls;
-  for (vector<MessageGenerator *>::iterator iter = message_generators_.begin();
-       iter != message_generators_.end(); ++iter) {
-    (*iter)->DetermineForwardDeclarations(&fwd_decls);
-  }
-  for (set<string>::const_iterator i(fwd_decls.begin());
-       i != fwd_decls.end(); ++i) {
-    printer->Print("$value$;\n", "value", *i);
-  }
-  if (fwd_decls.begin() != fwd_decls.end()) {
-    printer->Print("\n");
-  }
-
-  printer->Print(
-      "NS_ASSUME_NONNULL_BEGIN\n"
-      "\n");
-
-  // need to write out all enums first
-  for (vector<EnumGenerator *>::iterator iter = enum_generators_.begin();
-       iter != enum_generators_.end(); ++iter) {
-    (*iter)->GenerateHeader(printer);
-  }
-
-  for (vector<MessageGenerator *>::iterator iter = message_generators_.begin();
-       iter != message_generators_.end(); ++iter) {
-    (*iter)->GenerateEnumHeader(printer);
-  }
-
-  // For extensions to chain together, the Root gets created even if there
-  // are no extensions.
-  printer->Print(
-      "#pragma mark - $root_class_name$\n"
-      "\n"
-      "/**\n"
-      " * Exposes the extension registry for this file.\n"
-      " *\n"
-      " * The base class provides:\n"
-      " * @code\n"
-      " *   + (GPBExtensionRegistry *)extensionRegistry;\n"
-      " * @endcode\n"
-      " * which is a @c GPBExtensionRegistry that includes all the extensions defined by\n"
-      " * this file and all files that it depends on.\n"
-      " **/\n"
-      "@interface $root_class_name$ : GPBRootObject\n"
-      "@end\n"
-      "\n",
-      "root_class_name", root_class_name_);
-
-  if (extension_generators_.size() > 0) {
-    // The dynamic methods block is only needed if there are extensions.
-    printer->Print(
-        "@interface $root_class_name$ (DynamicMethods)\n",
-        "root_class_name", root_class_name_);
-
-    for (vector<ExtensionGenerator *>::iterator iter =
-             extension_generators_.begin();
-         iter != extension_generators_.end(); ++iter) {
-      (*iter)->GenerateMembersHeader(printer);
-    }
-
-    printer->Print("@end\n\n");
-  }  // extension_generators_.size() > 0
-
-  for (vector<MessageGenerator *>::iterator iter = message_generators_.begin();
-       iter != message_generators_.end(); ++iter) {
-    (*iter)->GenerateMessageHeader(printer);
-  }
-
-  printer->Print(
-      "NS_ASSUME_NONNULL_END\n"
-      "\n"
-      "CF_EXTERN_C_END\n"
-      "\n"
-      "#pragma clang diagnostic pop\n"
-      "\n"
-      "// @@protoc_insertion_point(global_scope)\n");
-}
-
-void FileGenerator::GenerateSource(io::Printer *printer) {
-  // #import the runtime support.
-  PrintFileRuntimePreamble(printer, "GPBProtocolBuffers_RuntimeSupport.h");
-
-  vector<const FileDescriptor*> deps_with_extensions;
-  CollectMinimalFileDepsContainingExtensions(file_, &deps_with_extensions);
-
-  {
-    ImportWriter import_writer(
-        options_.generate_for_named_framework,
-        options_.named_framework_to_proto_path_mappings_path);
-    const string header_extension(kHeaderExtension);
-
-    // #import the header for this proto file.
-    import_writer.AddFile(file_, header_extension);
-
-    // #import the headers for anything that a plain dependency of this proto
-    // file (that means they were just an include, not a "public" include).
-    set<string> public_import_names;
-    for (int i = 0; i < file_->public_dependency_count(); i++) {
-      public_import_names.insert(file_->public_dependency(i)->name());
-    }
-    for (int i = 0; i < file_->dependency_count(); i++) {
-      const FileDescriptor *dep = file_->dependency(i);
-      bool public_import = (public_import_names.count(dep->name()) != 0);
-      if (!public_import) {
-        import_writer.AddFile(dep, header_extension);
-      }
-    }
-
-    // If any indirect dependency provided extensions, it needs to be directly
-    // imported so it can get merged into the root's extensions registry.
-    // See the Note by CollectMinimalFileDepsContainingExtensions before
-    // changing this.
-    for (vector<const FileDescriptor *>::iterator iter =
-             deps_with_extensions.begin();
-         iter != deps_with_extensions.end(); ++iter) {
-      if (!IsDirectDependency(*iter, file_)) {
-        import_writer.AddFile(*iter, header_extension);
-      }
-    }
-
-    import_writer.Print(printer);
-  }
-
-  bool includes_oneof = false;
-  for (vector<MessageGenerator *>::iterator iter = message_generators_.begin();
-       iter != message_generators_.end(); ++iter) {
-    if ((*iter)->IncludesOneOfDefinition()) {
-      includes_oneof = true;
-      break;
-    }
-  }
-
-  // Note:
-  //  deprecated-declarations suppression is only needed if some place in this
-  //    proto file is something deprecated or if it references something from
-  //    another file that is deprecated.
-  printer->Print(
-      "// @@protoc_insertion_point(imports)\n"
-      "\n"
-      "#pragma clang diagnostic push\n"
-      "#pragma clang diagnostic ignored \"-Wdeprecated-declarations\"\n");
-  if (includes_oneof) {
-    // The generated code for oneof's uses direct ivar access, suppress the
-    // warning incase developer turn that on in the context they compile the
-    // generated code.
-    printer->Print(
-        "#pragma clang diagnostic ignored \"-Wdirect-ivar-access\"\n");
-  }
-
-  printer->Print(
-      "\n"
-      "#pragma mark - $root_class_name$\n"
-      "\n"
-      "@implementation $root_class_name$\n\n",
-      "root_class_name", root_class_name_);
-
-  const bool file_contains_extensions = FileContainsExtensions(file_);
-
-  // If there were any extensions or this file has any dependencies, output
-  // a registry to override to create the file specific registry.
-  if (file_contains_extensions || !deps_with_extensions.empty()) {
-    printer->Print(
-        "+ (GPBExtensionRegistry*)extensionRegistry {\n"
-        "  // This is called by +initialize so there is no need to worry\n"
-        "  // about thread safety and initialization of registry.\n"
-        "  static GPBExtensionRegistry* registry = nil;\n"
-        "  if (!registry) {\n"
-        "    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();\n"
-        "    registry = [[GPBExtensionRegistry alloc] init];\n");
-
-    printer->Indent();
-    printer->Indent();
-
-    if (file_contains_extensions) {
-      printer->Print(
-          "static GPBExtensionDescription descriptions[] = {\n");
-      printer->Indent();
-      for (vector<ExtensionGenerator *>::iterator iter =
-               extension_generators_.begin();
-           iter != extension_generators_.end(); ++iter) {
-        (*iter)->GenerateStaticVariablesInitialization(printer);
-      }
-      for (vector<MessageGenerator *>::iterator iter =
-               message_generators_.begin();
-           iter != message_generators_.end(); ++iter) {
-        (*iter)->GenerateStaticVariablesInitialization(printer);
-      }
-      printer->Outdent();
-      printer->Print(
-          "};\n"
-          "for (size_t i = 0; i < sizeof(descriptions) / sizeof(descriptions[0]); ++i) {\n"
-          "  GPBExtensionDescriptor *extension =\n"
-          "      [[GPBExtensionDescriptor alloc] initWithExtensionDescription:&descriptions[i]];\n"
-          "  [registry addExtension:extension];\n"
-          "  [self globallyRegisterExtension:extension];\n"
-          "  [extension release];\n"
-          "}\n");
-    }
-
-    if (deps_with_extensions.empty()) {
-      printer->Print(
-          "// None of the imports (direct or indirect) defined extensions, so no need to add\n"
-          "// them to this registry.\n");
-    } else {
-      printer->Print(
-          "// Merge in the imports (direct or indirect) that defined extensions.\n");
-      for (vector<const FileDescriptor *>::iterator iter =
-               deps_with_extensions.begin();
-           iter != deps_with_extensions.end(); ++iter) {
-        const string root_class_name(FileClassName((*iter)));
-        printer->Print(
-            "[registry addExtensions:[$dependency$ extensionRegistry]];\n",
-            "dependency", root_class_name);
-      }
-    }
-
-    printer->Outdent();
-    printer->Outdent();
-
-    printer->Print(
-        "  }\n"
-        "  return registry;\n"
-        "}\n");
-  } else {
-    if (file_->dependency_count() > 0) {
-      printer->Print(
-          "// No extensions in the file and none of the imports (direct or indirect)\n"
-          "// defined extensions, so no need to generate +extensionRegistry.\n");
-    } else {
-      printer->Print(
-          "// No extensions in the file and no imports, so no need to generate\n"
-          "// +extensionRegistry.\n");
-    }
-  }
-
-  printer->Print("\n@end\n\n");
-
-  // File descriptor only needed if there are messages to use it.
-  if (message_generators_.size() > 0) {
-    map<string, string> vars;
-    vars["root_class_name"] = root_class_name_;
-    vars["package"] = file_->package();
-    vars["objc_prefix"] = FileClassPrefix(file_);
-    switch (file_->syntax()) {
-      case FileDescriptor::SYNTAX_UNKNOWN:
-        vars["syntax"] = "GPBFileSyntaxUnknown";
-        break;
-      case FileDescriptor::SYNTAX_PROTO2:
-        vars["syntax"] = "GPBFileSyntaxProto2";
-        break;
-      case FileDescriptor::SYNTAX_PROTO3:
-        vars["syntax"] = "GPBFileSyntaxProto3";
-        break;
-    }
-    printer->Print(vars,
-        "#pragma mark - $root_class_name$_FileDescriptor\n"
-        "\n"
-        "static GPBFileDescriptor *$root_class_name$_FileDescriptor(void) {\n"
-        "  // This is called by +initialize so there is no need to worry\n"
-        "  // about thread safety of the singleton.\n"
-        "  static GPBFileDescriptor *descriptor = NULL;\n"
-        "  if (!descriptor) {\n"
-        "    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();\n");
-    if (vars["objc_prefix"].size() > 0) {
-      printer->Print(
-          vars,
-          "    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@\"$package$\"\n"
-          "                                                 objcPrefix:@\"$objc_prefix$\"\n"
-          "                                                     syntax:$syntax$];\n");
-    } else {
-      printer->Print(
-          vars,
-          "    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@\"$package$\"\n"
-          "                                                     syntax:$syntax$];\n");
-    }
-    printer->Print(
-        "  }\n"
-        "  return descriptor;\n"
-        "}\n"
-        "\n");
-  }
-
-  for (vector<EnumGenerator *>::iterator iter = enum_generators_.begin();
-       iter != enum_generators_.end(); ++iter) {
-    (*iter)->GenerateSource(printer);
-  }
-  for (vector<MessageGenerator *>::iterator iter = message_generators_.begin();
-       iter != message_generators_.end(); ++iter) {
-    (*iter)->GenerateSource(printer);
-  }
-
-  printer->Print(
-    "\n"
-    "#pragma clang diagnostic pop\n"
-    "\n"
-    "// @@protoc_insertion_point(global_scope)\n");
-}
-
-// Helper to print the import of the runtime support at the top of generated
-// files. This currently only supports the runtime coming from a framework
-// as defined by the official CocoaPod.
-void FileGenerator::PrintFileRuntimePreamble(
-    io::Printer* printer, const string& header_to_import) const {
-  printer->Print(
-      "// Generated by the protocol buffer compiler.  DO NOT EDIT!\n"
-      "// source: $filename$\n"
-      "\n",
-      "filename", file_->name());
-
-  const string framework_name(ProtobufLibraryFrameworkName);
-  const string cpp_symbol(ProtobufFrameworkImportSymbol(framework_name));
-  printer->Print(
-      "// This CPP symbol can be defined to use imports that match up to the framework\n"
-      "// imports needed when using CocoaPods.\n"
-      "#if !defined($cpp_symbol$)\n"
-      " #define $cpp_symbol$ 0\n"
-      "#endif\n"
-      "\n"
-      "#if $cpp_symbol$\n"
-      " #import <$framework_name$/$header$>\n"
-      "#else\n"
-      " #import \"$header$\"\n"
-      "#endif\n"
-      "\n",
-      "cpp_symbol", cpp_symbol,
-      "header", header_to_import,
-      "framework_name", framework_name);
-}
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_file.h b/src/google/protobuf/compiler/objectivec/objectivec_file.h
deleted file mode 100644
index a60a688..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_file.h
+++ /dev/null
@@ -1,87 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#ifndef GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_FILE_H__
-#define GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_FILE_H__
-
-#include <string>
-#include <set>
-#include <vector>
-#include <google/protobuf/compiler/objectivec/objectivec_helpers.h>
-#include <google/protobuf/stubs/common.h>
-
-namespace google {
-namespace protobuf {
-class FileDescriptor;  // descriptor.h
-namespace io {
-class Printer;  // printer.h
-}
-}
-
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-class EnumGenerator;
-class ExtensionGenerator;
-class MessageGenerator;
-
-class FileGenerator {
- public:
-  FileGenerator(const FileDescriptor* file, const Options& options);
-  ~FileGenerator();
-
-  void GenerateSource(io::Printer* printer);
-  void GenerateHeader(io::Printer* printer);
-
-  const string& RootClassName() const { return root_class_name_; }
-
- private:
-  const FileDescriptor* file_;
-  string root_class_name_;
-
-  vector<EnumGenerator*> enum_generators_;
-  vector<MessageGenerator*> message_generators_;
-  vector<ExtensionGenerator*> extension_generators_;
-
-  const Options options_;
-
-  void PrintFileRuntimePreamble(
-      io::Printer* printer, const string& header_to_import) const;
-
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FileGenerator);
-};
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
-
-#endif  // GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_FILE_H__
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_generator.cc b/src/google/protobuf/compiler/objectivec/objectivec_generator.cc
deleted file mode 100644
index 3640746..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_generator.cc
+++ /dev/null
@@ -1,166 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#include <iostream>
-#include <google/protobuf/compiler/objectivec/objectivec_generator.h>
-#include <google/protobuf/compiler/objectivec/objectivec_file.h>
-#include <google/protobuf/compiler/objectivec/objectivec_helpers.h>
-#include <google/protobuf/io/printer.h>
-#include <google/protobuf/io/zero_copy_stream.h>
-#include <google/protobuf/stubs/strutil.h>
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-ObjectiveCGenerator::ObjectiveCGenerator() {}
-
-ObjectiveCGenerator::~ObjectiveCGenerator() {}
-
-bool ObjectiveCGenerator::HasGenerateAll() const {
-  return true;
-}
-
-bool ObjectiveCGenerator::Generate(const FileDescriptor* file,
-                                   const string& parameter,
-                                   GeneratorContext* context,
-                                   string* error) const {
-  *error = "Unimplemented Generate() method. Call GenerateAll() instead.";
-  return false;
-}
-
-bool ObjectiveCGenerator::GenerateAll(const vector<const FileDescriptor*>& files,
-                                      const string& parameter,
-                                      GeneratorContext* context,
-                                      string* error) const {
-  // -----------------------------------------------------------------
-  // Parse generator options. These options are passed to the compiler using the
-  // --objc_opt flag. The options are passed as a comma separated list of
-  // options along with their values. If the option appears multiple times, only
-  // the last value will be considered.
-  //
-  // e.g. protoc ... --objc_opt=expected_prefixes=file.txt,generate_for_named_framework=MyFramework
-
-  Options generation_options;
-
-  vector<pair<string, string> > options;
-  ParseGeneratorParameter(parameter, &options);
-  for (int i = 0; i < options.size(); i++) {
-    if (options[i].first == "expected_prefixes_path") {
-      // Path to find a file containing the expected prefixes
-      // (objc_class_prefix "PREFIX") for proto packages (package NAME). The
-      // generator will then issue warnings/errors if in the proto files being
-      // generated the option is not listed/wrong/etc in the file.
-      //
-      // The format of the file is:
-      //   - An entry is a line of "package=prefix".
-      //   - Comments start with "#".
-      //   - A comment can go on a line after a expected package/prefix pair.
-      //     (i.e. - "package=prefix # comment")
-      //
-      // There is no validation that the prefixes are good prefixes, it is
-      // assumed that they are when you create the file.
-      generation_options.expected_prefixes_path = options[i].second;
-    } else if (options[i].first == "generate_for_named_framework") {
-      // The name of the framework that protos are being generated for. This
-      // will cause the #import statements to be framework based using this
-      // name (i.e. - "#import <NAME/proto.pbobjc.h>).
-      //
-      // NOTE: If this option is used with
-      // named_framework_to_proto_path_mappings_path, then this is effectively
-      // the "default" framework name used for everything that wasn't mapped by
-      // the mapping file.
-      generation_options.generate_for_named_framework = options[i].second;
-    } else if (options[i].first == "named_framework_to_proto_path_mappings_path") {
-      // Path to find a file containing the list of framework names and proto
-      // files. The generator uses this to decide if a proto file
-      // referenced should use a framework style import vs. a user level import
-      // (#import <FRAMEWORK/file.pbobjc.h> vs #import "dir/file.pbobjc.h").
-      //
-      // The format of the file is:
-      //   - An entry is a line of "frameworkName: file.proto, dir/file2.proto".
-      //   - Comments start with "#".
-      //   - A comment can go on a line after a expected package/prefix pair.
-      //     (i.e. - "frameworkName: file.proto # comment")
-      //
-      // Any number of files can be listed for a framework, just separate them
-      // with commas.
-      //
-      // There can be multiple lines listing the same frameworkName incase it
-      // has a lot of proto files included in it; having multiple lines makes
-      // things easier to read. If a proto file is not configured in the
-      // mappings file, it will use the default framework name if one was passed
-      // with generate_for_named_framework, or the relative path to it's include
-      // path otherwise.
-      generation_options.named_framework_to_proto_path_mappings_path = options[i].second;
-    } else {
-      *error = "error: Unknown generator option: " + options[i].first;
-      return false;
-    }
-  }
-
-  // -----------------------------------------------------------------
-
-  // Validate the objc prefix/package pairings.
-  if (!ValidateObjCClassPrefixes(files, generation_options, error)) {
-    // *error will have been filled in.
-    return false;
-  }
-
-  for (int i = 0; i < files.size(); i++) {
-    const FileDescriptor* file = files[i];
-    FileGenerator file_generator(file, generation_options);
-    string filepath = FilePath(file);
-
-    // Generate header.
-    {
-      scoped_ptr<io::ZeroCopyOutputStream> output(
-          context->Open(filepath + ".pbobjc.h"));
-      io::Printer printer(output.get(), '$');
-      file_generator.GenerateHeader(&printer);
-    }
-
-    // Generate m file.
-    {
-      scoped_ptr<io::ZeroCopyOutputStream> output(
-          context->Open(filepath + ".pbobjc.m"));
-      io::Printer printer(output.get(), '$');
-      file_generator.GenerateSource(&printer);
-    }
-  }
-
-  return true;
-}
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_generator.h b/src/google/protobuf/compiler/objectivec/objectivec_generator.h
deleted file mode 100644
index b172331..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_generator.h
+++ /dev/null
@@ -1,72 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-// Generates ObjectiveC code for a given .proto file.
-
-#ifndef GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_GENERATOR_H__
-#define GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_GENERATOR_H__
-
-#include <string>
-#include <google/protobuf/compiler/code_generator.h>
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-// CodeGenerator implementation which generates a ObjectiveC source file and
-// header.  If you create your own protocol compiler binary and you want it to
-// support ObjectiveC output, you can do so by registering an instance of this
-// CodeGenerator with the CommandLineInterface in your main() function.
-class LIBPROTOC_EXPORT ObjectiveCGenerator : public CodeGenerator {
- public:
-  ObjectiveCGenerator();
-  ~ObjectiveCGenerator();
-
-  // implements CodeGenerator ----------------------------------------
-  bool HasGenerateAll() const;
-  bool Generate(const FileDescriptor* file,
-                const string& parameter,
-                GeneratorContext* context,
-                string* error) const;
-  bool GenerateAll(const vector<const FileDescriptor*>& files,
-                   const string& parameter,
-                   GeneratorContext* context,
-                   string* error) const;
-
- private:
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ObjectiveCGenerator);
-};
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
-#endif  // GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_GENERATOR_H__
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_helpers.cc b/src/google/protobuf/compiler/objectivec/objectivec_helpers.cc
deleted file mode 100644
index c7fd96a..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_helpers.cc
+++ /dev/null
@@ -1,1671 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#ifdef _MSC_VER
-#include <io.h>
-#else
-#include <unistd.h>
-#endif
-#include <climits>
-#include <errno.h>
-#include <fcntl.h>
-#include <fstream>
-#include <iostream>
-#include <sstream>
-#include <stdlib.h>
-#include <vector>
-
-#include <google/protobuf/stubs/hash.h>
-#include <google/protobuf/compiler/objectivec/objectivec_helpers.h>
-#include <google/protobuf/descriptor.pb.h>
-#include <google/protobuf/io/coded_stream.h>
-#include <google/protobuf/io/printer.h>
-#include <google/protobuf/io/zero_copy_stream_impl.h>
-#include <google/protobuf/stubs/common.h>
-#include <google/protobuf/stubs/strutil.h>
-
-// NOTE: src/google/protobuf/compiler/plugin.cc makes use of cerr for some
-// error cases, so it seems to be ok to use as a back door for errors.
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-Options::Options() {
-  // Default is the value of the env for the package prefixes.
-  const char* file_path = getenv("GPB_OBJC_EXPECTED_PACKAGE_PREFIXES");
-  if (file_path) {
-    expected_prefixes_path = file_path;
-  }
-}
-
-namespace {
-
-hash_set<string> MakeWordsMap(const char* const words[], size_t num_words) {
-  hash_set<string> result;
-  for (int i = 0; i < num_words; i++) {
-    result.insert(words[i]);
-  }
-  return result;
-}
-
-const char* const kUpperSegmentsList[] = {"url", "http", "https"};
-
-hash_set<string> kUpperSegments =
-    MakeWordsMap(kUpperSegmentsList, GOOGLE_ARRAYSIZE(kUpperSegmentsList));
-
-bool ascii_isnewline(char c) {
-  return c == '\n' || c == '\r';
-}
-
-// Internal helper for name handing.
-// Do not expose this outside of helpers, stick to having functions for specific
-// cases (ClassName(), FieldName()), so there is always consistent suffix rules.
-string UnderscoresToCamelCase(const string& input, bool first_capitalized) {
-  vector<string> values;
-  string current;
-
-  bool last_char_was_number = false;
-  bool last_char_was_lower = false;
-  bool last_char_was_upper = false;
-  for (int i = 0; i < input.size(); i++) {
-    char c = input[i];
-    if (ascii_isdigit(c)) {
-      if (!last_char_was_number) {
-        values.push_back(current);
-        current = "";
-      }
-      current += c;
-      last_char_was_number = last_char_was_lower = last_char_was_upper = false;
-      last_char_was_number = true;
-    } else if (ascii_islower(c)) {
-      // lowercase letter can follow a lowercase or uppercase letter
-      if (!last_char_was_lower && !last_char_was_upper) {
-        values.push_back(current);
-        current = "";
-      }
-      current += c;  // already lower
-      last_char_was_number = last_char_was_lower = last_char_was_upper = false;
-      last_char_was_lower = true;
-    } else if (ascii_isupper(c)) {
-      if (!last_char_was_upper) {
-        values.push_back(current);
-        current = "";
-      }
-      current += ascii_tolower(c);
-      last_char_was_number = last_char_was_lower = last_char_was_upper = false;
-      last_char_was_upper = true;
-    } else {
-      last_char_was_number = last_char_was_lower = last_char_was_upper = false;
-    }
-  }
-  values.push_back(current);
-
-  string result;
-  bool first_segment_forces_upper = false;
-  for (vector<string>::iterator i = values.begin(); i != values.end(); ++i) {
-    string value = *i;
-    bool all_upper = (kUpperSegments.count(value) > 0);
-    if (all_upper && (result.length() == 0)) {
-      first_segment_forces_upper = true;
-    }
-    for (int j = 0; j < value.length(); j++) {
-      if (j == 0 || all_upper) {
-        value[j] = ascii_toupper(value[j]);
-      } else {
-        // Nothing, already in lower.
-      }
-    }
-    result += value;
-  }
-  if ((result.length() != 0) &&
-      !first_capitalized &&
-      !first_segment_forces_upper) {
-    result[0] = ascii_tolower(result[0]);
-  }
-  return result;
-}
-
-const char* const kReservedWordList[] = {
-    // Objective C "keywords" that aren't in C
-    // From
-    // http://stackoverflow.com/questions/1873630/reserved-keywords-in-objective-c
-    "id", "_cmd", "super", "in", "out", "inout", "bycopy", "byref", "oneway",
-    "self",
-
-    // C/C++ keywords (Incl C++ 0x11)
-    // From http://en.cppreference.com/w/cpp/keywords
-    "and", "and_eq", "alignas", "alignof", "asm", "auto", "bitand", "bitor",
-    "bool", "break", "case", "catch", "char", "char16_t", "char32_t", "class",
-    "compl", "const", "constexpr", "const_cast", "continue", "decltype",
-    "default", "delete", "double", "dynamic_cast", "else", "enum", "explicit",
-    "export", "extern ", "false", "float", "for", "friend", "goto", "if",
-    "inline", "int", "long", "mutable", "namespace", "new", "noexcept", "not",
-    "not_eq", "nullptr", "operator", "or", "or_eq", "private", "protected",
-    "public", "register", "reinterpret_cast", "return", "short", "signed",
-    "sizeof", "static", "static_assert", "static_cast", "struct", "switch",
-    "template", "this", "thread_local", "throw", "true", "try", "typedef",
-    "typeid", "typename", "union", "unsigned", "using", "virtual", "void",
-    "volatile", "wchar_t", "while", "xor", "xor_eq",
-
-    // C99 keywords
-    // From
-    // http://publib.boulder.ibm.com/infocenter/lnxpcomp/v8v101/index.jsp?topic=%2Fcom.ibm.xlcpp8l.doc%2Flanguage%2Fref%2Fkeyw.htm
-    "restrict",
-
-    // Objective-C Runtime typedefs
-    // From <obc/runtime.h>
-    "Category", "Ivar", "Method", "Protocol",
-
-    // NSObject Methods
-    // new is covered by C++ keywords.
-    "description", "debugDescription", "finalize", "hash", "dealloc", "init",
-    "class", "superclass", "retain", "release", "autorelease", "retainCount",
-    "zone", "isProxy", "copy", "mutableCopy", "classForCoder",
-
-    // GPBMessage Methods
-    // Only need to add instance methods that may conflict with
-    // method declared in protos. The main cases are methods
-    // that take no arguments, or setFoo:/hasFoo: type methods.
-    "clear", "data", "delimitedData", "descriptor", "extensionRegistry",
-    "extensionsCurrentlySet", "isInitialized", "serializedSize",
-    "sortedExtensionsInUse", "unknownFields",
-
-    // MacTypes.h names
-    "Fixed", "Fract", "Size", "LogicalAddress", "PhysicalAddress", "ByteCount",
-    "ByteOffset", "Duration", "AbsoluteTime", "OptionBits", "ItemCount",
-    "PBVersion", "ScriptCode", "LangCode", "RegionCode", "OSType",
-    "ProcessSerialNumber", "Point", "Rect", "FixedPoint", "FixedRect", "Style",
-    "StyleParameter", "StyleField", "TimeScale", "TimeBase", "TimeRecord",
-};
-
-hash_set<string> kReservedWords =
-    MakeWordsMap(kReservedWordList, GOOGLE_ARRAYSIZE(kReservedWordList));
-
-string SanitizeNameForObjC(const string& input,
-                           const string& extension,
-                           string* out_suffix_added) {
-  if (kReservedWords.count(input) > 0) {
-    if (out_suffix_added) *out_suffix_added = extension;
-    return input + extension;
-  }
-  if (out_suffix_added) out_suffix_added->clear();
-  return input;
-}
-
-string NameFromFieldDescriptor(const FieldDescriptor* field) {
-  if (field->type() == FieldDescriptor::TYPE_GROUP) {
-    return field->message_type()->name();
-  } else {
-    return field->name();
-  }
-}
-
-void PathSplit(const string& path, string* directory, string* basename) {
-  string::size_type last_slash = path.rfind('/');
-  if (last_slash == string::npos) {
-    if (directory) {
-      *directory = "";
-    }
-    if (basename) {
-      *basename = path;
-    }
-  } else {
-    if (directory) {
-      *directory = path.substr(0, last_slash);
-    }
-    if (basename) {
-      *basename = path.substr(last_slash + 1);
-    }
-  }
-}
-
-bool IsSpecialName(const string& name, const string* special_names,
-                   size_t count) {
-  for (size_t i = 0; i < count; ++i) {
-    size_t length = special_names[i].length();
-    if (name.compare(0, length, special_names[i]) == 0) {
-      if (name.length() > length) {
-        // If name is longer than the retained_name[i] that it matches
-        // the next character must be not lower case (newton vs newTon vs
-        // new_ton).
-        return !ascii_islower(name[length]);
-      } else {
-        return true;
-      }
-    }
-  }
-  return false;
-}
-
-string GetZeroEnumNameForFlagType(const FlagType flag_type) {
-  switch(flag_type) {
-    case FLAGTYPE_DESCRIPTOR_INITIALIZATION:
-      return "GPBDescriptorInitializationFlag_None";
-    case FLAGTYPE_EXTENSION:
-      return "GPBExtensionNone";
-    case FLAGTYPE_FIELD:
-      return "GPBFieldNone";
-    default:
-      GOOGLE_LOG(FATAL) << "Can't get here.";
-      return "0";
-  }
-}
-
-string GetEnumNameForFlagType(const FlagType flag_type) {
-  switch(flag_type) {
-    case FLAGTYPE_DESCRIPTOR_INITIALIZATION:
-      return "GPBDescriptorInitializationFlags";
-    case FLAGTYPE_EXTENSION:
-      return "GPBExtensionOptions";
-    case FLAGTYPE_FIELD:
-      return "GPBFieldFlags";
-    default:
-      GOOGLE_LOG(FATAL) << "Can't get here.";
-      return string();
-  }
-}
-
-}  // namespace
-
-// Escape C++ trigraphs by escaping question marks to \?
-string EscapeTrigraphs(const string& to_escape) {
-  return StringReplace(to_escape, "?", "\\?", true);
-}
-
-string StripProto(const string& filename) {
-  if (HasSuffixString(filename, ".protodevel")) {
-    return StripSuffixString(filename, ".protodevel");
-  } else {
-    return StripSuffixString(filename, ".proto");
-  }
-}
-
-void StringPieceTrimWhitespace(StringPiece* input) {
-  while (!input->empty() && ascii_isspace(*input->data())) {
-    input->remove_prefix(1);
-  }
-  while (!input->empty() && ascii_isspace((*input)[input->length() - 1])) {
-    input->remove_suffix(1);
-  }
-}
-
-
-bool IsRetainedName(const string& name) {
-  // List of prefixes from
-  // http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/MemoryMgmt/Articles/mmRules.html
-  static const string retained_names[] = {"new", "alloc", "copy",
-                                          "mutableCopy"};
-  return IsSpecialName(name, retained_names,
-                       sizeof(retained_names) / sizeof(retained_names[0]));
-}
-
-bool IsInitName(const string& name) {
-  static const string init_names[] = {"init"};
-  return IsSpecialName(name, init_names,
-                       sizeof(init_names) / sizeof(init_names[0]));
-}
-
-string BaseFileName(const FileDescriptor* file) {
-  string basename;
-  PathSplit(file->name(), NULL, &basename);
-  return basename;
-}
-
-string FileClassPrefix(const FileDescriptor* file) {
-  // Default is empty string, no need to check has_objc_class_prefix.
-  string result = file->options().objc_class_prefix();
-  return result;
-}
-
-string FilePath(const FileDescriptor* file) {
-  string output;
-  string basename;
-  string directory;
-  PathSplit(file->name(), &directory, &basename);
-  if (directory.length() > 0) {
-    output = directory + "/";
-  }
-  basename = StripProto(basename);
-
-  // CamelCase to be more ObjC friendly.
-  basename = UnderscoresToCamelCase(basename, true);
-
-  output += basename;
-  return output;
-}
-
-string FilePathBasename(const FileDescriptor* file) {
-  string output;
-  string basename;
-  string directory;
-  PathSplit(file->name(), &directory, &basename);
-  basename = StripProto(basename);
-
-  // CamelCase to be more ObjC friendly.
-  output = UnderscoresToCamelCase(basename, true);
-
-  return output;
-}
-
-string FileClassName(const FileDescriptor* file) {
-  string name = FileClassPrefix(file);
-  name += UnderscoresToCamelCase(StripProto(BaseFileName(file)), true);
-  name += "Root";
-  // There aren't really any reserved words that end in "Root", but playing
-  // it safe and checking.
-  return SanitizeNameForObjC(name, "_RootClass", NULL);
-}
-
-string ClassNameWorker(const Descriptor* descriptor) {
-  string name;
-  if (descriptor->containing_type() != NULL) {
-    name = ClassNameWorker(descriptor->containing_type());
-    name += "_";
-  }
-  return name + descriptor->name();
-}
-
-string ClassNameWorker(const EnumDescriptor* descriptor) {
-  string name;
-  if (descriptor->containing_type() != NULL) {
-    name = ClassNameWorker(descriptor->containing_type());
-    name += "_";
-  }
-  return name + descriptor->name();
-}
-
-string ClassName(const Descriptor* descriptor) {
-  return ClassName(descriptor, NULL);
-}
-
-string ClassName(const Descriptor* descriptor, string* out_suffix_added) {
-  // 1. Message names are used as is (style calls for CamelCase, trust it).
-  // 2. Check for reserved word at the very end and then suffix things.
-  string prefix = FileClassPrefix(descriptor->file());
-  string name = ClassNameWorker(descriptor);
-  return SanitizeNameForObjC(prefix + name, "_Class", out_suffix_added);
-}
-
-string EnumName(const EnumDescriptor* descriptor) {
-  // 1. Enum names are used as is (style calls for CamelCase, trust it).
-  // 2. Check for reserved word at the every end and then suffix things.
-  //      message Fixed {
-  //        message Size {...}
-  //        enum Mumble {...}
-  //      ...
-  //      }
-  //    yields Fixed_Class, Fixed_Size.
-  string name = FileClassPrefix(descriptor->file());
-  name += ClassNameWorker(descriptor);
-  return SanitizeNameForObjC(name, "_Enum", NULL);
-}
-
-string EnumValueName(const EnumValueDescriptor* descriptor) {
-  // Because of the Switch enum compatibility, the name on the enum has to have
-  // the suffix handing, so it slightly diverges from how nested classes work.
-  //   enum Fixed {
-  //     FOO = 1
-  //   }
-  // yields Fixed_Enum and Fixed_Enum_Foo (not Fixed_Foo).
-  const string& class_name = EnumName(descriptor->type());
-  const string& value_str = UnderscoresToCamelCase(descriptor->name(), true);
-  const string& name = class_name + "_" + value_str;
-  // There aren't really any reserved words with an underscore and a leading
-  // capital letter, but playing it safe and checking.
-  return SanitizeNameForObjC(name, "_Value", NULL);
-}
-
-string EnumValueShortName(const EnumValueDescriptor* descriptor) {
-  // Enum value names (EnumValueName above) are the enum name turned into
-  // a class name and then the value name is CamelCased and concatenated; the
-  // whole thing then gets sanitized for reserved words.
-  // The "short name" is intended to be the final leaf, the value name; but
-  // you can't simply send that off to sanitize as that could result in it
-  // getting modified when the full name didn't.  For example enum
-  // "StorageModes" has a value "retain".  So the full name is
-  // "StorageModes_Retain", but if we sanitize "retain" it would become
-  // "RetainValue".
-  // So the right way to get the short name is to take the full enum name
-  // and then strip off the enum name (leaving the value name and anything
-  // done by sanitize).
-  const string& class_name = EnumName(descriptor->type());
-  const string& long_name_prefix = class_name + "_";
-  const string& long_name = EnumValueName(descriptor);
-  return StripPrefixString(long_name, long_name_prefix);
-}
-
-string UnCamelCaseEnumShortName(const string& name) {
-  string result;
-  for (int i = 0; i < name.size(); i++) {
-    char c = name[i];
-    if (i > 0 && ascii_isupper(c)) {
-      result += '_';
-    }
-    result += ascii_toupper(c);
-  }
-  return result;
-}
-
-string ExtensionMethodName(const FieldDescriptor* descriptor) {
-  const string& name = NameFromFieldDescriptor(descriptor);
-  const string& result = UnderscoresToCamelCase(name, false);
-  return SanitizeNameForObjC(result, "_Extension", NULL);
-}
-
-string FieldName(const FieldDescriptor* field) {
-  const string& name = NameFromFieldDescriptor(field);
-  string result = UnderscoresToCamelCase(name, false);
-  if (field->is_repeated() && !field->is_map()) {
-    // Add "Array" before do check for reserved worlds.
-    result += "Array";
-  } else {
-    // If it wasn't repeated, but ends in "Array", force on the _p suffix.
-    if (HasSuffixString(result, "Array")) {
-      result += "_p";
-    }
-  }
-  return SanitizeNameForObjC(result, "_p", NULL);
-}
-
-string FieldNameCapitalized(const FieldDescriptor* field) {
-  // Want the same suffix handling, so upcase the first letter of the other
-  // name.
-  string result = FieldName(field);
-  if (result.length() > 0) {
-    result[0] = ascii_toupper(result[0]);
-  }
-  return result;
-}
-
-string OneofEnumName(const OneofDescriptor* descriptor) {
-  const Descriptor* fieldDescriptor = descriptor->containing_type();
-  string name = ClassName(fieldDescriptor);
-  name += "_" + UnderscoresToCamelCase(descriptor->name(), true) + "_OneOfCase";
-  // No sanitize needed because the OS never has names that end in _OneOfCase.
-  return name;
-}
-
-string OneofName(const OneofDescriptor* descriptor) {
-  string name = UnderscoresToCamelCase(descriptor->name(), false);
-  // No sanitize needed because it gets OneOfCase added and that shouldn't
-  // ever conflict.
-  return name;
-}
-
-string OneofNameCapitalized(const OneofDescriptor* descriptor) {
-  // Use the common handling and then up-case the first letter.
-  string result = OneofName(descriptor);
-  if (result.length() > 0) {
-    result[0] = ascii_toupper(result[0]);
-  }
-  return result;
-}
-
-string UnCamelCaseFieldName(const string& name, const FieldDescriptor* field) {
-  string worker(name);
-  if (HasSuffixString(worker, "_p")) {
-    worker = StripSuffixString(worker, "_p");
-  }
-  if (field->is_repeated() && HasSuffixString(worker, "Array")) {
-    worker = StripSuffixString(worker, "Array");
-  }
-  if (field->type() == FieldDescriptor::TYPE_GROUP) {
-    if (worker.length() > 0) {
-      if (ascii_islower(worker[0])) {
-        worker[0] = ascii_toupper(worker[0]);
-      }
-    }
-    return worker;
-  } else {
-    string result;
-    for (int i = 0; i < worker.size(); i++) {
-      char c = worker[i];
-      if (ascii_isupper(c)) {
-        if (i > 0) {
-          result += '_';
-        }
-        result += ascii_tolower(c);
-      } else {
-        result += c;
-      }
-    }
-    return result;
-  }
-}
-
-string GetCapitalizedType(const FieldDescriptor* field) {
-  switch (field->type()) {
-    case FieldDescriptor::TYPE_INT32:
-      return "Int32";
-    case FieldDescriptor::TYPE_UINT32:
-      return "UInt32";
-    case FieldDescriptor::TYPE_SINT32:
-      return "SInt32";
-    case FieldDescriptor::TYPE_FIXED32:
-      return "Fixed32";
-    case FieldDescriptor::TYPE_SFIXED32:
-      return "SFixed32";
-    case FieldDescriptor::TYPE_INT64:
-      return "Int64";
-    case FieldDescriptor::TYPE_UINT64:
-      return "UInt64";
-    case FieldDescriptor::TYPE_SINT64:
-      return "SInt64";
-    case FieldDescriptor::TYPE_FIXED64:
-      return "Fixed64";
-    case FieldDescriptor::TYPE_SFIXED64:
-      return "SFixed64";
-    case FieldDescriptor::TYPE_FLOAT:
-      return "Float";
-    case FieldDescriptor::TYPE_DOUBLE:
-      return "Double";
-    case FieldDescriptor::TYPE_BOOL:
-      return "Bool";
-    case FieldDescriptor::TYPE_STRING:
-      return "String";
-    case FieldDescriptor::TYPE_BYTES:
-      return "Bytes";
-    case FieldDescriptor::TYPE_ENUM:
-      return "Enum";
-    case FieldDescriptor::TYPE_GROUP:
-      return "Group";
-    case FieldDescriptor::TYPE_MESSAGE:
-      return "Message";
-  }
-
-  // Some compilers report reaching end of function even though all cases of
-  // the enum are handed in the switch.
-  GOOGLE_LOG(FATAL) << "Can't get here.";
-  return NULL;
-}
-
-ObjectiveCType GetObjectiveCType(FieldDescriptor::Type field_type) {
-  switch (field_type) {
-    case FieldDescriptor::TYPE_INT32:
-    case FieldDescriptor::TYPE_SINT32:
-    case FieldDescriptor::TYPE_SFIXED32:
-      return OBJECTIVECTYPE_INT32;
-
-    case FieldDescriptor::TYPE_UINT32:
-    case FieldDescriptor::TYPE_FIXED32:
-      return OBJECTIVECTYPE_UINT32;
-
-    case FieldDescriptor::TYPE_INT64:
-    case FieldDescriptor::TYPE_SINT64:
-    case FieldDescriptor::TYPE_SFIXED64:
-      return OBJECTIVECTYPE_INT64;
-
-    case FieldDescriptor::TYPE_UINT64:
-    case FieldDescriptor::TYPE_FIXED64:
-      return OBJECTIVECTYPE_UINT64;
-
-    case FieldDescriptor::TYPE_FLOAT:
-      return OBJECTIVECTYPE_FLOAT;
-
-    case FieldDescriptor::TYPE_DOUBLE:
-      return OBJECTIVECTYPE_DOUBLE;
-
-    case FieldDescriptor::TYPE_BOOL:
-      return OBJECTIVECTYPE_BOOLEAN;
-
-    case FieldDescriptor::TYPE_STRING:
-      return OBJECTIVECTYPE_STRING;
-
-    case FieldDescriptor::TYPE_BYTES:
-      return OBJECTIVECTYPE_DATA;
-
-    case FieldDescriptor::TYPE_ENUM:
-      return OBJECTIVECTYPE_ENUM;
-
-    case FieldDescriptor::TYPE_GROUP:
-    case FieldDescriptor::TYPE_MESSAGE:
-      return OBJECTIVECTYPE_MESSAGE;
-  }
-
-  // Some compilers report reaching end of function even though all cases of
-  // the enum are handed in the switch.
-  GOOGLE_LOG(FATAL) << "Can't get here.";
-  return OBJECTIVECTYPE_INT32;
-}
-
-bool IsPrimitiveType(const FieldDescriptor* field) {
-  ObjectiveCType type = GetObjectiveCType(field);
-  switch (type) {
-    case OBJECTIVECTYPE_INT32:
-    case OBJECTIVECTYPE_UINT32:
-    case OBJECTIVECTYPE_INT64:
-    case OBJECTIVECTYPE_UINT64:
-    case OBJECTIVECTYPE_FLOAT:
-    case OBJECTIVECTYPE_DOUBLE:
-    case OBJECTIVECTYPE_BOOLEAN:
-    case OBJECTIVECTYPE_ENUM:
-      return true;
-      break;
-    default:
-      return false;
-  }
-}
-
-bool IsReferenceType(const FieldDescriptor* field) {
-  return !IsPrimitiveType(field);
-}
-
-static string HandleExtremeFloatingPoint(string val, bool add_float_suffix) {
-  if (val == "nan") {
-    return "NAN";
-  } else if (val == "inf") {
-    return "INFINITY";
-  } else if (val == "-inf") {
-    return "-INFINITY";
-  } else {
-    // float strings with ., e or E need to have f appended
-    if (add_float_suffix &&
-        (val.find(".") != string::npos || val.find("e") != string::npos ||
-         val.find("E") != string::npos)) {
-      val += "f";
-    }
-    return val;
-  }
-}
-
-string GPBGenericValueFieldName(const FieldDescriptor* field) {
-  // Returns the field within the GPBGenericValue union to use for the given
-  // field.
-  if (field->is_repeated()) {
-      return "valueMessage";
-  }
-  switch (field->cpp_type()) {
-    case FieldDescriptor::CPPTYPE_INT32:
-      return "valueInt32";
-    case FieldDescriptor::CPPTYPE_UINT32:
-      return "valueUInt32";
-    case FieldDescriptor::CPPTYPE_INT64:
-      return "valueInt64";
-    case FieldDescriptor::CPPTYPE_UINT64:
-      return "valueUInt64";
-    case FieldDescriptor::CPPTYPE_FLOAT:
-      return "valueFloat";
-    case FieldDescriptor::CPPTYPE_DOUBLE:
-      return "valueDouble";
-    case FieldDescriptor::CPPTYPE_BOOL:
-      return "valueBool";
-    case FieldDescriptor::CPPTYPE_STRING:
-      if (field->type() == FieldDescriptor::TYPE_BYTES) {
-        return "valueData";
-      } else {
-        return "valueString";
-      }
-    case FieldDescriptor::CPPTYPE_ENUM:
-      return "valueEnum";
-    case FieldDescriptor::CPPTYPE_MESSAGE:
-      return "valueMessage";
-  }
-
-  // Some compilers report reaching end of function even though all cases of
-  // the enum are handed in the switch.
-  GOOGLE_LOG(FATAL) << "Can't get here.";
-  return NULL;
-}
-
-
-string DefaultValue(const FieldDescriptor* field) {
-  // Repeated fields don't have defaults.
-  if (field->is_repeated()) {
-    return "nil";
-  }
-
-  // Switch on cpp_type since we need to know which default_value_* method
-  // of FieldDescriptor to call.
-  switch (field->cpp_type()) {
-    case FieldDescriptor::CPPTYPE_INT32:
-      // gcc and llvm reject the decimal form of kint32min and kint64min.
-      if (field->default_value_int32() == INT_MIN) {
-        return "-0x80000000";
-      }
-      return SimpleItoa(field->default_value_int32());
-    case FieldDescriptor::CPPTYPE_UINT32:
-      return SimpleItoa(field->default_value_uint32()) + "U";
-    case FieldDescriptor::CPPTYPE_INT64:
-      // gcc and llvm reject the decimal form of kint32min and kint64min.
-      if (field->default_value_int64() == LLONG_MIN) {
-        return "-0x8000000000000000LL";
-      }
-      return SimpleItoa(field->default_value_int64()) + "LL";
-    case FieldDescriptor::CPPTYPE_UINT64:
-      return SimpleItoa(field->default_value_uint64()) + "ULL";
-    case FieldDescriptor::CPPTYPE_DOUBLE:
-      return HandleExtremeFloatingPoint(
-          SimpleDtoa(field->default_value_double()), false);
-    case FieldDescriptor::CPPTYPE_FLOAT:
-      return HandleExtremeFloatingPoint(
-          SimpleFtoa(field->default_value_float()), true);
-    case FieldDescriptor::CPPTYPE_BOOL:
-      return field->default_value_bool() ? "YES" : "NO";
-    case FieldDescriptor::CPPTYPE_STRING: {
-      const bool has_default_value = field->has_default_value();
-      const string& default_string = field->default_value_string();
-      if (!has_default_value || default_string.length() == 0) {
-        // If the field is defined as being the empty string,
-        // then we will just assign to nil, as the empty string is the
-        // default for both strings and data.
-        return "nil";
-      }
-      if (field->type() == FieldDescriptor::TYPE_BYTES) {
-        // We want constant fields in our data structures so we can
-        // declare them as static. To achieve this we cheat and stuff
-        // a escaped c string (prefixed with a length) into the data
-        // field, and cast it to an (NSData*) so it will compile.
-        // The runtime library knows how to handle it.
-
-        // Must convert to a standard byte order for packing length into
-        // a cstring.
-        uint32 length = ghtonl(default_string.length());
-        string bytes((const char*)&length, sizeof(length));
-        bytes.append(default_string);
-        return "(NSData*)\"" + EscapeTrigraphs(CEscape(bytes)) + "\"";
-      } else {
-        return "@\"" + EscapeTrigraphs(CEscape(default_string)) + "\"";
-      }
-    }
-    case FieldDescriptor::CPPTYPE_ENUM:
-      return EnumValueName(field->default_value_enum());
-    case FieldDescriptor::CPPTYPE_MESSAGE:
-      return "nil";
-  }
-
-  // Some compilers report reaching end of function even though all cases of
-  // the enum are handed in the switch.
-  GOOGLE_LOG(FATAL) << "Can't get here.";
-  return NULL;
-}
-
-bool HasNonZeroDefaultValue(const FieldDescriptor* field) {
-  // Repeated fields don't have defaults.
-  if (field->is_repeated()) {
-    return false;
-  }
-
-  // As much as checking field->has_default_value() seems useful, it isn't
-  // because of enums. proto2 syntax allows the first item in an enum (the
-  // default) to be non zero. So checking field->has_default_value() would
-  // result in missing this non zero default.  See MessageWithOneBasedEnum in
-  // objectivec/Tests/unittest_objc.proto for a test Message to confirm this.
-
-  // Some proto file set the default to the zero value, so make sure the value
-  // isn't the zero case.
-  switch (field->cpp_type()) {
-    case FieldDescriptor::CPPTYPE_INT32:
-      return field->default_value_int32() != 0;
-    case FieldDescriptor::CPPTYPE_UINT32:
-      return field->default_value_uint32() != 0U;
-    case FieldDescriptor::CPPTYPE_INT64:
-      return field->default_value_int64() != 0LL;
-    case FieldDescriptor::CPPTYPE_UINT64:
-      return field->default_value_uint64() != 0ULL;
-    case FieldDescriptor::CPPTYPE_DOUBLE:
-      return field->default_value_double() != 0.0;
-    case FieldDescriptor::CPPTYPE_FLOAT:
-      return field->default_value_float() != 0.0f;
-    case FieldDescriptor::CPPTYPE_BOOL:
-      return field->default_value_bool();
-    case FieldDescriptor::CPPTYPE_STRING: {
-      const string& default_string = field->default_value_string();
-      return default_string.length() != 0;
-    }
-    case FieldDescriptor::CPPTYPE_ENUM:
-      return field->default_value_enum()->number() != 0;
-    case FieldDescriptor::CPPTYPE_MESSAGE:
-      return false;
-  }
-
-  // Some compilers report reaching end of function even though all cases of
-  // the enum are handed in the switch.
-  GOOGLE_LOG(FATAL) << "Can't get here.";
-  return false;
-}
-
-string BuildFlagsString(const FlagType flag_type,
-                        const vector<string>& strings) {
-  if (strings.size() == 0) {
-    return GetZeroEnumNameForFlagType(flag_type);
-  } else if (strings.size() == 1) {
-    return strings[0];
-  }
-  string string("(" + GetEnumNameForFlagType(flag_type) + ")(");
-  for (size_t i = 0; i != strings.size(); ++i) {
-    if (i > 0) {
-      string.append(" | ");
-    }
-    string.append(strings[i]);
-  }
-  string.append(")");
-  return string;
-}
-
-string BuildCommentsString(const SourceLocation& location,
-                           bool prefer_single_line) {
-  const string& comments = location.leading_comments.empty()
-                               ? location.trailing_comments
-                               : location.leading_comments;
-  vector<string> lines;
-  SplitStringAllowEmpty(comments, "\n", &lines);
-  while (!lines.empty() && lines.back().empty()) {
-    lines.pop_back();
-  }
-  // If there are no comments, just return an empty string.
-  if (lines.size() == 0) {
-    return "";
-  }
-
-  string prefix;
-  string suffix;
-  string final_comments;
-  string epilogue;
-
-  bool add_leading_space = false;
-
-  if (prefer_single_line && lines.size() == 1) {
-    prefix = "/** ";
-    suffix = " */\n";
-  } else {
-    prefix = "* ";
-    suffix = "\n";
-    final_comments += "/**\n";
-    epilogue = " **/\n";
-    add_leading_space = true;
-  }
-
-  for (int i = 0; i < lines.size(); i++) {
-    string line = StripPrefixString(lines[i], " ");
-    // HeaderDoc and appledoc use '\' and '@' for markers; escape them.
-    line = StringReplace(line, "\\", "\\\\", true);
-    line = StringReplace(line, "@", "\\@", true);
-    // Decouple / from * to not have inline comments inside comments.
-    line = StringReplace(line, "/*", "/\\*", true);
-    line = StringReplace(line, "*/", "*\\/", true);
-    line = prefix + line;
-    StripWhitespace(&line);
-    // If not a one line, need to add the first space before *, as
-    // StripWhitespace would have removed it.
-    line = (add_leading_space ? " " : "") + line;
-    final_comments += line + suffix;
-  }
-  final_comments += epilogue;
-  return final_comments;
-}
-
-// Making these a generator option for folks that don't use CocoaPods, but do
-// want to put the library in a framework is an interesting question. The
-// problem is it means changing sources shipped with the library to actually
-// use a different value; so it isn't as simple as a option.
-const char* const ProtobufLibraryFrameworkName = "Protobuf";
-
-string ProtobufFrameworkImportSymbol(const string& framework_name) {
-  // GPB_USE_[framework_name]_FRAMEWORK_IMPORTS
-  string result = string("GPB_USE_");
-  result += ToUpper(framework_name);
-  result += "_FRAMEWORK_IMPORTS";
-  return result;
-}
-
-bool IsProtobufLibraryBundledProtoFile(const FileDescriptor* file) {
-  // We don't check the name prefix or proto package because some files
-  // (descriptor.proto), aren't shipped generated by the library, so this
-  // seems to be the safest way to only catch the ones shipped.
-  const string name = file->name();
-  if (name == "google/protobuf/any.proto" ||
-      name == "google/protobuf/api.proto" ||
-      name == "google/protobuf/duration.proto" ||
-      name == "google/protobuf/empty.proto" ||
-      name == "google/protobuf/field_mask.proto" ||
-      name == "google/protobuf/source_context.proto" ||
-      name == "google/protobuf/struct.proto" ||
-      name == "google/protobuf/timestamp.proto" ||
-      name == "google/protobuf/type.proto" ||
-      name == "google/protobuf/wrappers.proto") {
-    return true;
-  }
-  return false;
-}
-
-bool ReadLine(StringPiece* input, StringPiece* line) {
-  for (int len = 0; len < input->size(); ++len) {
-    if (ascii_isnewline((*input)[len])) {
-      *line = StringPiece(input->data(), len);
-      ++len;  // advance over the newline
-      *input = StringPiece(input->data() + len, input->size() - len);
-      return true;
-    }
-  }
-  return false;  // Ran out of input with no newline.
-}
-
-void RemoveComment(StringPiece* input) {
-  int offset = input->find('#');
-  if (offset != StringPiece::npos) {
-    input->remove_suffix(input->length() - offset);
-  }
-}
-
-namespace {
-
-class ExpectedPrefixesCollector : public LineConsumer {
- public:
-  ExpectedPrefixesCollector(map<string, string>* inout_package_to_prefix_map)
-      : prefix_map_(inout_package_to_prefix_map) {}
-
-  virtual bool ConsumeLine(const StringPiece& line, string* out_error);
-
- private:
-  map<string, string>* prefix_map_;
-};
-
-bool ExpectedPrefixesCollector::ConsumeLine(
-    const StringPiece& line, string* out_error) {
-  int offset = line.find('=');
-  if (offset == StringPiece::npos) {
-    *out_error =
-        string("Expected prefixes file line without equal sign: '") +
-        line.ToString() + "'.";
-    return false;
-  }
-  StringPiece package(line, 0, offset);
-  StringPiece prefix(line, offset + 1, line.length() - offset - 1);
-  StringPieceTrimWhitespace(&package);
-  StringPieceTrimWhitespace(&prefix);
-  // Don't really worry about error checking the package/prefix for
-  // being valid.  Assume the file is validated when it is created/edited.
-  (*prefix_map_)[package.ToString()] = prefix.ToString();
-  return true;
-}
-
-bool LoadExpectedPackagePrefixes(const Options &generation_options,
-                                 map<string, string>* prefix_map,
-                                 string* out_error) {
-  if (generation_options.expected_prefixes_path.empty()) {
-    return true;
-  }
-
-  ExpectedPrefixesCollector collector(prefix_map);
-  return ParseSimpleFile(
-      generation_options.expected_prefixes_path, &collector, out_error);
-}
-
-bool ValidateObjCClassPrefix(
-    const FileDescriptor* file,
-    const string& expected_prefixes_path,
-    const map<string, string>& expected_package_prefixes,
-    string* out_error) {
-  const string prefix = file->options().objc_class_prefix();
-  const string package = file->package();
-
-  // NOTE: src/google/protobuf/compiler/plugin.cc makes use of cerr for some
-  // error cases, so it seems to be ok to use as a back door for warnings.
-
-  // Check: Error - See if there was an expected prefix for the package and
-  // report if it doesn't match (wrong or missing).
-  map<string, string>::const_iterator package_match =
-      expected_package_prefixes.find(package);
-  if (package_match != expected_package_prefixes.end()) {
-    // There was an entry, and...
-    if (package_match->second == prefix) {
-      // ...it matches.  All good, out of here!
-      return true;
-    } else {
-      // ...it didn't match!
-      *out_error = "error: Expected 'option objc_class_prefix = \"" +
-                   package_match->second + "\";' for package '" + package +
-                   "' in '" + file->name() + "'";
-      if (prefix.length()) {
-        *out_error += "; but found '" + prefix + "' instead";
-      }
-      *out_error += ".";
-      return false;
-    }
-  }
-
-  // If there was no prefix option, we're done at this point.
-  if (prefix.empty()) {
-    // No prefix, nothing left to check.
-    return true;
-  }
-
-  // Check: Warning - Make sure the prefix is is a reasonable value according
-  // to Apple's rules (the checks above implicitly whitelist anything that
-  // doesn't meet these rules).
-  if (!ascii_isupper(prefix[0])) {
-    cerr << endl
-         << "protoc:0: warning: Invalid 'option objc_class_prefix = \""
-         << prefix << "\";' in '" << file->name() << "';"
-         << " it should start with a capital letter." << endl;
-    cerr.flush();
-  }
-  if (prefix.length() < 3) {
-    // Apple reserves 2 character prefixes for themselves. They do use some
-    // 3 character prefixes, but they haven't updated the rules/docs.
-    cerr << endl
-         << "protoc:0: warning: Invalid 'option objc_class_prefix = \""
-         << prefix << "\";' in '" << file->name() << "';"
-         << " Apple recommends they should be at least 3 characters long."
-         << endl;
-    cerr.flush();
-  }
-
-  // Look for any other package that uses the same prefix.
-  string other_package_for_prefix;
-  for (map<string, string>::const_iterator i = expected_package_prefixes.begin();
-       i != expected_package_prefixes.end(); ++i) {
-    if (i->second == prefix) {
-      other_package_for_prefix = i->first;
-      break;
-    }
-  }
-
-  // Check: Warning - If the file does not have a package, check whether
-  // the prefix declared is being used by another package or not.
-  if (package.empty()) {
-    // The file does not have a package and ...
-    if (other_package_for_prefix.empty()) {
-      // ... no other package has declared that prefix.
-      cerr << endl
-           << "protoc:0: warning: File '" << file->name() << "' has no "
-           << "package. Consider adding a new package to the proto and adding '"
-           << "new.package = " << prefix << "' to the expected prefixes file ("
-           << expected_prefixes_path << ")." << endl;
-      cerr.flush();
-    } else {
-      // ... another package has declared the same prefix.
-      cerr << endl
-           << "protoc:0: warning: File '" << file->name() << "' has no package "
-           << "and package '" << other_package_for_prefix << "' already uses '"
-           << prefix << "' as its prefix. Consider either adding a new package "
-           << "to the proto, or reusing one of the packages already using this "
-           << "prefix in the expected prefixes file ("
-           << expected_prefixes_path << ")." << endl;
-      cerr.flush();
-    }
-    return true;
-  }
-
-  // Check: Error - Make sure the prefix wasn't expected for a different
-  // package (overlap is allowed, but it has to be listed as an expected
-  // overlap).
-  if (!other_package_for_prefix.empty()) {
-    *out_error =
-        "error: Found 'option objc_class_prefix = \"" + prefix +
-        "\";' in '" + file->name() +
-        "'; that prefix is already used for 'package " +
-        other_package_for_prefix + ";'. It can only be reused by listing " +
-        "it in the expected file (" +
-        expected_prefixes_path + ").";
-    return false;  // Only report first usage of the prefix.
-  }
-
-  // Check: Warning - If the given package/prefix pair wasn't expected, issue a
-  // warning issue a warning suggesting it gets added to the file.
-  if (!expected_package_prefixes.empty()) {
-    cerr << endl
-         << "protoc:0: warning: Found unexpected 'option objc_class_prefix = \""
-         << prefix << "\";' in '" << file->name() << "';"
-         << " consider adding it to the expected prefixes file ("
-         << expected_prefixes_path << ")." << endl;
-    cerr.flush();
-  }
-
-  return true;
-}
-
-}  // namespace
-
-bool ValidateObjCClassPrefixes(const vector<const FileDescriptor*>& files,
-                               const Options& generation_options,
-                               string* out_error) {
-  // Load the expected package prefixes, if available, to validate against.
-  map<string, string> expected_package_prefixes;
-  if (!LoadExpectedPackagePrefixes(generation_options,
-                                   &expected_package_prefixes,
-                                   out_error)) {
-    return false;
-  }
-
-  for (int i = 0; i < files.size(); i++) {
-    bool is_valid =
-        ValidateObjCClassPrefix(files[i],
-                                generation_options.expected_prefixes_path,
-                                expected_package_prefixes,
-                                out_error);
-    if (!is_valid) {
-      return false;
-    }
-  }
-  return true;
-}
-
-TextFormatDecodeData::TextFormatDecodeData() { }
-
-TextFormatDecodeData::~TextFormatDecodeData() { }
-
-void TextFormatDecodeData::AddString(int32 key,
-                                     const string& input_for_decode,
-                                     const string& desired_output) {
-  for (vector<DataEntry>::const_iterator i = entries_.begin();
-       i != entries_.end(); ++i) {
-    if (i->first == key) {
-      cerr << "error: duplicate key (" << key
-           << ") making TextFormat data, input: \"" << input_for_decode
-           << "\", desired: \"" << desired_output << "\"." << endl;
-      cerr.flush();
-      abort();
-    }
-  }
-
-  const string& data = TextFormatDecodeData::DecodeDataForString(
-      input_for_decode, desired_output);
-  entries_.push_back(DataEntry(key, data));
-}
-
-string TextFormatDecodeData::Data() const {
-  ostringstream data_stringstream;
-
-  if (num_entries() > 0) {
-    io::OstreamOutputStream data_outputstream(&data_stringstream);
-    io::CodedOutputStream output_stream(&data_outputstream);
-
-    output_stream.WriteVarint32(num_entries());
-    for (vector<DataEntry>::const_iterator i = entries_.begin();
-         i != entries_.end(); ++i) {
-      output_stream.WriteVarint32(i->first);
-      output_stream.WriteString(i->second);
-    }
-  }
-
-  data_stringstream.flush();
-  return data_stringstream.str();
-}
-
-namespace {
-
-// Helper to build up the decode data for a string.
-class DecodeDataBuilder {
- public:
-  DecodeDataBuilder() { Reset(); }
-
-  bool AddCharacter(const char desired, const char input);
-  void AddUnderscore() {
-    Push();
-    need_underscore_ = true;
-  }
-  string Finish() {
-    Push();
-    return decode_data_;
-  }
-
- private:
-  static const uint8 kAddUnderscore = 0x80;
-
-  static const uint8 kOpAsIs        = 0x00;
-  static const uint8 kOpFirstUpper  = 0x40;
-  static const uint8 kOpFirstLower  = 0x20;
-  static const uint8 kOpAllUpper    = 0x60;
-
-  static const int kMaxSegmentLen     = 0x1f;
-
-  void AddChar(const char desired) {
-    ++segment_len_;
-    is_all_upper_ &= ascii_isupper(desired);
-  }
-
-  void Push() {
-    uint8 op = (op_ | segment_len_);
-    if (need_underscore_) op |= kAddUnderscore;
-    if (op != 0) {
-      decode_data_ += (char)op;
-    }
-    Reset();
-  }
-
-  bool AddFirst(const char desired, const char input) {
-    if (desired == input) {
-      op_ = kOpAsIs;
-    } else if (desired == ascii_toupper(input)) {
-      op_ = kOpFirstUpper;
-    } else if (desired == ascii_tolower(input)) {
-      op_ = kOpFirstLower;
-    } else {
-      // Can't be transformed to match.
-      return false;
-    }
-    AddChar(desired);
-    return true;
-  }
-
-  void Reset() {
-    need_underscore_ = false;
-    op_ = 0;
-    segment_len_ = 0;
-    is_all_upper_ = true;
-  }
-
-  bool need_underscore_;
-  bool is_all_upper_;
-  uint8 op_;
-  int segment_len_;
-
-  string decode_data_;
-};
-
-bool DecodeDataBuilder::AddCharacter(const char desired, const char input) {
-  // If we've hit the max size, push to start a new segment.
-  if (segment_len_ == kMaxSegmentLen) {
-    Push();
-  }
-  if (segment_len_ == 0) {
-    return AddFirst(desired, input);
-  }
-
-  // Desired and input match...
-  if (desired == input) {
-    // If we aren't transforming it, or we're upper casing it and it is
-    // supposed to be uppercase; just add it to the segment.
-    if ((op_ != kOpAllUpper) || ascii_isupper(desired)) {
-      AddChar(desired);
-      return true;
-    }
-
-    // Add the current segment, and start the next one.
-    Push();
-    return AddFirst(desired, input);
-  }
-
-  // If we need to uppercase, and everything so far has been uppercase,
-  // promote op to AllUpper.
-  if ((desired == ascii_toupper(input)) && is_all_upper_) {
-    op_ = kOpAllUpper;
-    AddChar(desired);
-    return true;
-  }
-
-  // Give up, push and start a new segment.
-  Push();
-  return AddFirst(desired, input);
-}
-
-// If decode data can't be generated, a directive for the raw string
-// is used instead.
-string DirectDecodeString(const string& str) {
-  string result;
-  result += (char)'\0';  // Marker for full string.
-  result += str;
-  result += (char)'\0';  // End of string.
-  return result;
-}
-
-}  // namespace
-
-// static
-string TextFormatDecodeData::DecodeDataForString(const string& input_for_decode,
-                                                 const string& desired_output) {
-  if ((input_for_decode.size() == 0) || (desired_output.size() == 0)) {
-    cerr << "error: got empty string for making TextFormat data, input: \""
-         << input_for_decode << "\", desired: \"" << desired_output << "\"."
-         << endl;
-    cerr.flush();
-    abort();
-  }
-  if ((input_for_decode.find('\0') != string::npos) ||
-      (desired_output.find('\0') != string::npos)) {
-    cerr << "error: got a null char in a string for making TextFormat data,"
-         << " input: \"" << CEscape(input_for_decode) << "\", desired: \""
-         << CEscape(desired_output) << "\"." << endl;
-    cerr.flush();
-    abort();
-  }
-
-  DecodeDataBuilder builder;
-
-  // Walk the output building it from the input.
-  int x = 0;
-  for (int y = 0; y < desired_output.size(); y++) {
-    const char d = desired_output[y];
-    if (d == '_') {
-      builder.AddUnderscore();
-      continue;
-    }
-
-    if (x >= input_for_decode.size()) {
-      // Out of input, no way to encode it, just return a full decode.
-      return DirectDecodeString(desired_output);
-    }
-    if (builder.AddCharacter(d, input_for_decode[x])) {
-      ++x;  // Consumed one input
-    } else {
-      // Couldn't transform for the next character, just return a full decode.
-      return DirectDecodeString(desired_output);
-    }
-  }
-
-  if (x != input_for_decode.size()) {
-    // Extra input (suffix from name sanitizing?), just return a full decode.
-    return DirectDecodeString(desired_output);
-  }
-
-  // Add the end marker.
-  return builder.Finish() + (char)'\0';
-}
-
-namespace {
-
-class Parser {
- public:
-  Parser(LineConsumer* line_consumer)
-      : line_consumer_(line_consumer), line_(0) {}
-
-  // Parses a check of input, returning success/failure.
-  bool ParseChunk(StringPiece chunk);
-
-  // Should be called to finish parsing (after all input has been provided via
-  // ParseChunk()).  Returns success/failure.
-  bool Finish();
-
-  int last_line() const { return line_; }
-  string error_str() const { return error_str_; }
-
- private:
-  bool ParseLoop();
-
-  LineConsumer* line_consumer_;
-  int line_;
-  string error_str_;
-  StringPiece p_;
-  string leftover_;
-};
-
-bool Parser::ParseChunk(StringPiece chunk) {
-  if (!leftover_.empty()) {
-    chunk.AppendToString(&leftover_);
-    p_ = StringPiece(leftover_);
-  } else {
-    p_ = chunk;
-  }
-  bool result = ParseLoop();
-  if (p_.empty()) {
-    leftover_.clear();
-  } else {
-    leftover_ = p_.ToString();
-  }
-  return result;
-}
-
-bool Parser::Finish() {
-  if (leftover_.empty()) {
-    return true;
-  }
-  // Force a newline onto the end to finish parsing.
-  leftover_ += "\n";
-  p_ = StringPiece(leftover_);
-  if (!ParseLoop()) {
-    return false;
-  }
-  return p_.empty();  // Everything used?
-}
-
-bool Parser::ParseLoop() {
-  StringPiece line;
-  while (ReadLine(&p_, &line)) {
-    ++line_;
-    RemoveComment(&line);
-    StringPieceTrimWhitespace(&line);
-    if (line.size() == 0) {
-      continue;  // Blank line.
-    }
-    if (!line_consumer_->ConsumeLine(line, &error_str_)) {
-      return false;
-    }
-  }
-  return true;
-}
-
-}  // namespace
-
-LineConsumer::LineConsumer() {}
-
-LineConsumer::~LineConsumer() {}
-
-bool ParseSimpleFile(
-    const string& path, LineConsumer* line_consumer, string* out_error) {
-  int fd;
-  do {
-    fd = open(path.c_str(), O_RDONLY);
-  } while (fd < 0 && errno == EINTR);
-  if (fd < 0) {
-    *out_error =
-        string("error: Unable to open \"") + path + "\", " + strerror(errno);
-    return false;
-  }
-  io::FileInputStream file_stream(fd);
-  file_stream.SetCloseOnDelete(true);
-
-  Parser parser(line_consumer);
-  const void* buf;
-  int buf_len;
-  while (file_stream.Next(&buf, &buf_len)) {
-    if (buf_len == 0) {
-      continue;
-    }
-
-    if (!parser.ParseChunk(StringPiece(static_cast<const char*>(buf), buf_len))) {
-      *out_error =
-          string("error: ") + path +
-          " Line " + SimpleItoa(parser.last_line()) + ", " + parser.error_str();
-      return false;
-    }
-  }
-  return parser.Finish();
-}
-
-ImportWriter::ImportWriter(
-  const string& generate_for_named_framework,
-  const string& named_framework_to_proto_path_mappings_path)
-    : generate_for_named_framework_(generate_for_named_framework),
-      named_framework_to_proto_path_mappings_path_(
-          named_framework_to_proto_path_mappings_path),
-      need_to_parse_mapping_file_(true) {
-}
-
-ImportWriter::~ImportWriter() {}
-
-void ImportWriter::AddFile(const FileDescriptor* file,
-                           const string& header_extension) {
-  const string file_path(FilePath(file));
-
-  if (IsProtobufLibraryBundledProtoFile(file)) {
-    protobuf_framework_imports_.push_back(
-        FilePathBasename(file) + header_extension);
-    protobuf_non_framework_imports_.push_back(file_path + header_extension);
-    return;
-  }
-
-  // Lazy parse any mappings.
-  if (need_to_parse_mapping_file_) {
-    ParseFrameworkMappings();
-  }
-
-  map<string, string>::iterator proto_lookup =
-      proto_file_to_framework_name_.find(file->name());
-  if (proto_lookup != proto_file_to_framework_name_.end()) {
-    other_framework_imports_.push_back(
-        proto_lookup->second + "/" +
-        FilePathBasename(file) + header_extension);
-    return;
-  }
-
-  if (!generate_for_named_framework_.empty()) {
-    other_framework_imports_.push_back(
-        generate_for_named_framework_ + "/" +
-        FilePathBasename(file) + header_extension);
-    return;
-  }
-
-  other_imports_.push_back(file_path + header_extension);
-}
-
-void ImportWriter::Print(io::Printer* printer) const {
-  assert(protobuf_non_framework_imports_.size() ==
-         protobuf_framework_imports_.size());
-
-  bool add_blank_line = false;
-
-  if (protobuf_framework_imports_.size() > 0) {
-    const string framework_name(ProtobufLibraryFrameworkName);
-    const string cpp_symbol(ProtobufFrameworkImportSymbol(framework_name));
-
-    printer->Print(
-        "#if $cpp_symbol$\n",
-        "cpp_symbol", cpp_symbol);
-    for (vector<string>::const_iterator iter = protobuf_framework_imports_.begin();
-         iter != protobuf_framework_imports_.end(); ++iter) {
-      printer->Print(
-          " #import <$framework_name$/$header$>\n",
-          "framework_name", framework_name,
-          "header", *iter);
-    }
-    printer->Print(
-        "#else\n");
-    for (vector<string>::const_iterator iter = protobuf_non_framework_imports_.begin();
-         iter != protobuf_non_framework_imports_.end(); ++iter) {
-      printer->Print(
-          " #import \"$header$\"\n",
-          "header", *iter);
-    }
-    printer->Print(
-        "#endif\n");
-
-    add_blank_line = true;
-  }
-
-  if (other_framework_imports_.size() > 0) {
-    if (add_blank_line) {
-      printer->Print("\n");
-    }
-
-    for (vector<string>::const_iterator iter = other_framework_imports_.begin();
-         iter != other_framework_imports_.end(); ++iter) {
-      printer->Print(
-          " #import <$header$>\n",
-          "header", *iter);
-    }
-
-    add_blank_line = true;
-  }
-
-  if (other_imports_.size() > 0) {
-    if (add_blank_line) {
-      printer->Print("\n");
-    }
-
-    for (vector<string>::const_iterator iter = other_imports_.begin();
-         iter != other_imports_.end(); ++iter) {
-      printer->Print(
-          " #import \"$header$\"\n",
-          "header", *iter);
-    }
-  }
-}
-
-void ImportWriter::ParseFrameworkMappings() {
-  need_to_parse_mapping_file_ = false;
-  if (named_framework_to_proto_path_mappings_path_.empty()) {
-    return;  // Nothing to do.
-  }
-
-  ProtoFrameworkCollector collector(&proto_file_to_framework_name_);
-  string parse_error;
-  if (!ParseSimpleFile(named_framework_to_proto_path_mappings_path_,
-                       &collector, &parse_error)) {
-    cerr << "error parsing " << named_framework_to_proto_path_mappings_path_
-         << " : " << parse_error << endl;
-    cerr.flush();
-  }
-}
-
-bool ImportWriter::ProtoFrameworkCollector::ConsumeLine(
-    const StringPiece& line, string* out_error) {
-  int offset = line.find(':');
-  if (offset == StringPiece::npos) {
-    *out_error =
-        string("Framework/proto file mapping line without colon sign: '") +
-        line.ToString() + "'.";
-    return false;
-  }
-  StringPiece framework_name(line, 0, offset);
-  StringPiece proto_file_list(line, offset + 1, line.length() - offset - 1);
-  StringPieceTrimWhitespace(&framework_name);
-
-  int start = 0;
-  while (start < proto_file_list.length()) {
-    offset = proto_file_list.find(',', start);
-    if (offset == StringPiece::npos) {
-      offset = proto_file_list.length();
-    }
-
-    StringPiece proto_file(proto_file_list, start, offset - start);
-    StringPieceTrimWhitespace(&proto_file);
-    if (proto_file.size() != 0) {
-      map<string, string>::iterator existing_entry =
-          map_->find(proto_file.ToString());
-      if (existing_entry != map_->end()) {
-        cerr << "warning: duplicate proto file reference, replacing framework entry for '"
-             << proto_file.ToString() << "' with '" << framework_name.ToString()
-             << "' (was '" << existing_entry->second << "')." << endl;
-        cerr.flush();
-      }
-
-      if (proto_file.find(' ') != StringPiece::npos) {
-        cerr << "note: framework mapping file had a proto file with a space in, hopefully that isn't a missing comma: '"
-             << proto_file.ToString() << "'" << endl;
-        cerr.flush();
-      }
-
-      (*map_)[proto_file.ToString()] = framework_name.ToString();
-    }
-
-    start = offset + 1;
-  }
-
-  return true;
-}
-
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_helpers.h b/src/google/protobuf/compiler/objectivec/objectivec_helpers.h
deleted file mode 100644
index 316069e..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_helpers.h
+++ /dev/null
@@ -1,281 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-// Helper functions for generating ObjectiveC code.
-
-#ifndef GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_HELPERS_H__
-#define GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_HELPERS_H__
-
-#include <string>
-#include <vector>
-
-#include <google/protobuf/descriptor.h>
-#include <google/protobuf/descriptor.pb.h>
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-// Generator options (see objectivec_generator.cc for a description of each):
-struct Options {
-  Options();
-  string expected_prefixes_path;
-  string generate_for_named_framework;
-  string named_framework_to_proto_path_mappings_path;
-};
-
-// Escape C++ trigraphs by escaping question marks to "\?".
-string EscapeTrigraphs(const string& to_escape);
-
-// Strips ".proto" or ".protodevel" from the end of a filename.
-string StripProto(const string& filename);
-
-// Remove white space from either end of a StringPiece.
-void StringPieceTrimWhitespace(StringPiece* input);
-
-// Returns true if the name requires a ns_returns_not_retained attribute applied
-// to it.
-bool IsRetainedName(const string& name);
-
-// Returns true if the name starts with "init" and will need to have special
-// handling under ARC.
-bool IsInitName(const string& name);
-
-// Gets the objc_class_prefix.
-string FileClassPrefix(const FileDescriptor* file);
-
-// Gets the path of the file we're going to generate (sans the .pb.h
-// extension).  The path will be dependent on the objectivec package
-// declared in the proto package.
-string FilePath(const FileDescriptor* file);
-
-// Just like FilePath(), but without the directory part.
-string FilePathBasename(const FileDescriptor* file);
-
-// Gets the name of the root class we'll generate in the file.  This class
-// is not meant for external consumption, but instead contains helpers that
-// the rest of the classes need
-string FileClassName(const FileDescriptor* file);
-
-// These return the fully-qualified class name corresponding to the given
-// descriptor.
-string ClassName(const Descriptor* descriptor);
-string ClassName(const Descriptor* descriptor, string* out_suffix_added);
-string EnumName(const EnumDescriptor* descriptor);
-
-// Returns the fully-qualified name of the enum value corresponding to the
-// the descriptor.
-string EnumValueName(const EnumValueDescriptor* descriptor);
-
-// Returns the name of the enum value corresponding to the descriptor.
-string EnumValueShortName(const EnumValueDescriptor* descriptor);
-
-// Reverse what an enum does.
-string UnCamelCaseEnumShortName(const string& name);
-
-// Returns the name to use for the extension (used as the method off the file's
-// Root class).
-string ExtensionMethodName(const FieldDescriptor* descriptor);
-
-// Returns the transformed field name.
-string FieldName(const FieldDescriptor* field);
-string FieldNameCapitalized(const FieldDescriptor* field);
-
-// Returns the transformed oneof name.
-string OneofEnumName(const OneofDescriptor* descriptor);
-string OneofName(const OneofDescriptor* descriptor);
-string OneofNameCapitalized(const OneofDescriptor* descriptor);
-
-inline bool HasFieldPresence(const FileDescriptor* file) {
-  return file->syntax() != FileDescriptor::SYNTAX_PROTO3;
-}
-
-inline bool HasPreservingUnknownEnumSemantics(const FileDescriptor* file) {
-  return file->syntax() == FileDescriptor::SYNTAX_PROTO3;
-}
-
-inline bool IsMapEntryMessage(const Descriptor* descriptor) {
-  return descriptor->options().map_entry();
-}
-
-// Reverse of the above.
-string UnCamelCaseFieldName(const string& name, const FieldDescriptor* field);
-
-enum ObjectiveCType {
-  OBJECTIVECTYPE_INT32,
-  OBJECTIVECTYPE_UINT32,
-  OBJECTIVECTYPE_INT64,
-  OBJECTIVECTYPE_UINT64,
-  OBJECTIVECTYPE_FLOAT,
-  OBJECTIVECTYPE_DOUBLE,
-  OBJECTIVECTYPE_BOOLEAN,
-  OBJECTIVECTYPE_STRING,
-  OBJECTIVECTYPE_DATA,
-  OBJECTIVECTYPE_ENUM,
-  OBJECTIVECTYPE_MESSAGE
-};
-
-enum FlagType {
-  FLAGTYPE_DESCRIPTOR_INITIALIZATION,
-  FLAGTYPE_EXTENSION,
-  FLAGTYPE_FIELD
-};
-
-template<class TDescriptor>
-string GetOptionalDeprecatedAttribute(const TDescriptor* descriptor, bool preSpace = true, bool postNewline = false) {
-  if (descriptor->options().deprecated()) {
-    string result = "DEPRECATED_ATTRIBUTE";
-    if (preSpace) {
-      result.insert(0, " ");
-    }
-    if (postNewline) {
-      result.append("\n");
-    }
-    return result;
-  } else {
-    return "";
-  }
-}
-
-string GetCapitalizedType(const FieldDescriptor* field);
-
-ObjectiveCType GetObjectiveCType(FieldDescriptor::Type field_type);
-
-inline ObjectiveCType GetObjectiveCType(const FieldDescriptor* field) {
-  return GetObjectiveCType(field->type());
-}
-
-bool IsPrimitiveType(const FieldDescriptor* field);
-bool IsReferenceType(const FieldDescriptor* field);
-
-string GPBGenericValueFieldName(const FieldDescriptor* field);
-string DefaultValue(const FieldDescriptor* field);
-bool HasNonZeroDefaultValue(const FieldDescriptor* field);
-
-string BuildFlagsString(const FlagType type, const vector<string>& strings);
-
-// Builds HeaderDoc/appledoc style comments out of the comments in the .proto
-// file.
-string BuildCommentsString(const SourceLocation& location,
-                           bool prefer_single_line);
-
-// The name the commonly used by the library when built as a framework.
-// This lines up to the name used in the CocoaPod.
-extern const char* const ProtobufLibraryFrameworkName;
-// Returns the CPP symbol name to use as the gate for framework style imports
-// for the given framework name to use.
-string ProtobufFrameworkImportSymbol(const string& framework_name);
-
-// Checks if the file is one of the proto's bundled with the library.
-bool IsProtobufLibraryBundledProtoFile(const FileDescriptor* file);
-
-// Checks the prefix for the given files and outputs any warnings as needed. If
-// there are flat out errors, then out_error is filled in with the first error
-// and the result is false.
-bool ValidateObjCClassPrefixes(const vector<const FileDescriptor*>& files,
-                               const Options& generation_options,
-                               string* out_error);
-
-// Generate decode data needed for ObjC's GPBDecodeTextFormatName() to transform
-// the input into the expected output.
-class LIBPROTOC_EXPORT TextFormatDecodeData {
- public:
-  TextFormatDecodeData();
-  ~TextFormatDecodeData();
-
-  void AddString(int32 key, const string& input_for_decode,
-                 const string& desired_output);
-  size_t num_entries() const { return entries_.size(); }
-  string Data() const;
-
-  static string DecodeDataForString(const string& input_for_decode,
-                                    const string& desired_output);
-
- private:
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(TextFormatDecodeData);
-
-  typedef std::pair<int32, string> DataEntry;
-  vector<DataEntry> entries_;
-};
-
-// Helper for parsing simple files.
-class LIBPROTOC_EXPORT LineConsumer {
- public:
-  LineConsumer();
-  virtual ~LineConsumer();
-  virtual bool ConsumeLine(const StringPiece& line, string* out_error) = 0;
-};
-
-bool ParseSimpleFile(
-    const string& path, LineConsumer* line_consumer, string* out_error);
-
-
-// Helper class for parsing framework import mappings and generating
-// import statements.
-class LIBPROTOC_EXPORT ImportWriter {
- public:
-  ImportWriter(const string& generate_for_named_framework,
-               const string& named_framework_to_proto_path_mappings_path);
-  ~ImportWriter();
-
-  void AddFile(const FileDescriptor* file, const string& header_extension);
-  void Print(io::Printer *printer) const;
-
- private:
-  class ProtoFrameworkCollector : public LineConsumer {
-   public:
-    ProtoFrameworkCollector(map<string, string>* inout_proto_file_to_framework_name)
-        : map_(inout_proto_file_to_framework_name) {}
-
-    virtual bool ConsumeLine(const StringPiece& line, string* out_error);
-
-   private:
-    map<string, string>* map_;
-  };
-
-  void ParseFrameworkMappings();
-
-  const string generate_for_named_framework_;
-  const string named_framework_to_proto_path_mappings_path_;
-  map<string, string> proto_file_to_framework_name_;
-  bool need_to_parse_mapping_file_;
-
-  vector<string> protobuf_framework_imports_;
-  vector<string> protobuf_non_framework_imports_;
-  vector<string> other_framework_imports_;
-  vector<string> other_imports_;
-};
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
-#endif  // GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_HELPERS_H__
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc b/src/google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc
deleted file mode 100644
index dc1cef5..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_helpers_unittest.cc
+++ /dev/null
@@ -1,257 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2014 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#include <google/protobuf/compiler/objectivec/objectivec_helpers.h>
-#include <google/protobuf/testing/googletest.h>
-#include <gtest/gtest.h>
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-namespace {
-
-TEST(ObjCHelper, TextFormatDecodeData_DecodeDataForString_RawStrings) {
-  string input_for_decode("abcdefghIJ");
-  string desired_output_for_decode;
-  string expected;
-  string result;
-
-  // Different data, can't transform.
-
-  desired_output_for_decode = "zbcdefghIJ";
-  expected = string("\0zbcdefghIJ\0", 12);
-  result = TextFormatDecodeData::DecodeDataForString(input_for_decode,
-                                                     desired_output_for_decode);
-  EXPECT_EQ(expected, result);
-
-  desired_output_for_decode = "abcdezghIJ";
-  expected = string("\0abcdezghIJ\0", 12);
-  result = TextFormatDecodeData::DecodeDataForString(input_for_decode,
-                                                     desired_output_for_decode);
-  EXPECT_EQ(expected, result);
-
-  // Shortened data, can't transform.
-
-  desired_output_for_decode = "abcdefghI";
-  expected = string("\0abcdefghI\0", 11);
-  result = TextFormatDecodeData::DecodeDataForString(input_for_decode,
-                                                     desired_output_for_decode);
-  EXPECT_EQ(expected, result);
-
-  // Extra data, can't transform.
-
-  desired_output_for_decode = "abcdefghIJz";
-  expected = string("\0abcdefghIJz\0", 13);
-  result = TextFormatDecodeData::DecodeDataForString(input_for_decode,
-                                                     desired_output_for_decode);
-  EXPECT_EQ(expected, result);
-}
-
-TEST(ObjCHelper, TextFormatDecodeData_DecodeDataForString_ByteCodes) {
-  string input_for_decode("abcdefghIJ");
-  string desired_output_for_decode;
-  string expected;
-  string result;
-
-  desired_output_for_decode = "abcdefghIJ";
-  expected = string("\x0A\x0", 2);
-  result = TextFormatDecodeData::DecodeDataForString(input_for_decode,
-                                                     desired_output_for_decode);
-  EXPECT_EQ(expected, result);
-
-  desired_output_for_decode = "_AbcdefghIJ";
-  expected = string("\xCA\x0", 2);
-  result = TextFormatDecodeData::DecodeDataForString(input_for_decode,
-                                                     desired_output_for_decode);
-  EXPECT_EQ(expected, result);
-
-  desired_output_for_decode = "ABCD__EfghI_j";
-  expected = string("\x64\x80\xC5\xA1\x0", 5);
-  result = TextFormatDecodeData::DecodeDataForString(input_for_decode,
-                                                     desired_output_for_decode);
-  EXPECT_EQ(expected, result);
-
-  // Long name so multiple decode ops are needed.
-
-  input_for_decode =
-      "longFieldNameIsLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong1000";
-  desired_output_for_decode =
-      "long_field_name_is_looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong_1000";
-  expected = string("\x04\xA5\xA4\xA2\xBF\x1F\x0E\x84\x0", 9);
-  result = TextFormatDecodeData::DecodeDataForString(input_for_decode,
-                                                     desired_output_for_decode);
-  EXPECT_EQ(expected, result);
-}
-
-// Death tests do not work on Windows as of yet.
-#ifdef PROTOBUF_HAS_DEATH_TEST
-TEST(ObjCHelperDeathTest, TextFormatDecodeData_DecodeDataForString_Failures) {
-  // Empty inputs.
-
-  EXPECT_EXIT(TextFormatDecodeData::DecodeDataForString("", ""),
-              ::testing::KilledBySignal(SIGABRT),
-              "error: got empty string for making TextFormat data, input:");
-  EXPECT_EXIT(TextFormatDecodeData::DecodeDataForString("a", ""),
-              ::testing::KilledBySignal(SIGABRT),
-              "error: got empty string for making TextFormat data, input:");
-  EXPECT_EXIT(TextFormatDecodeData::DecodeDataForString("", "a"),
-              ::testing::KilledBySignal(SIGABRT),
-              "error: got empty string for making TextFormat data, input:");
-
-  // Null char in the string.
-
-  string str_with_null_char("ab\0c", 4);
-  EXPECT_EXIT(
-      TextFormatDecodeData::DecodeDataForString(str_with_null_char, "def"),
-      ::testing::KilledBySignal(SIGABRT),
-      "error: got a null char in a string for making TextFormat data, input:");
-  EXPECT_EXIT(
-      TextFormatDecodeData::DecodeDataForString("def", str_with_null_char),
-      ::testing::KilledBySignal(SIGABRT),
-      "error: got a null char in a string for making TextFormat data, input:");
-}
-#endif  // PROTOBUF_HAS_DEATH_TEST
-
-TEST(ObjCHelper, TextFormatDecodeData_RawStrings) {
-  TextFormatDecodeData decode_data;
-
-  // Different data, can't transform.
-  decode_data.AddString(1, "abcdefghIJ", "zbcdefghIJ");
-  decode_data.AddString(3, "abcdefghIJ", "abcdezghIJ");
-  // Shortened data, can't transform.
-  decode_data.AddString(2, "abcdefghIJ", "abcdefghI");
-  // Extra data, can't transform.
-  decode_data.AddString(4, "abcdefghIJ", "abcdefghIJz");
-
-  EXPECT_EQ(4, decode_data.num_entries());
-
-  uint8 expected_data[] = {
-      0x4,
-      0x1, 0x0, 'z', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'I', 'J', 0x0,
-      0x3, 0x0, 'a', 'b', 'c', 'd', 'e', 'z', 'g', 'h', 'I', 'J', 0x0,
-      0x2, 0x0, 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'I', 0x0,
-      0x4, 0x0, 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'I', 'J', 'z', 0x0,
-  };
-  string expected((const char*)expected_data, sizeof(expected_data));
-
-  EXPECT_EQ(expected, decode_data.Data());
-}
-
-TEST(ObjCHelper, TextFormatDecodeData_ByteCodes) {
-  TextFormatDecodeData decode_data;
-
-  decode_data.AddString(1, "abcdefghIJ", "abcdefghIJ");
-  decode_data.AddString(3, "abcdefghIJ", "_AbcdefghIJ");
-  decode_data.AddString(2, "abcdefghIJ", "Abcd_EfghIJ");
-  decode_data.AddString(4, "abcdefghIJ", "ABCD__EfghI_j");
-  decode_data.AddString(1000,
-                        "longFieldNameIsLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong1000",
-                        "long_field_name_is_looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong_1000");
-
-  EXPECT_EQ(5, decode_data.num_entries());
-
-  uint8 expected_data[] = {
-      0x5,
-      // All as is (00 op)
-      0x1,  0x0A, 0x0,
-      // Underscore, upper + 9 (10 op)
-      0x3,  0xCA, 0x0,
-      //  Upper + 3 (10 op), underscore, upper + 5 (10 op)
-      0x2,  0x44, 0xC6, 0x0,
-      // All Upper for 4 (11 op), underscore, underscore, upper + 5 (10 op),
-      // underscore, lower + 0 (01 op)
-      0x4,  0x64, 0x80, 0xC5, 0xA1, 0x0,
-      // 2 byte key: as is + 3 (00 op), underscore, lower + 4 (01 op),
-      //   underscore, lower + 3 (01 op), underscore, lower + 1 (01 op),
-      //   underscore, lower + 30 (01 op), as is + 30 (00 op), as is + 13 (00
-      //   op),
-      //   underscore, as is + 3 (00 op)
-      0xE8, 0x07, 0x04, 0xA5, 0xA4, 0xA2, 0xBF, 0x1F, 0x0E, 0x84, 0x0,
-  };
-  string expected((const char*)expected_data, sizeof(expected_data));
-
-  EXPECT_EQ(expected, decode_data.Data());
-}
-
-
-// Death tests do not work on Windows as of yet.
-#ifdef PROTOBUF_HAS_DEATH_TEST
-TEST(ObjCHelperDeathTest, TextFormatDecodeData_Failures) {
-  TextFormatDecodeData decode_data;
-
-  // Empty inputs.
-
-  EXPECT_EXIT(decode_data.AddString(1, "", ""),
-              ::testing::KilledBySignal(SIGABRT),
-              "error: got empty string for making TextFormat data, input:");
-  EXPECT_EXIT(decode_data.AddString(1, "a", ""),
-              ::testing::KilledBySignal(SIGABRT),
-              "error: got empty string for making TextFormat data, input:");
-  EXPECT_EXIT(decode_data.AddString(1, "", "a"),
-              ::testing::KilledBySignal(SIGABRT),
-              "error: got empty string for making TextFormat data, input:");
-
-  // Null char in the string.
-
-  string str_with_null_char("ab\0c", 4);
-  EXPECT_EXIT(
-      decode_data.AddString(1, str_with_null_char, "def"),
-      ::testing::KilledBySignal(SIGABRT),
-      "error: got a null char in a string for making TextFormat data, input:");
-  EXPECT_EXIT(
-      decode_data.AddString(1, "def", str_with_null_char),
-      ::testing::KilledBySignal(SIGABRT),
-      "error: got a null char in a string for making TextFormat data, input:");
-
-  // Duplicate keys
-
-  decode_data.AddString(1, "abcdefghIJ", "abcdefghIJ");
-  decode_data.AddString(3, "abcdefghIJ", "_AbcdefghIJ");
-  decode_data.AddString(2, "abcdefghIJ", "Abcd_EfghIJ");
-  EXPECT_EXIT(decode_data.AddString(2, "xyz", "x_yz"),
-              ::testing::KilledBySignal(SIGABRT),
-              "error: duplicate key \\(2\\) making TextFormat data, input:");
-}
-#endif  // PROTOBUF_HAS_DEATH_TEST
-
-// TODO(thomasvl): Should probably add some unittests for all the special cases
-// of name mangling (class name, field name, enum names).  Rather than doing
-// this with an ObjC test in the objectivec directory, we should be able to
-// use src/google/protobuf/compiler/importer* (like other tests) to support a
-// virtual file system to feed in protos, once we have the Descriptor tree, the
-// tests could use the helper methods for generating names and validate the
-// right things are happening.
-
-}  // namespace
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_map_field.cc b/src/google/protobuf/compiler/objectivec/objectivec_map_field.cc
deleted file mode 100644
index 0bc9dc1..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_map_field.cc
+++ /dev/null
@@ -1,180 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2015 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#include <map>
-#include <string>
-
-#include <google/protobuf/compiler/objectivec/objectivec_map_field.h>
-#include <google/protobuf/stubs/common.h>
-#include <google/protobuf/compiler/objectivec/objectivec_helpers.h>
-#include <google/protobuf/io/printer.h>
-#include <google/protobuf/stubs/strutil.h>
-#include <google/protobuf/stubs/substitute.h>
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-// MapFieldGenerator uses RepeatedFieldGenerator as the parent because it
-// provides a bunch of things (no has* methods, comments for contained type,
-// etc.).
-
-namespace {
-
-const char* MapEntryTypeName(const FieldDescriptor* descriptor, bool isKey) {
-  ObjectiveCType type = GetObjectiveCType(descriptor);
-  switch (type) {
-    case OBJECTIVECTYPE_INT32:
-      return "Int32";
-    case OBJECTIVECTYPE_UINT32:
-      return "UInt32";
-    case OBJECTIVECTYPE_INT64:
-      return "Int64";
-    case OBJECTIVECTYPE_UINT64:
-      return "UInt64";
-    case OBJECTIVECTYPE_FLOAT:
-      return "Float";
-    case OBJECTIVECTYPE_DOUBLE:
-      return "Double";
-    case OBJECTIVECTYPE_BOOLEAN:
-      return "Bool";
-    case OBJECTIVECTYPE_STRING:
-      return (isKey ? "String" : "Object");
-    case OBJECTIVECTYPE_DATA:
-      return "Object";
-    case OBJECTIVECTYPE_ENUM:
-      return "Enum";
-    case OBJECTIVECTYPE_MESSAGE:
-      return "Object";
-  }
-
-  // Some compilers report reaching end of function even though all cases of
-  // the enum are handed in the switch.
-  GOOGLE_LOG(FATAL) << "Can't get here.";
-  return NULL;
-}
-
-}  // namespace
-
-MapFieldGenerator::MapFieldGenerator(const FieldDescriptor* descriptor,
-                                     const Options& options)
-    : RepeatedFieldGenerator(descriptor, options) {
-  const FieldDescriptor* key_descriptor =
-      descriptor->message_type()->FindFieldByName("key");
-  const FieldDescriptor* value_descriptor =
-      descriptor->message_type()->FindFieldByName("value");
-  value_field_generator_.reset(FieldGenerator::Make(value_descriptor, options));
-
-  // Pull over some variables_ from the value.
-  variables_["field_type"] = value_field_generator_->variable("field_type");
-  variables_["default"] = value_field_generator_->variable("default");
-  variables_["default_name"] = value_field_generator_->variable("default_name");
-
-  // Build custom field flags.
-  std::vector<string> field_flags;
-  field_flags.push_back("GPBFieldMapKey" + GetCapitalizedType(key_descriptor));
-  // Pull over the current text format custom name values that was calculated.
-  if (variables_["fieldflags"].find("GPBFieldTextFormatNameCustom") !=
-      string::npos) {
-    field_flags.push_back("GPBFieldTextFormatNameCustom");
-  }
-  // Pull over some info from the value's flags.
-  const string& value_field_flags =
-      value_field_generator_->variable("fieldflags");
-  if (value_field_flags.find("GPBFieldHasDefaultValue") != string::npos) {
-    field_flags.push_back("GPBFieldHasDefaultValue");
-  }
-  if (value_field_flags.find("GPBFieldHasEnumDescriptor") != string::npos) {
-    field_flags.push_back("GPBFieldHasEnumDescriptor");
-  }
-  variables_["fieldflags"] = BuildFlagsString(FLAGTYPE_FIELD, field_flags);
-
-  ObjectiveCType value_objc_type = GetObjectiveCType(value_descriptor);
-  const bool value_is_object_type =
-      ((value_objc_type == OBJECTIVECTYPE_STRING) ||
-       (value_objc_type == OBJECTIVECTYPE_DATA) ||
-       (value_objc_type == OBJECTIVECTYPE_MESSAGE));
-  if ((GetObjectiveCType(key_descriptor) == OBJECTIVECTYPE_STRING) &&
-      value_is_object_type) {
-    variables_["array_storage_type"] = "NSMutableDictionary";
-    variables_["array_property_type"] =
-        "NSMutableDictionary<NSString*, " +
-        value_field_generator_->variable("storage_type") + "*>";
-  } else {
-    string class_name("GPB");
-    class_name += MapEntryTypeName(key_descriptor, true);
-    class_name += MapEntryTypeName(value_descriptor, false);
-    class_name += "Dictionary";
-    variables_["array_storage_type"] = class_name;
-    if (value_is_object_type) {
-      variables_["array_property_type"] =
-          class_name + "<" +
-          value_field_generator_->variable("storage_type") + "*>";
-    }
-  }
-
-  variables_["dataTypeSpecific_name"] =
-      value_field_generator_->variable("dataTypeSpecific_name");
-  variables_["dataTypeSpecific_value"] =
-      value_field_generator_->variable("dataTypeSpecific_value");
-}
-
-MapFieldGenerator::~MapFieldGenerator() {}
-
-void MapFieldGenerator::FinishInitialization(void) {
-  RepeatedFieldGenerator::FinishInitialization();
-  // Use the array_comment support in RepeatedFieldGenerator to output what the
-  // values in the map are.
-  const FieldDescriptor* value_descriptor =
-      descriptor_->message_type()->FindFieldByName("value");
-  if (GetObjectiveCType(value_descriptor) == OBJECTIVECTYPE_ENUM) {
-    variables_["array_comment"] =
-        "// |" + variables_["name"] + "| values are |" + value_field_generator_->variable("storage_type") + "|\n";
-  }
-}
-
-void MapFieldGenerator::DetermineForwardDeclarations(
-    set<string>* fwd_decls) const {
-  RepeatedFieldGenerator::DetermineForwardDeclarations(fwd_decls);
-  const FieldDescriptor* value_descriptor =
-      descriptor_->message_type()->FindFieldByName("value");
-  if (GetObjectiveCType(value_descriptor) == OBJECTIVECTYPE_MESSAGE) {
-    const string& value_storage_type =
-        value_field_generator_->variable("storage_type");
-    fwd_decls->insert("@class " + value_storage_type);
-  }
-}
-
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_map_field.h b/src/google/protobuf/compiler/objectivec/objectivec_map_field.h
deleted file mode 100644
index bc68a68..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_map_field.h
+++ /dev/null
@@ -1,67 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2015 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#ifndef GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_MAP_FIELD_H__
-#define GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_MAP_FIELD_H__
-
-#include <map>
-#include <string>
-#include <google/protobuf/compiler/objectivec/objectivec_field.h>
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-class MapFieldGenerator : public RepeatedFieldGenerator {
-  friend FieldGenerator* FieldGenerator::Make(const FieldDescriptor* field,
-                                              const Options& options);
-
- public:
-  virtual void FinishInitialization(void);
-
- protected:
-  MapFieldGenerator(const FieldDescriptor* descriptor, const Options& options);
-  virtual ~MapFieldGenerator();
-
-  virtual void DetermineForwardDeclarations(set<string>* fwd_decls) const;
-
- private:
-  scoped_ptr<FieldGenerator> value_field_generator_;
-
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(MapFieldGenerator);
-};
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
-
-#endif  // GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_MAP_FIELD_H__
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_message.cc b/src/google/protobuf/compiler/objectivec/objectivec_message.cc
deleted file mode 100644
index 4c6e1b5..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_message.cc
+++ /dev/null
@@ -1,630 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#include <algorithm>
-#include <iostream>
-#include <sstream>
-
-#include <google/protobuf/stubs/hash.h>
-#include <google/protobuf/compiler/objectivec/objectivec_message.h>
-#include <google/protobuf/compiler/objectivec/objectivec_enum.h>
-#include <google/protobuf/compiler/objectivec/objectivec_extension.h>
-#include <google/protobuf/compiler/objectivec/objectivec_helpers.h>
-#include <google/protobuf/stubs/stl_util.h>
-#include <google/protobuf/stubs/strutil.h>
-#include <google/protobuf/io/printer.h>
-#include <google/protobuf/io/coded_stream.h>
-#include <google/protobuf/io/zero_copy_stream_impl.h>
-#include <google/protobuf/wire_format.h>
-#include <google/protobuf/wire_format_lite_inl.h>
-#include <google/protobuf/descriptor.pb.h>
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-using internal::WireFormat;
-using internal::WireFormatLite;
-
-namespace {
-struct FieldOrderingByNumber {
-  inline bool operator()(const FieldDescriptor* a,
-                         const FieldDescriptor* b) const {
-    return a->number() < b->number();
-  }
-};
-
-int OrderGroupForFieldDescriptor(const FieldDescriptor* descriptor) {
-  // The first item in the object structure is our uint32[] for has bits.
-  // We then want to order things to make the instances as small as
-  // possible. So we follow the has bits with:
-  //   1. Anything always 4 bytes - float, *32, enums
-  //   2. Anything that is always a pointer (they will be 8 bytes on 64 bit
-  //      builds and 4 bytes on 32bit builds.
-  //   3. Anything always 8 bytes - double, *64
-  //
-  // NOTE: Bools aren't listed, they were stored in the has bits.
-  //
-  // Why? Using 64bit builds as an example, this means worse case, we have
-  // enough bools that we overflow 1 byte from 4 byte alignment, so 3 bytes
-  // are wasted before the 4 byte values. Then if we have an odd number of
-  // those 4 byte values, the 8 byte values will be pushed down by 32bits to
-  // keep them aligned. But the structure will end 8 byte aligned, so no
-  // waste on the end. If you did the reverse order, you could waste 4 bytes
-  // before the first 8 byte value (after the has array), then a single
-  // bool on the end would need 7 bytes of padding to make the overall
-  // structure 8 byte aligned; so 11 bytes, wasted total.
-
-  // Anything repeated is a GPB*Array/NSArray, so pointer.
-  if (descriptor->is_repeated()) {
-    return 3;
-  }
-
-  switch (descriptor->type()) {
-    // All always 8 bytes.
-    case FieldDescriptor::TYPE_DOUBLE:
-    case FieldDescriptor::TYPE_INT64:
-    case FieldDescriptor::TYPE_SINT64:
-    case FieldDescriptor::TYPE_UINT64:
-    case FieldDescriptor::TYPE_SFIXED64:
-    case FieldDescriptor::TYPE_FIXED64:
-      return 4;
-
-    // Pointers (string and bytes are NSString and NSData); 8 or 4 bytes
-    // depending on the build architecture.
-    case FieldDescriptor::TYPE_GROUP:
-    case FieldDescriptor::TYPE_MESSAGE:
-    case FieldDescriptor::TYPE_STRING:
-    case FieldDescriptor::TYPE_BYTES:
-      return 3;
-
-    // All always 4 bytes (enums are int32s).
-    case FieldDescriptor::TYPE_FLOAT:
-    case FieldDescriptor::TYPE_INT32:
-    case FieldDescriptor::TYPE_SINT32:
-    case FieldDescriptor::TYPE_UINT32:
-    case FieldDescriptor::TYPE_SFIXED32:
-    case FieldDescriptor::TYPE_FIXED32:
-    case FieldDescriptor::TYPE_ENUM:
-      return 2;
-
-    // 0 bytes. Stored in the has bits.
-    case FieldDescriptor::TYPE_BOOL:
-      return 99;  // End of the list (doesn't really matter).
-  }
-
-  // Some compilers report reaching end of function even though all cases of
-  // the enum are handed in the switch.
-  GOOGLE_LOG(FATAL) << "Can't get here.";
-  return 0;
-}
-
-struct FieldOrderingByStorageSize {
-  inline bool operator()(const FieldDescriptor* a,
-                         const FieldDescriptor* b) const {
-    // Order by grouping.
-    const int order_group_a = OrderGroupForFieldDescriptor(a);
-    const int order_group_b = OrderGroupForFieldDescriptor(b);
-    if (order_group_a != order_group_b) {
-      return order_group_a < order_group_b;
-    }
-    // Within the group, order by field number (provides stable ordering).
-    return a->number() < b->number();
-  }
-};
-
-struct ExtensionRangeOrdering {
-  bool operator()(const Descriptor::ExtensionRange* a,
-                  const Descriptor::ExtensionRange* b) const {
-    return a->start < b->start;
-  }
-};
-
-// Sort the fields of the given Descriptor by number into a new[]'d array
-// and return it.
-const FieldDescriptor** SortFieldsByNumber(const Descriptor* descriptor) {
-  const FieldDescriptor** fields =
-      new const FieldDescriptor* [descriptor->field_count()];
-  for (int i = 0; i < descriptor->field_count(); i++) {
-    fields[i] = descriptor->field(i);
-  }
-  sort(fields, fields + descriptor->field_count(), FieldOrderingByNumber());
-  return fields;
-}
-
-// Sort the fields of the given Descriptor by storage size into a new[]'d
-// array and return it.
-const FieldDescriptor** SortFieldsByStorageSize(const Descriptor* descriptor) {
-  const FieldDescriptor** fields =
-      new const FieldDescriptor* [descriptor->field_count()];
-  for (int i = 0; i < descriptor->field_count(); i++) {
-    fields[i] = descriptor->field(i);
-  }
-  sort(fields, fields + descriptor->field_count(),
-       FieldOrderingByStorageSize());
-  return fields;
-}
-}  // namespace
-
-MessageGenerator::MessageGenerator(const string& root_classname,
-                                   const Descriptor* descriptor,
-                                   const Options& options)
-    : root_classname_(root_classname),
-      descriptor_(descriptor),
-      field_generators_(descriptor, options),
-      class_name_(ClassName(descriptor_)) {
-  for (int i = 0; i < descriptor_->extension_count(); i++) {
-    extension_generators_.push_back(
-        new ExtensionGenerator(class_name_, descriptor_->extension(i)));
-  }
-
-  for (int i = 0; i < descriptor_->oneof_decl_count(); i++) {
-    OneofGenerator* generator = new OneofGenerator(descriptor_->oneof_decl(i));
-    oneof_generators_.push_back(generator);
-  }
-
-  for (int i = 0; i < descriptor_->enum_type_count(); i++) {
-    EnumGenerator* generator = new EnumGenerator(descriptor_->enum_type(i));
-    enum_generators_.push_back(generator);
-  }
-
-  for (int i = 0; i < descriptor_->nested_type_count(); i++) {
-    MessageGenerator* generator =
-        new MessageGenerator(root_classname_,
-                             descriptor_->nested_type(i),
-                             options);
-    nested_message_generators_.push_back(generator);
-  }
-}
-
-MessageGenerator::~MessageGenerator() {
-  STLDeleteContainerPointers(extension_generators_.begin(),
-                             extension_generators_.end());
-  STLDeleteContainerPointers(enum_generators_.begin(), enum_generators_.end());
-  STLDeleteContainerPointers(nested_message_generators_.begin(),
-                             nested_message_generators_.end());
-  STLDeleteContainerPointers(oneof_generators_.begin(),
-                             oneof_generators_.end());
-}
-
-void MessageGenerator::GenerateStaticVariablesInitialization(
-    io::Printer* printer) {
-  for (vector<ExtensionGenerator*>::iterator iter =
-           extension_generators_.begin();
-       iter != extension_generators_.end(); ++iter) {
-    (*iter)->GenerateStaticVariablesInitialization(printer);
-  }
-
-  for (vector<MessageGenerator*>::iterator iter =
-           nested_message_generators_.begin();
-       iter != nested_message_generators_.end(); ++iter) {
-    (*iter)->GenerateStaticVariablesInitialization(printer);
-  }
-}
-
-void MessageGenerator::DetermineForwardDeclarations(set<string>* fwd_decls) {
-  if (!IsMapEntryMessage(descriptor_)) {
-    for (int i = 0; i < descriptor_->field_count(); i++) {
-      const FieldDescriptor* fieldDescriptor = descriptor_->field(i);
-      field_generators_.get(fieldDescriptor)
-          .DetermineForwardDeclarations(fwd_decls);
-    }
-  }
-
-  for (vector<MessageGenerator*>::iterator iter =
-           nested_message_generators_.begin();
-       iter != nested_message_generators_.end(); ++iter) {
-    (*iter)->DetermineForwardDeclarations(fwd_decls);
-  }
-}
-
-bool MessageGenerator::IncludesOneOfDefinition() const {
-  if (!oneof_generators_.empty()) {
-    return true;
-  }
-
-  for (vector<MessageGenerator*>::const_iterator iter =
-           nested_message_generators_.begin();
-       iter != nested_message_generators_.end(); ++iter) {
-    if ((*iter)->IncludesOneOfDefinition()) {
-      return true;
-    }
-  }
-
-  return false;
-}
-
-void MessageGenerator::GenerateEnumHeader(io::Printer* printer) {
-  for (vector<EnumGenerator*>::iterator iter = enum_generators_.begin();
-       iter != enum_generators_.end(); ++iter) {
-    (*iter)->GenerateHeader(printer);
-  }
-
-  for (vector<MessageGenerator*>::iterator iter =
-           nested_message_generators_.begin();
-       iter != nested_message_generators_.end(); ++iter) {
-    (*iter)->GenerateEnumHeader(printer);
-  }
-}
-
-void MessageGenerator::GenerateExtensionRegistrationSource(
-    io::Printer* printer) {
-  for (vector<ExtensionGenerator*>::iterator iter =
-           extension_generators_.begin();
-       iter != extension_generators_.end(); ++iter) {
-    (*iter)->GenerateRegistrationSource(printer);
-  }
-
-  for (vector<MessageGenerator*>::iterator iter =
-           nested_message_generators_.begin();
-       iter != nested_message_generators_.end(); ++iter) {
-    (*iter)->GenerateExtensionRegistrationSource(printer);
-  }
-}
-
-void MessageGenerator::GenerateMessageHeader(io::Printer* printer) {
-  // This a a map entry message, just recurse and do nothing directly.
-  if (IsMapEntryMessage(descriptor_)) {
-    for (vector<MessageGenerator*>::iterator iter =
-             nested_message_generators_.begin();
-         iter != nested_message_generators_.end(); ++iter) {
-      (*iter)->GenerateMessageHeader(printer);
-    }
-    return;
-  }
-
-  printer->Print(
-      "#pragma mark - $classname$\n"
-      "\n",
-      "classname", class_name_);
-
-  if (descriptor_->field_count()) {
-    scoped_array<const FieldDescriptor*> sorted_fields(
-        SortFieldsByNumber(descriptor_));
-
-    printer->Print("typedef GPB_ENUM($classname$_FieldNumber) {\n",
-                   "classname", class_name_);
-    printer->Indent();
-
-    for (int i = 0; i < descriptor_->field_count(); i++) {
-      field_generators_.get(sorted_fields[i])
-          .GenerateFieldNumberConstant(printer);
-    }
-
-    printer->Outdent();
-    printer->Print("};\n\n");
-  }
-
-  for (vector<OneofGenerator*>::iterator iter = oneof_generators_.begin();
-       iter != oneof_generators_.end(); ++iter) {
-    (*iter)->GenerateCaseEnum(printer);
-  }
-
-  string message_comments;
-  SourceLocation location;
-  if (descriptor_->GetSourceLocation(&location)) {
-    message_comments = BuildCommentsString(location, false);
-  } else {
-    message_comments = "";
-  }
-
-  printer->Print(
-      "$comments$$deprecated_attribute$@interface $classname$ : GPBMessage\n\n",
-      "classname", class_name_,
-      "deprecated_attribute", GetOptionalDeprecatedAttribute(descriptor_, false, true),
-      "comments", message_comments);
-
-  vector<char> seen_oneofs(descriptor_->oneof_decl_count(), 0);
-  for (int i = 0; i < descriptor_->field_count(); i++) {
-    const FieldDescriptor* field = descriptor_->field(i);
-    if (field->containing_oneof() != NULL) {
-      const int oneof_index = field->containing_oneof()->index();
-      if (!seen_oneofs[oneof_index]) {
-        seen_oneofs[oneof_index] = 1;
-        oneof_generators_[oneof_index]->GeneratePublicCasePropertyDeclaration(
-            printer);
-      }
-    }
-    field_generators_.get(field).GeneratePropertyDeclaration(printer);
-  }
-
-  printer->Print("@end\n\n");
-
-  for (int i = 0; i < descriptor_->field_count(); i++) {
-    field_generators_.get(descriptor_->field(i))
-        .GenerateCFunctionDeclarations(printer);
-  }
-
-  if (!oneof_generators_.empty()) {
-    for (vector<OneofGenerator*>::iterator iter = oneof_generators_.begin();
-         iter != oneof_generators_.end(); ++iter) {
-      (*iter)->GenerateClearFunctionDeclaration(printer);
-    }
-    printer->Print("\n");
-  }
-
-  if (descriptor_->extension_count() > 0) {
-    printer->Print("@interface $classname$ (DynamicMethods)\n\n",
-                   "classname", class_name_);
-    for (vector<ExtensionGenerator*>::iterator iter =
-             extension_generators_.begin();
-         iter != extension_generators_.end(); ++iter) {
-      (*iter)->GenerateMembersHeader(printer);
-    }
-    printer->Print("@end\n\n");
-  }
-
-  for (vector<MessageGenerator*>::iterator iter =
-           nested_message_generators_.begin();
-       iter != nested_message_generators_.end(); ++iter) {
-    (*iter)->GenerateMessageHeader(printer);
-  }
-}
-
-void MessageGenerator::GenerateSource(io::Printer* printer) {
-  if (!IsMapEntryMessage(descriptor_)) {
-    printer->Print(
-        "#pragma mark - $classname$\n"
-        "\n",
-        "classname", class_name_);
-
-    printer->Print("@implementation $classname$\n\n",
-                   "classname", class_name_);
-
-    for (vector<OneofGenerator*>::iterator iter = oneof_generators_.begin();
-         iter != oneof_generators_.end(); ++iter) {
-      (*iter)->GeneratePropertyImplementation(printer);
-    }
-
-    for (int i = 0; i < descriptor_->field_count(); i++) {
-      field_generators_.get(descriptor_->field(i))
-          .GeneratePropertyImplementation(printer);
-    }
-
-    scoped_array<const FieldDescriptor*> sorted_fields(
-        SortFieldsByNumber(descriptor_));
-    scoped_array<const FieldDescriptor*> size_order_fields(
-        SortFieldsByStorageSize(descriptor_));
-
-    vector<const Descriptor::ExtensionRange*> sorted_extensions;
-    for (int i = 0; i < descriptor_->extension_range_count(); ++i) {
-      sorted_extensions.push_back(descriptor_->extension_range(i));
-    }
-
-    sort(sorted_extensions.begin(), sorted_extensions.end(),
-         ExtensionRangeOrdering());
-
-    // Assign has bits:
-    // 1. FieldGeneratorMap::CalculateHasBits() loops through the fields seeing
-    //    who needs has bits and assigning them.
-    // 2. FieldGenerator::SetOneofIndexBase() overrides has_bit with a negative
-    //    index that groups all the elements in the oneof.
-    size_t num_has_bits = field_generators_.CalculateHasBits();
-    size_t sizeof_has_storage = (num_has_bits + 31) / 32;
-    if (sizeof_has_storage == 0) {
-      // In the case where no field needs has bits, don't let the _has_storage_
-      // end up as zero length (zero length arrays are sort of a grey area
-      // since it has to be at the start of the struct). This also ensures a
-      // field with only oneofs keeps the required negative indices they need.
-      sizeof_has_storage = 1;
-    }
-    // Tell all the fields the oneof base.
-    for (vector<OneofGenerator*>::iterator iter = oneof_generators_.begin();
-         iter != oneof_generators_.end(); ++iter) {
-      (*iter)->SetOneofIndexBase(sizeof_has_storage);
-    }
-    field_generators_.SetOneofIndexBase(sizeof_has_storage);
-    // sizeof_has_storage needs enough bits for the single fields that aren't in
-    // any oneof, and then one int32 for each oneof (to store the field number).
-    sizeof_has_storage += descriptor_->oneof_decl_count();
-
-    printer->Print(
-        "\n"
-        "typedef struct $classname$__storage_ {\n"
-        "  uint32_t _has_storage_[$sizeof_has_storage$];\n",
-        "classname", class_name_,
-        "sizeof_has_storage", SimpleItoa(sizeof_has_storage));
-    printer->Indent();
-
-    for (int i = 0; i < descriptor_->field_count(); i++) {
-      field_generators_.get(size_order_fields[i])
-          .GenerateFieldStorageDeclaration(printer);
-    }
-    printer->Outdent();
-
-    printer->Print("} $classname$__storage_;\n\n", "classname", class_name_);
-
-
-    printer->Print(
-        "// This method is threadsafe because it is initially called\n"
-        "// in +initialize for each subclass.\n"
-        "+ (GPBDescriptor *)descriptor {\n"
-        "  static GPBDescriptor *descriptor = nil;\n"
-        "  if (!descriptor) {\n");
-
-    TextFormatDecodeData text_format_decode_data;
-    bool has_fields = descriptor_->field_count() > 0;
-    bool need_defaults = field_generators_.DoesAnyFieldHaveNonZeroDefault();
-    string field_description_type;
-    if (need_defaults) {
-      field_description_type = "GPBMessageFieldDescriptionWithDefault";
-    } else {
-      field_description_type = "GPBMessageFieldDescription";
-    }
-    if (has_fields) {
-      printer->Print(
-          "    static $field_description_type$ fields[] = {\n",
-          "field_description_type", field_description_type);
-      printer->Indent();
-      printer->Indent();
-      printer->Indent();
-      for (int i = 0; i < descriptor_->field_count(); ++i) {
-        const FieldGenerator& field_generator =
-            field_generators_.get(sorted_fields[i]);
-        field_generator.GenerateFieldDescription(printer, need_defaults);
-        if (field_generator.needs_textformat_name_support()) {
-          text_format_decode_data.AddString(sorted_fields[i]->number(),
-                                            field_generator.generated_objc_name(),
-                                            field_generator.raw_field_name());
-        }
-      }
-      printer->Outdent();
-      printer->Outdent();
-      printer->Outdent();
-      printer->Print(
-          "    };\n");
-    }
-
-    map<string, string> vars;
-    vars["classname"] = class_name_;
-    vars["rootclassname"] = root_classname_;
-    vars["fields"] = has_fields ? "fields" : "NULL";
-    if (has_fields) {
-      vars["fields_count"] =
-          "(uint32_t)(sizeof(fields) / sizeof(" + field_description_type + "))";
-    } else {
-      vars["fields_count"] = "0";
-    }
-
-    std::vector<string> init_flags;
-    if (need_defaults) {
-      init_flags.push_back("GPBDescriptorInitializationFlag_FieldsWithDefault");
-    }
-    if (descriptor_->options().message_set_wire_format()) {
-      init_flags.push_back("GPBDescriptorInitializationFlag_WireFormat");
-    }
-    vars["init_flags"] = BuildFlagsString(FLAGTYPE_DESCRIPTOR_INITIALIZATION,
-                                          init_flags);
-
-    printer->Print(
-        vars,
-        "    GPBDescriptor *localDescriptor =\n"
-        "        [GPBDescriptor allocDescriptorForClass:[$classname$ class]\n"
-        "                                     rootClass:[$rootclassname$ class]\n"
-        "                                          file:$rootclassname$_FileDescriptor()\n"
-        "                                        fields:$fields$\n"
-        "                                    fieldCount:$fields_count$\n"
-        "                                   storageSize:sizeof($classname$__storage_)\n"
-        "                                         flags:$init_flags$];\n");
-    if (oneof_generators_.size() != 0) {
-      printer->Print(
-          "    static const char *oneofs[] = {\n");
-      for (vector<OneofGenerator*>::iterator iter = oneof_generators_.begin();
-           iter != oneof_generators_.end(); ++iter) {
-        printer->Print(
-            "      \"$name$\",\n",
-            "name", (*iter)->DescriptorName());
-      }
-      printer->Print(
-          "    };\n"
-          "    [localDescriptor setupOneofs:oneofs\n"
-          "                           count:(uint32_t)(sizeof(oneofs) / sizeof(char*))\n"
-          "                   firstHasIndex:$first_has_index$];\n",
-          "first_has_index", oneof_generators_[0]->HasIndexAsString());
-    }
-    if (text_format_decode_data.num_entries() != 0) {
-      const string text_format_data_str(text_format_decode_data.Data());
-      printer->Print(
-          "#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS\n"
-          "    static const char *extraTextFormatInfo =");
-      static const int kBytesPerLine = 40;  // allow for escaping
-      for (int i = 0; i < text_format_data_str.size(); i += kBytesPerLine) {
-        printer->Print(
-            "\n        \"$data$\"",
-            "data", EscapeTrigraphs(
-                CEscape(text_format_data_str.substr(i, kBytesPerLine))));
-      }
-      printer->Print(
-          ";\n"
-          "    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];\n"
-          "#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS\n");
-    }
-    if (sorted_extensions.size() != 0) {
-      printer->Print(
-          "    static const GPBExtensionRange ranges[] = {\n");
-      for (int i = 0; i < sorted_extensions.size(); i++) {
-        printer->Print("      { .start = $start$, .end = $end$ },\n",
-                       "start", SimpleItoa(sorted_extensions[i]->start),
-                       "end", SimpleItoa(sorted_extensions[i]->end));
-      }
-      printer->Print(
-          "    };\n"
-          "    [localDescriptor setupExtensionRanges:ranges\n"
-          "                                    count:(uint32_t)(sizeof(ranges) / sizeof(GPBExtensionRange))];\n");
-    }
-    if (descriptor_->containing_type() != NULL) {
-      string parent_class_name = ClassName(descriptor_->containing_type());
-      printer->Print(
-          "    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol($parent_name$)];\n",
-          "parent_name", parent_class_name);
-    }
-    string suffix_added;
-    ClassName(descriptor_, &suffix_added);
-    if (suffix_added.size() > 0) {
-      printer->Print(
-          "    [localDescriptor setupMessageClassNameSuffix:@\"$suffix$\"];\n",
-          "suffix", suffix_added);
-    }
-    printer->Print(
-        "    NSAssert(descriptor == nil, @\"Startup recursed!\");\n"
-        "    descriptor = localDescriptor;\n"
-        "  }\n"
-        "  return descriptor;\n"
-        "}\n\n"
-        "@end\n\n");
-
-    for (int i = 0; i < descriptor_->field_count(); i++) {
-      field_generators_.get(descriptor_->field(i))
-          .GenerateCFunctionImplementations(printer);
-    }
-
-    for (vector<OneofGenerator*>::iterator iter = oneof_generators_.begin();
-         iter != oneof_generators_.end(); ++iter) {
-      (*iter)->GenerateClearFunctionImplementation(printer);
-    }
-  }
-
-  for (vector<EnumGenerator*>::iterator iter = enum_generators_.begin();
-       iter != enum_generators_.end(); ++iter) {
-    (*iter)->GenerateSource(printer);
-  }
-
-  for (vector<MessageGenerator*>::iterator iter =
-           nested_message_generators_.begin();
-       iter != nested_message_generators_.end(); ++iter) {
-    (*iter)->GenerateSource(printer);
-  }
-}
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_message.h b/src/google/protobuf/compiler/objectivec/objectivec_message.h
deleted file mode 100644
index 910535a..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_message.h
+++ /dev/null
@@ -1,99 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#ifndef GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_MESSAGE_H__
-#define GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_MESSAGE_H__
-
-#include <string>
-#include <set>
-#include <vector>
-#include <google/protobuf/compiler/objectivec/objectivec_field.h>
-#include <google/protobuf/compiler/objectivec/objectivec_helpers.h>
-#include <google/protobuf/compiler/objectivec/objectivec_oneof.h>
-#include <google/protobuf/stubs/common.h>
-
-namespace google {
-namespace protobuf {
-
-namespace io {
-class Printer;  // printer.h
-}  // namespace io
-
-namespace compiler {
-namespace objectivec {
-
-class ExtensionGenerator;
-class EnumGenerator;
-
-class MessageGenerator {
- public:
-  MessageGenerator(const string& root_classname,
-                   const Descriptor* descriptor,
-                   const Options& options);
-  ~MessageGenerator();
-
-  void GenerateStaticVariablesInitialization(io::Printer* printer);
-  void GenerateEnumHeader(io::Printer* printer);
-  void GenerateMessageHeader(io::Printer* printer);
-  void GenerateSource(io::Printer* printer);
-  void GenerateExtensionRegistrationSource(io::Printer* printer);
-  void DetermineForwardDeclarations(set<string>* fwd_decls);
-
-  // Checks if the message or a nested message includes a oneof definition.
-  bool IncludesOneOfDefinition() const;
-
- private:
-  void GenerateParseFromMethodsHeader(io::Printer* printer);
-
-  void GenerateSerializeOneFieldSource(io::Printer* printer,
-                                       const FieldDescriptor* field);
-  void GenerateSerializeOneExtensionRangeSource(
-      io::Printer* printer, const Descriptor::ExtensionRange* range);
-
-  void GenerateMessageDescriptionSource(io::Printer* printer);
-  void GenerateDescriptionOneFieldSource(io::Printer* printer,
-                                         const FieldDescriptor* field);
-
-  const string root_classname_;
-  const Descriptor* descriptor_;
-  FieldGeneratorMap field_generators_;
-  const string class_name_;
-  vector<ExtensionGenerator*> extension_generators_;
-  vector<EnumGenerator*> enum_generators_;
-  vector<MessageGenerator*> nested_message_generators_;
-  vector<OneofGenerator*> oneof_generators_;
-
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(MessageGenerator);
-};
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
-#endif  // GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_MESSAGE_H__
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_message_field.cc b/src/google/protobuf/compiler/objectivec/objectivec_message_field.cc
deleted file mode 100644
index d6ccd6d..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_message_field.cc
+++ /dev/null
@@ -1,108 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#include <map>
-#include <string>
-
-#include <google/protobuf/compiler/objectivec/objectivec_message_field.h>
-#include <google/protobuf/compiler/objectivec/objectivec_helpers.h>
-#include <google/protobuf/io/printer.h>
-#include <google/protobuf/wire_format.h>
-#include <google/protobuf/stubs/strutil.h>
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-namespace {
-
-void SetMessageVariables(const FieldDescriptor* descriptor,
-                         map<string, string>* variables) {
-  const string& message_type = ClassName(descriptor->message_type());
-  (*variables)["type"] = message_type;
-  (*variables)["containing_class"] = ClassName(descriptor->containing_type());
-  (*variables)["storage_type"] = message_type;
-  (*variables)["group_or_message"] =
-      (descriptor->type() == FieldDescriptor::TYPE_GROUP) ? "Group" : "Message";
-
-  (*variables)["dataTypeSpecific_value"] = "GPBStringifySymbol(" + message_type + ")";
-}
-
-}  // namespace
-
-MessageFieldGenerator::MessageFieldGenerator(const FieldDescriptor* descriptor,
-                                             const Options& options)
-    : ObjCObjFieldGenerator(descriptor, options) {
-  SetMessageVariables(descriptor, &variables_);
-}
-
-MessageFieldGenerator::~MessageFieldGenerator() {}
-
-void MessageFieldGenerator::DetermineForwardDeclarations(
-    set<string>* fwd_decls) const {
-  ObjCObjFieldGenerator::DetermineForwardDeclarations(fwd_decls);
-  // Class name is already in "storage_type".
-  fwd_decls->insert("@class " + variable("storage_type"));
-}
-
-bool MessageFieldGenerator::WantsHasProperty(void) const {
-  if (descriptor_->containing_oneof() != NULL) {
-    // If in a oneof, it uses the oneofcase instead of a has bit.
-    return false;
-  }
-  // In both proto2 & proto3, message fields have a has* property to tell
-  // when it is a non default value.
-  return true;
-}
-
-RepeatedMessageFieldGenerator::RepeatedMessageFieldGenerator(
-    const FieldDescriptor* descriptor, const Options& options)
-    : RepeatedFieldGenerator(descriptor, options) {
-  SetMessageVariables(descriptor, &variables_);
-  variables_["array_storage_type"] = "NSMutableArray";
-  variables_["array_property_type"] =
-      "NSMutableArray<" + variables_["storage_type"] + "*>";
-}
-
-RepeatedMessageFieldGenerator::~RepeatedMessageFieldGenerator() {}
-
-void RepeatedMessageFieldGenerator::DetermineForwardDeclarations(
-    set<string>* fwd_decls) const {
-  RepeatedFieldGenerator::DetermineForwardDeclarations(fwd_decls);
-  // Class name is already in "storage_type".
-  fwd_decls->insert("@class " + variable("storage_type"));
-}
-
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_message_field.h b/src/google/protobuf/compiler/objectivec/objectivec_message_field.h
deleted file mode 100644
index d2dba15..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_message_field.h
+++ /dev/null
@@ -1,81 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#ifndef GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_MESSAGE_FIELD_H__
-#define GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_MESSAGE_FIELD_H__
-
-#include <map>
-#include <string>
-#include <google/protobuf/compiler/objectivec/objectivec_field.h>
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-class MessageFieldGenerator : public ObjCObjFieldGenerator {
-  friend FieldGenerator* FieldGenerator::Make(const FieldDescriptor* field,
-                                              const Options& options);
-
- protected:
-  MessageFieldGenerator(const FieldDescriptor* descriptor,
-                        const Options& options);
-  virtual ~MessageFieldGenerator();
-  virtual bool WantsHasProperty(void) const;
-
- public:
-  virtual void DetermineForwardDeclarations(set<string>* fwd_decls) const;
-
- private:
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(MessageFieldGenerator);
-};
-
-class RepeatedMessageFieldGenerator : public RepeatedFieldGenerator {
-  friend FieldGenerator* FieldGenerator::Make(const FieldDescriptor* field,
-                                              const Options& options);
-
- protected:
-  RepeatedMessageFieldGenerator(const FieldDescriptor* descriptor,
-                                const Options& options);
-  virtual ~RepeatedMessageFieldGenerator();
-
- public:
-  virtual void DetermineForwardDeclarations(set<string>* fwd_decls) const;
-
- private:
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(RepeatedMessageFieldGenerator);
-};
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
-
-#endif  // GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_MESSAGE_FIELD_H__
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_oneof.cc b/src/google/protobuf/compiler/objectivec/objectivec_oneof.cc
deleted file mode 100644
index 5531ae2..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_oneof.cc
+++ /dev/null
@@ -1,140 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#include <map>
-#include <string>
-
-#include <google/protobuf/compiler/objectivec/objectivec_oneof.h>
-#include <google/protobuf/compiler/objectivec/objectivec_helpers.h>
-#include <google/protobuf/io/printer.h>
-#include <google/protobuf/stubs/strutil.h>
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-OneofGenerator::OneofGenerator(const OneofDescriptor* descriptor)
-    : descriptor_(descriptor) {
-  variables_["enum_name"] = OneofEnumName(descriptor_);
-  variables_["name"] = OneofName(descriptor_);
-  variables_["capitalized_name"] = OneofNameCapitalized(descriptor_);
-  variables_["raw_index"] = SimpleItoa(descriptor_->index());
-  const Descriptor* msg_descriptor = descriptor_->containing_type();
-  variables_["owning_message_class"] = ClassName(msg_descriptor);
-
-  string comments;
-  SourceLocation location;
-  if (descriptor_->GetSourceLocation(&location)) {
-    comments = BuildCommentsString(location, true);
-  } else {
-    comments = "";
-  }
-  variables_["comments"] = comments;
-}
-
-OneofGenerator::~OneofGenerator() {}
-
-void OneofGenerator::SetOneofIndexBase(int index_base) {
-  int index = descriptor_->index() + index_base;
-  // Flip the sign to mark it as a oneof.
-  variables_["index"] = SimpleItoa(-index);
-}
-
-void OneofGenerator::GenerateCaseEnum(io::Printer* printer) {
-  printer->Print(
-      variables_,
-      "typedef GPB_ENUM($enum_name$) {\n");
-  printer->Indent();
-  printer->Print(
-      variables_,
-      "$enum_name$_GPBUnsetOneOfCase = 0,\n");
-  string enum_name = variables_["enum_name"];
-  for (int j = 0; j < descriptor_->field_count(); j++) {
-    const FieldDescriptor* field = descriptor_->field(j);
-    string field_name = FieldNameCapitalized(field);
-    printer->Print(
-        "$enum_name$_$field_name$ = $field_number$,\n",
-        "enum_name", enum_name,
-        "field_name", field_name,
-        "field_number", SimpleItoa(field->number()));
-  }
-  printer->Outdent();
-  printer->Print(
-      "};\n"
-      "\n");
-}
-
-void OneofGenerator::GeneratePublicCasePropertyDeclaration(
-    io::Printer* printer) {
-  printer->Print(
-      variables_,
-      "$comments$"
-      "@property(nonatomic, readonly) $enum_name$ $name$OneOfCase;\n"
-      "\n");
-}
-
-void OneofGenerator::GenerateClearFunctionDeclaration(io::Printer* printer) {
-  printer->Print(
-      variables_,
-      "/**\n"
-      " * Clears whatever value was set for the oneof '$name$'.\n"
-      " **/\n"
-      "void $owning_message_class$_Clear$capitalized_name$OneOfCase($owning_message_class$ *message);\n");
-}
-
-void OneofGenerator::GeneratePropertyImplementation(io::Printer* printer) {
-  printer->Print(
-      variables_,
-      "@dynamic $name$OneOfCase;\n");
-}
-
-void OneofGenerator::GenerateClearFunctionImplementation(io::Printer* printer) {
-  printer->Print(
-      variables_,
-      "void $owning_message_class$_Clear$capitalized_name$OneOfCase($owning_message_class$ *message) {\n"
-      "  GPBDescriptor *descriptor = [message descriptor];\n"
-      "  GPBOneofDescriptor *oneof = [descriptor.oneofs objectAtIndex:$raw_index$];\n"
-      "  GPBMaybeClearOneof(message, oneof, $index$, 0);\n"
-      "}\n");
-}
-
-string OneofGenerator::DescriptorName(void) const {
-  return variables_.find("name")->second;
-}
-
-string OneofGenerator::HasIndexAsString(void) const {
-  return variables_.find("index")->second;
-}
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_oneof.h b/src/google/protobuf/compiler/objectivec/objectivec_oneof.h
deleted file mode 100644
index 3d9df4d..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_oneof.h
+++ /dev/null
@@ -1,79 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#ifndef GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_ONEOF_H__
-#define GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_ONEOF_H__
-
-#include <string>
-#include <set>
-#include <vector>
-#include <google/protobuf/descriptor.h>
-
-namespace google {
-namespace protobuf {
-namespace io {
-class Printer;  // printer.h
-}
-}
-
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-class OneofGenerator {
- public:
-  explicit OneofGenerator(const OneofDescriptor* descriptor);
-  ~OneofGenerator();
-
-  void SetOneofIndexBase(int index_base);
-
-  void GenerateCaseEnum(io::Printer* printer);
-
-  void GeneratePublicCasePropertyDeclaration(io::Printer* printer);
-  void GenerateClearFunctionDeclaration(io::Printer* printer);
-
-  void GeneratePropertyImplementation(io::Printer* printer);
-  void GenerateClearFunctionImplementation(io::Printer* printer);
-
-  string DescriptorName(void) const;
-  string HasIndexAsString(void) const;
-
- private:
-  const OneofDescriptor* descriptor_;
-  map<string, string> variables_;
-
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(OneofGenerator);
-};
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
-#endif  // GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_ONEOF_H__
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_primitive_field.cc b/src/google/protobuf/compiler/objectivec/objectivec_primitive_field.cc
deleted file mode 100644
index d49350f..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_primitive_field.cc
+++ /dev/null
@@ -1,192 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#include <map>
-#include <string>
-
-#include <google/protobuf/compiler/objectivec/objectivec_primitive_field.h>
-#include <google/protobuf/stubs/common.h>
-#include <google/protobuf/compiler/objectivec/objectivec_helpers.h>
-#include <google/protobuf/io/printer.h>
-#include <google/protobuf/wire_format.h>
-#include <google/protobuf/wire_format_lite_inl.h>
-#include <google/protobuf/stubs/strutil.h>
-#include <google/protobuf/stubs/substitute.h>
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-using internal::WireFormat;
-using internal::WireFormatLite;
-
-namespace {
-
-const char* PrimitiveTypeName(const FieldDescriptor* descriptor) {
-  ObjectiveCType type = GetObjectiveCType(descriptor);
-  switch (type) {
-    case OBJECTIVECTYPE_INT32:
-      return "int32_t";
-    case OBJECTIVECTYPE_UINT32:
-      return "uint32_t";
-    case OBJECTIVECTYPE_INT64:
-      return "int64_t";
-    case OBJECTIVECTYPE_UINT64:
-      return "uint64_t";
-    case OBJECTIVECTYPE_FLOAT:
-      return "float";
-    case OBJECTIVECTYPE_DOUBLE:
-      return "double";
-    case OBJECTIVECTYPE_BOOLEAN:
-      return "BOOL";
-    case OBJECTIVECTYPE_STRING:
-      return "NSString";
-    case OBJECTIVECTYPE_DATA:
-      return "NSData";
-    case OBJECTIVECTYPE_ENUM:
-      return "int32_t";
-    case OBJECTIVECTYPE_MESSAGE:
-      return NULL;  // Messages go through objectivec_message_field.cc|h.
-  }
-
-  // Some compilers report reaching end of function even though all cases of
-  // the enum are handed in the switch.
-  GOOGLE_LOG(FATAL) << "Can't get here.";
-  return NULL;
-}
-
-const char* PrimitiveArrayTypeName(const FieldDescriptor* descriptor) {
-  ObjectiveCType type = GetObjectiveCType(descriptor);
-  switch (type) {
-    case OBJECTIVECTYPE_INT32:
-      return "Int32";
-    case OBJECTIVECTYPE_UINT32:
-      return "UInt32";
-    case OBJECTIVECTYPE_INT64:
-      return "Int64";
-    case OBJECTIVECTYPE_UINT64:
-      return "UInt64";
-    case OBJECTIVECTYPE_FLOAT:
-      return "Float";
-    case OBJECTIVECTYPE_DOUBLE:
-      return "Double";
-    case OBJECTIVECTYPE_BOOLEAN:
-      return "Bool";
-    case OBJECTIVECTYPE_STRING:
-      return "";  // Want NSArray
-    case OBJECTIVECTYPE_DATA:
-      return "";  // Want NSArray
-    case OBJECTIVECTYPE_ENUM:
-      return "Enum";
-    case OBJECTIVECTYPE_MESSAGE:
-      // Want NSArray (but goes through objectivec_message_field.cc|h).
-      return "";
-  }
-
-  // Some compilers report reaching end of function even though all cases of
-  // the enum are handed in the switch.
-  GOOGLE_LOG(FATAL) << "Can't get here.";
-  return NULL;
-}
-
-void SetPrimitiveVariables(const FieldDescriptor* descriptor,
-                           map<string, string>* variables) {
-  std::string primitive_name = PrimitiveTypeName(descriptor);
-  (*variables)["type"] = primitive_name;
-  (*variables)["storage_type"] = primitive_name;
-}
-
-}  // namespace
-
-PrimitiveFieldGenerator::PrimitiveFieldGenerator(
-    const FieldDescriptor* descriptor, const Options& options)
-    : SingleFieldGenerator(descriptor, options) {
-  SetPrimitiveVariables(descriptor, &variables_);
-}
-
-PrimitiveFieldGenerator::~PrimitiveFieldGenerator() {}
-
-void PrimitiveFieldGenerator::GenerateFieldStorageDeclaration(
-    io::Printer* printer) const {
-  if (GetObjectiveCType(descriptor_) == OBJECTIVECTYPE_BOOLEAN) {
-    // Nothing, BOOLs are stored in the has bits.
-  } else {
-    SingleFieldGenerator::GenerateFieldStorageDeclaration(printer);
-  }
-}
-
-int PrimitiveFieldGenerator::ExtraRuntimeHasBitsNeeded(void) const {
-  if (GetObjectiveCType(descriptor_) == OBJECTIVECTYPE_BOOLEAN) {
-    // Reserve a bit for the storage of the boolean.
-    return 1;
-  }
-  return 0;
-}
-
-void PrimitiveFieldGenerator::SetExtraRuntimeHasBitsBase(int has_base) {
-  if (GetObjectiveCType(descriptor_) == OBJECTIVECTYPE_BOOLEAN) {
-    // Set into the offset the has bit to use for the actual value.
-    variables_["storage_offset_value"] = SimpleItoa(has_base);
-    variables_["storage_offset_comment"] =
-        "  // Stored in _has_storage_ to save space.";
-  }
-}
-
-PrimitiveObjFieldGenerator::PrimitiveObjFieldGenerator(
-    const FieldDescriptor* descriptor, const Options& options)
-    : ObjCObjFieldGenerator(descriptor, options) {
-  SetPrimitiveVariables(descriptor, &variables_);
-  variables_["property_storage_attribute"] = "copy";
-}
-
-PrimitiveObjFieldGenerator::~PrimitiveObjFieldGenerator() {}
-
-RepeatedPrimitiveFieldGenerator::RepeatedPrimitiveFieldGenerator(
-    const FieldDescriptor* descriptor, const Options& options)
-    : RepeatedFieldGenerator(descriptor, options) {
-  SetPrimitiveVariables(descriptor, &variables_);
-
-  string base_name = PrimitiveArrayTypeName(descriptor);
-  if (base_name.length()) {
-    variables_["array_storage_type"] = "GPB" + base_name + "Array";
-  } else {
-    variables_["array_storage_type"] = "NSMutableArray";
-    variables_["array_property_type"] =
-        "NSMutableArray<" + variables_["storage_type"] + "*>";
-  }
-}
-
-RepeatedPrimitiveFieldGenerator::~RepeatedPrimitiveFieldGenerator() {}
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
diff --git a/src/google/protobuf/compiler/objectivec/objectivec_primitive_field.h b/src/google/protobuf/compiler/objectivec/objectivec_primitive_field.h
deleted file mode 100644
index 69bb1fd..0000000
--- a/src/google/protobuf/compiler/objectivec/objectivec_primitive_field.h
+++ /dev/null
@@ -1,92 +0,0 @@
-// Protocol Buffers - Google's data interchange format
-// Copyright 2008 Google Inc.  All rights reserved.
-// https://developers.google.com/protocol-buffers/
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//     * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//     * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#ifndef GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_PRIMITIVE_FIELD_H__
-#define GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_PRIMITIVE_FIELD_H__
-
-#include <map>
-#include <string>
-#include <google/protobuf/compiler/objectivec/objectivec_field.h>
-
-namespace google {
-namespace protobuf {
-namespace compiler {
-namespace objectivec {
-
-class PrimitiveFieldGenerator : public SingleFieldGenerator {
-  friend FieldGenerator* FieldGenerator::Make(const FieldDescriptor* field,
-                                              const Options& options);
-
- protected:
-  PrimitiveFieldGenerator(const FieldDescriptor* descriptor,
-                          const Options& options);
-  virtual ~PrimitiveFieldGenerator();
-
-  virtual void GenerateFieldStorageDeclaration(io::Printer* printer) const;
-
-  virtual int ExtraRuntimeHasBitsNeeded(void) const;
-  virtual void SetExtraRuntimeHasBitsBase(int index_base);
-
- private:
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(PrimitiveFieldGenerator);
-};
-
-class PrimitiveObjFieldGenerator : public ObjCObjFieldGenerator {
-  friend FieldGenerator* FieldGenerator::Make(const FieldDescriptor* field,
-                                              const Options& options);
-
- protected:
-  PrimitiveObjFieldGenerator(const FieldDescriptor* descriptor,
-                             const Options& options);
-  virtual ~PrimitiveObjFieldGenerator();
-
- private:
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(PrimitiveObjFieldGenerator);
-};
-
-class RepeatedPrimitiveFieldGenerator : public RepeatedFieldGenerator {
-  friend FieldGenerator* FieldGenerator::Make(const FieldDescriptor* field,
-                                              const Options& options);
-
- protected:
-  RepeatedPrimitiveFieldGenerator(const FieldDescriptor* descriptor,
-                                  const Options& options);
-  virtual ~RepeatedPrimitiveFieldGenerator();
-
- private:
-  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(RepeatedPrimitiveFieldGenerator);
-};
-
-}  // namespace objectivec
-}  // namespace compiler
-}  // namespace protobuf
-}  // namespace google
-
-#endif  // GOOGLE_PROTOBUF_COMPILER_OBJECTIVEC_PRIMITIVE_FIELD_H__
-- 
2.29.2

